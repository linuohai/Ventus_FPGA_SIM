// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module ArrayMultiplier(	// ventus/src/pipeline/Multiplier.scala:149:7
  input         clock,	// ventus/src/pipeline/Multiplier.scala:149:7
                reset,	// ventus/src/pipeline/Multiplier.scala:149:7
  output        io_in_ready,	// ventus/src/pipeline/mul_utils.scala:32:14
  input         io_in_valid,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_0,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_1,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_2,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_3,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_4,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_5,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_6,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_7,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_8,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_9,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_10,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_11,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_12,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_13,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_14,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_mask_15,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [31:0] io_in_bits_a,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_b,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_c,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [1:0]  io_in_bits_ctrl_wid,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [5:0]  io_in_bits_ctrl_alu_fn,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [7:0]  io_in_bits_ctrl_reg_idxw,	// ventus/src/pipeline/mul_utils.scala:32:14
  input         io_in_bits_ctrl_wvd,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_ctrl_wxd,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [7:0]  io_in_bits_ctrl_spike_info_sm_id,	// ventus/src/pipeline/mul_utils.scala:32:14
  input  [31:0] io_in_bits_ctrl_spike_info_pc,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_in_bits_ctrl_spike_info_inst,	// ventus/src/pipeline/mul_utils.scala:32:14
  input         io_out_ready,	// ventus/src/pipeline/mul_utils.scala:32:14
  output        io_out_valid,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_0,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_1,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_2,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_3,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_4,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_5,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_6,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_7,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_8,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_9,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_10,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_11,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_12,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_13,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_14,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_mask_15,	// ventus/src/pipeline/mul_utils.scala:32:14
  output [31:0] io_out_bits_result,	// ventus/src/pipeline/mul_utils.scala:32:14
  output [1:0]  io_out_bits_ctrl_wid,	// ventus/src/pipeline/mul_utils.scala:32:14
  output [7:0]  io_out_bits_ctrl_reg_idxw,	// ventus/src/pipeline/mul_utils.scala:32:14
  output        io_out_bits_ctrl_wvd,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_ctrl_wxd,	// ventus/src/pipeline/mul_utils.scala:32:14
  output [7:0]  io_out_bits_ctrl_spike_info_sm_id,	// ventus/src/pipeline/mul_utils.scala:32:14
  output [31:0] io_out_bits_ctrl_spike_info_pc,	// ventus/src/pipeline/mul_utils.scala:32:14
                io_out_bits_ctrl_spike_info_inst	// ventus/src/pipeline/mul_utils.scala:32:14
);

  wire [65:0] _mulDataModule_io_result;	// ventus/src/pipeline/Multiplier.scala:154:29
  reg         REG;	// ventus/src/pipeline/mul_utils.scala:47:58
  reg         REG_1;	// ventus/src/pipeline/mul_utils.scala:47:58
  wire        _io_in_ready_T_1 = REG & REG_1;	// ventus/src/pipeline/mul_utils.scala:47:58, :49:52
  wire        _GEN = ~io_out_ready & _io_in_ready_T_1;	// ventus/src/pipeline/mul_utils.scala:49:{12,26,52}
  wire [31:0] mul_in1 =
    io_in_bits_ctrl_alu_fn[4:0] == 5'h1A | io_in_bits_ctrl_alu_fn[4:0] == 5'h1B
      ? io_in_bits_c
      : io_in_bits_a;	// ventus/src/pipeline/Multiplier.scala:156:{18,41,46,56,84}
  wire        _GEN_0 = io_in_valid & ~_GEN;	// ventus/src/pipeline/mul_utils.scala:49:{10,26}, :52:45
  reg  [1:0]  r_wid;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [5:0]  r_alu_fn;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [7:0]  r_reg_idxw;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_wvd;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_wxd;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [7:0]  r_spike_info_sm_id;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] r_spike_info_pc;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] r_spike_info_inst;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_0;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_1;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_2;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_3;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_4;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_5;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_6;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_7;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_8;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_9;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_10;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_11;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_12;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_13;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_14;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_1_15;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [1:0]  r_2_wid;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [7:0]  r_2_reg_idxw;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_2_wvd;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_2_wxd;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [7:0]  r_2_spike_info_sm_id;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] r_2_spike_info_pc;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] r_2_spike_info_inst;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_0;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_1;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_2;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_3;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_4;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_5;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_6;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_7;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_8;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_9;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_10;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_11;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_12;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_13;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_14;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg         r_3_15;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] r_4;	// ventus/src/pipeline/mul_utils.scala:54:56
  reg  [31:0] io_out_bits_result_r;	// ventus/src/pipeline/mul_utils.scala:54:56
  always @(posedge clock) begin	// ventus/src/pipeline/Multiplier.scala:149:7
    automatic logic _GEN_1;	// ventus/src/pipeline/mul_utils.scala:49:26
    _GEN_1 = ~io_out_ready & REG_1;	// ventus/src/pipeline/mul_utils.scala:47:58, :49:{12,26}
    if (reset) begin	// ventus/src/pipeline/Multiplier.scala:149:7
      REG <= 1'h0;	// ventus/src/pipeline/mul_utils.scala:47:58
      REG_1 <= 1'h0;	// ventus/src/pipeline/mul_utils.scala:47:58
    end
    else begin	// ventus/src/pipeline/Multiplier.scala:149:7
      if (~_GEN)	// ventus/src/pipeline/mul_utils.scala:49:26
        REG <= io_in_valid;	// ventus/src/pipeline/mul_utils.scala:47:58
      if (~_GEN_1)	// ventus/src/pipeline/mul_utils.scala:49:26
        REG_1 <= REG;	// ventus/src/pipeline/mul_utils.scala:47:58
    end
    if (_GEN_0) begin	// ventus/src/pipeline/mul_utils.scala:52:45
      r_wid <= io_in_bits_ctrl_wid;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_alu_fn <= io_in_bits_ctrl_alu_fn;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_reg_idxw <= io_in_bits_ctrl_reg_idxw;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_wvd <= io_in_bits_ctrl_wvd;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_wxd <= io_in_bits_ctrl_wxd;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_spike_info_sm_id <= io_in_bits_ctrl_spike_info_sm_id;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_spike_info_pc <= io_in_bits_ctrl_spike_info_pc;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_spike_info_inst <= io_in_bits_ctrl_spike_info_inst;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_0 <= io_in_bits_mask_0;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_1 <= io_in_bits_mask_1;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_2 <= io_in_bits_mask_2;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_3 <= io_in_bits_mask_3;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_4 <= io_in_bits_mask_4;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_5 <= io_in_bits_mask_5;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_6 <= io_in_bits_mask_6;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_7 <= io_in_bits_mask_7;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_8 <= io_in_bits_mask_8;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_9 <= io_in_bits_mask_9;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_10 <= io_in_bits_mask_10;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_11 <= io_in_bits_mask_11;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_12 <= io_in_bits_mask_12;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_13 <= io_in_bits_mask_13;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_14 <= io_in_bits_mask_14;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_1_15 <= io_in_bits_mask_15;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_4 <=
        io_in_bits_ctrl_alu_fn[4:0] == 5'h1A | io_in_bits_ctrl_alu_fn[4:0] == 5'h1B
          ? io_in_bits_a
          : io_in_bits_c;	// ventus/src/pipeline/Multiplier.scala:156:{41,46,84}, :158:{18,46,56,84}, ventus/src/pipeline/mul_utils.scala:54:56
    end
    if (REG & ~_GEN_1) begin	// ventus/src/pipeline/mul_utils.scala:47:58, :49:{10,26}, :54:75
      r_2_wid <= r_wid;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_reg_idxw <= r_reg_idxw;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_wvd <= r_wvd;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_wxd <= r_wxd;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_spike_info_sm_id <= r_spike_info_sm_id;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_spike_info_pc <= r_spike_info_pc;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_2_spike_info_inst <= r_spike_info_inst;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_0 <= r_1_0;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_1 <= r_1_1;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_2 <= r_1_2;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_3 <= r_1_3;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_4 <= r_1_4;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_5 <= r_1_5;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_6 <= r_1_6;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_7 <= r_1_7;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_8 <= r_1_8;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_9 <= r_1_9;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_10 <= r_1_10;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_11 <= r_1_11;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_12 <= r_1_12;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_13 <= r_1_13;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_14 <= r_1_14;	// ventus/src/pipeline/mul_utils.scala:54:56
      r_3_15 <= r_1_15;	// ventus/src/pipeline/mul_utils.scala:54:56
    end
    if (REG & ~(~io_out_ready & REG_1))	// ventus/src/pipeline/mul_utils.scala:47:58, :49:12, :54:{75,78,94}
      io_out_bits_result_r <=
        r_alu_fn[4:2] == 3'h6
          ? (r_alu_fn[4:0] == 5'h18 | r_alu_fn[4:0] == 5'h1A
               ? _mulDataModule_io_result[31:0] + r_4
               : r_4 - _mulDataModule_io_result[31:0])
          : r_alu_fn[4:0] == 5'h15 | r_alu_fn[4:0] == 5'h16
              ? _mulDataModule_io_result[63:32]
              : _mulDataModule_io_result[31:0];	// ventus/src/pipeline/ALU.scala:56:{27,32}, ventus/src/pipeline/Multiplier.scala:154:29, :156:46, :178:55, :200:44, :201:{20,25,35,40,65,108}, :204:16, :205:{8,13,24,30,49,70}, ventus/src/pipeline/mul_utils.scala:54:56
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/pipeline/Multiplier.scala:149:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/pipeline/Multiplier.scala:149:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/pipeline/Multiplier.scala:149:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/pipeline/Multiplier.scala:149:7
      automatic logic [31:0] _RANDOM[0:17];	// ventus/src/pipeline/Multiplier.scala:149:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/pipeline/Multiplier.scala:149:7
        `INIT_RANDOM_PROLOG_	// ventus/src/pipeline/Multiplier.scala:149:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/pipeline/Multiplier.scala:149:7
        for (logic [4:0] i = 5'h0; i < 5'h12; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/pipeline/Multiplier.scala:149:7
        end	// ventus/src/pipeline/Multiplier.scala:149:7
        REG = _RANDOM[5'h0][0];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:47:58
        REG_1 = _RANDOM[5'h0][1];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:47:58
        r_wid = _RANDOM[5'h1][3:2];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_alu_fn = {_RANDOM[5'h1][31:28], _RANDOM[5'h2][1:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_reg_idxw = _RANDOM[5'h3][12:5];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_wvd = _RANDOM[5'h3][13];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_wxd = _RANDOM[5'h3][18];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_spike_info_sm_id = {_RANDOM[5'h4][31:26], _RANDOM[5'h5][1:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_spike_info_pc = {_RANDOM[5'h5][31:2], _RANDOM[5'h6][1:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_spike_info_inst = {_RANDOM[5'h6][31:2], _RANDOM[5'h7][1:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_0 = _RANDOM[5'h7][5];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_1 = _RANDOM[5'h7][6];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_2 = _RANDOM[5'h7][7];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_3 = _RANDOM[5'h7][8];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_4 = _RANDOM[5'h7][9];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_5 = _RANDOM[5'h7][10];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_6 = _RANDOM[5'h7][11];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_7 = _RANDOM[5'h7][12];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_8 = _RANDOM[5'h7][13];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_9 = _RANDOM[5'h7][14];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_10 = _RANDOM[5'h7][15];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_11 = _RANDOM[5'h7][16];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_12 = _RANDOM[5'h7][17];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_13 = _RANDOM[5'h7][18];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_14 = _RANDOM[5'h7][19];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_1_15 = _RANDOM[5'h7][20];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_wid = _RANDOM[5'h8][22:21];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_reg_idxw = _RANDOM[5'hA][31:24];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_wvd = _RANDOM[5'hB][0];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_wxd = _RANDOM[5'hB][5];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_spike_info_sm_id = _RANDOM[5'hC][20:13];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_spike_info_pc = {_RANDOM[5'hC][31:21], _RANDOM[5'hD][20:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_2_spike_info_inst = {_RANDOM[5'hD][31:21], _RANDOM[5'hE][20:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_0 = _RANDOM[5'hE][24];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_1 = _RANDOM[5'hE][25];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_2 = _RANDOM[5'hE][26];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_3 = _RANDOM[5'hE][27];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_4 = _RANDOM[5'hE][28];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_5 = _RANDOM[5'hE][29];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_6 = _RANDOM[5'hE][30];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_7 = _RANDOM[5'hE][31];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_8 = _RANDOM[5'hF][0];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_9 = _RANDOM[5'hF][1];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_10 = _RANDOM[5'hF][2];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_11 = _RANDOM[5'hF][3];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_12 = _RANDOM[5'hF][4];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_13 = _RANDOM[5'hF][5];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_14 = _RANDOM[5'hF][6];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_3_15 = _RANDOM[5'hF][7];	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        r_4 = {_RANDOM[5'hF][31:8], _RANDOM[5'h10][7:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
        io_out_bits_result_r = {_RANDOM[5'h10][31:8], _RANDOM[5'h11][7:0]};	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/pipeline/Multiplier.scala:149:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/pipeline/Multiplier.scala:149:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ArrayMulDataModule mulDataModule (	// ventus/src/pipeline/Multiplier.scala:154:29
    .clock           (clock),
    .io_a
      ({(io_in_bits_ctrl_alu_fn[4:0] == 5'h15 | io_in_bits_ctrl_alu_fn[4:0] == 5'h17)
          & mul_in1[31],
        mul_in1}),	// ventus/src/pipeline/Multiplier.scala:156:{18,41}, :178:{27,55,65,93}, ventus/src/pipeline/mul_utils.scala:110:20, :111:41, :118:41
    .io_b
      ({io_in_bits_ctrl_alu_fn[4:0] == 5'h15 & io_in_bits_b[31], io_in_bits_b}),	// ventus/src/pipeline/Multiplier.scala:156:41, :178:55, :179:{27,55}, ventus/src/pipeline/mul_utils.scala:110:20, :111:41, :118:41
    .io_regEnables_0 (_GEN_0),	// ventus/src/pipeline/mul_utils.scala:52:45
    .io_result       (_mulDataModule_io_result)
  );
  assign io_in_ready = ~(~io_out_ready & _io_in_ready_T_1);	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:49:{12,52}, :61:{18,34}
  assign io_out_valid = REG_1;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:47:58
  assign io_out_bits_mask_0 = r_3_0;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_1 = r_3_1;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_2 = r_3_2;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_3 = r_3_3;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_4 = r_3_4;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_5 = r_3_5;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_6 = r_3_6;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_7 = r_3_7;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_8 = r_3_8;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_9 = r_3_9;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_10 = r_3_10;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_11 = r_3_11;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_12 = r_3_12;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_13 = r_3_13;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_14 = r_3_14;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_mask_15 = r_3_15;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_result = io_out_bits_result_r;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_wid = r_2_wid;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_reg_idxw = r_2_reg_idxw;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_wvd = r_2_wvd;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_wxd = r_2_wxd;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_spike_info_sm_id = r_2_spike_info_sm_id;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_spike_info_pc = r_2_spike_info_pc;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
  assign io_out_bits_ctrl_spike_info_inst = r_2_spike_info_inst;	// ventus/src/pipeline/Multiplier.scala:149:7, ventus/src/pipeline/mul_utils.scala:54:56
endmodule

