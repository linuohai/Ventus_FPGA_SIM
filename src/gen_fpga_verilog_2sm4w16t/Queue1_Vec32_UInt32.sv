// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module Queue1_Vec32_UInt32(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input         clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
                reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
                io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [31:0] io_enq_bits_0,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_1,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_2,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_3,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_4,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_5,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_6,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_7,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_8,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_9,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_10,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_11,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_12,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_13,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_14,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_15,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_16,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_17,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_18,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_19,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_20,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_21,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_22,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_23,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_24,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_25,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_26,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_27,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_28,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_29,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_30,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_enq_bits_31,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input         io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output        io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [31:0] io_deq_bits_0,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_1,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_2,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_3,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_4,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_5,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_6,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_7,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_8,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_9,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_10,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_11,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_12,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_13,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_14,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_15,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_16,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_17,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_18,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_19,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_20,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_21,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_22,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_23,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_24,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_25,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_26,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_27,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_28,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_29,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_30,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
                io_deq_bits_31	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg [1023:0] ram;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  reg          full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    automatic logic do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    do_enq = (io_deq_ready | ~full) & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :286:{16,19}, :306:{24,39}
    if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      ram <=
        {io_enq_bits_31,
         io_enq_bits_30,
         io_enq_bits_29,
         io_enq_bits_28,
         io_enq_bits_27,
         io_enq_bits_26,
         io_enq_bits_25,
         io_enq_bits_24,
         io_enq_bits_23,
         io_enq_bits_22,
         io_enq_bits_21,
         io_enq_bits_20,
         io_enq_bits_19,
         io_enq_bits_18,
         io_enq_bits_17,
         io_enq_bits_16,
         io_enq_bits_15,
         io_enq_bits_14,
         io_enq_bits_13,
         io_enq_bits_12,
         io_enq_bits_11,
         io_enq_bits_10,
         io_enq_bits_9,
         io_enq_bits_8,
         io_enq_bits_7,
         io_enq_bits_6,
         io_enq_bits_5,
         io_enq_bits_4,
         io_enq_bits_3,
         io_enq_bits_2,
         io_enq_bits_1,
         io_enq_bits_0};	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (reset)	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    else if (~(do_enq == (io_deq_ready & full)))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
      full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        for (logic [5:0] i = 6'h0; i < 6'h21; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        end	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        ram =
          {_RANDOM[6'h0][31:1],
           _RANDOM[6'h1],
           _RANDOM[6'h2],
           _RANDOM[6'h3],
           _RANDOM[6'h4],
           _RANDOM[6'h5],
           _RANDOM[6'h6],
           _RANDOM[6'h7],
           _RANDOM[6'h8],
           _RANDOM[6'h9],
           _RANDOM[6'hA],
           _RANDOM[6'hB],
           _RANDOM[6'hC],
           _RANDOM[6'hD],
           _RANDOM[6'hE],
           _RANDOM[6'hF],
           _RANDOM[6'h10],
           _RANDOM[6'h11],
           _RANDOM[6'h12],
           _RANDOM[6'h13],
           _RANDOM[6'h14],
           _RANDOM[6'h15],
           _RANDOM[6'h16],
           _RANDOM[6'h17],
           _RANDOM[6'h18],
           _RANDOM[6'h19],
           _RANDOM[6'h1A],
           _RANDOM[6'h1B],
           _RANDOM[6'h1C],
           _RANDOM[6'h1D],
           _RANDOM[6'h1E],
           _RANDOM[6'h1F],
           _RANDOM[6'h20][0]};	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
        full = _RANDOM[6'h0][0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_deq_valid = full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
  assign io_deq_bits_0 = ram[31:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_1 = ram[63:32];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_2 = ram[95:64];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_3 = ram[127:96];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_4 = ram[159:128];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_5 = ram[191:160];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_6 = ram[223:192];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_7 = ram[255:224];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_8 = ram[287:256];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_9 = ram[319:288];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_10 = ram[351:320];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_11 = ram[383:352];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_12 = ram[415:384];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_13 = ram[447:416];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_14 = ram[479:448];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_15 = ram[511:480];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_16 = ram[543:512];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_17 = ram[575:544];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_18 = ram[607:576];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_19 = ram[639:608];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_20 = ram[671:640];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_21 = ram[703:672];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_22 = ram[735:704];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_23 = ram[767:736];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_24 = ram[799:768];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_25 = ram[831:800];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_26 = ram[863:832];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_27 = ram[895:864];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_28 = ram[927:896];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_29 = ram[959:928];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_30 = ram[991:960];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
  assign io_deq_bits_31 = ram[1023:992];	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :256:91
endmodule

