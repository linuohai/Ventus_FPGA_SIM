// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module TininessRounder(	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:58:7
  input         io_in_sign,	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:60:14
  input  [26:0] io_in_sig,	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:60:14
  input  [2:0]  io_rm,	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:60:14
  output        io_tininess	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:60:14
);

  wire _rounder_io_cout;	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:44:25
  RoundingUnit rounder (	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:44:25
    .io_in       (io_in_sig[24:2]),	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:45:33, :67:19
    .io_roundIn  (io_in_sig[1]),	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:46:{38,50}, :67:19
    .io_stickyIn (io_in_sig[0]),	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:47:39, :67:19
    .io_signIn   (io_in_sign),
    .io_rm       (io_rm),
    .io_out      (/* unused */),
    .io_inexact  (/* unused */),
    .io_cout     (_rounder_io_cout)
  );
  assign io_tininess =
    io_in_sig[26:25] == 2'h0 | io_in_sig[26:25] == 2'h1 & ~_rounder_io_cout;	// dependencies/fpuv2/fudian/src/main/scala/fudian/RoundingUnit.scala:44:25, :58:7, :73:{32,36,53}, :74:{24,41,44}
endmodule

