// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module MSHR_1(	// ventus/src/L1Cache/L1MSHR.scala:79:7
  input          clock,	// ventus/src/L1Cache/L1MSHR.scala:79:7
                 reset,	// ventus/src/L1Cache/L1MSHR.scala:79:7
                 io_probe_valid,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input  [24:0]  io_probe_bits_blockAddr,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output [2:0]   io_probeOut_st1_probeStatus,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output [1:0]   io_probeOut_st1_a_source,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output         io_missReq_ready,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input          io_missReq_valid,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input  [24:0]  io_missReq_bits_blockAddr,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input  [161:0] io_missReq_bits_targetInfo,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output         io_missRspIn_ready,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input          io_missRspIn_valid,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input  [1:0]   io_missRspIn_bits_instrId,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input          io_missRspOut_ready,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output         io_missRspOut_valid,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output [161:0] io_missRspOut_bits_targetInfo,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output [24:0]  io_missRspOut_bits_blockAddr,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output         io_empty,	// ventus/src/L1Cache/L1MSHR.scala:80:14
                 io_probestatus,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output [2:0]   io_mshrStatus_st0,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  input          io_stage2_ready,	// ventus/src/L1Cache/L1MSHR.scala:80:14
                 io_stage1_ready,	// ventus/src/L1Cache/L1MSHR.scala:80:14
  output         io_releasing_stall	// ventus/src/L1Cache/L1MSHR.scala:80:14
);

  wire              _io_missRspIn_ready_T_7;	// ventus/src/L1Cache/L1MSHR.scala:320:102
  wire              _io_missReq_ready_T_2;	// ventus/src/L1Cache/L1MSHR.scala:295:50
  wire [3:0]        entryMatchProbe;	// ventus/src/L1Cache/L1MSHR.scala:187:90
  wire              _missRspOut_st1_io_enq_ready;	// ventus/src/L1Cache/L1MSHR.scala:332:30
  wire              _missRspOut_st1_io_deq_valid;	// ventus/src/L1Cache/L1MSHR.scala:332:30
  wire [24:0]       _missRspOut_st1_io_deq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:332:30
  wire              _entryStatus_io_alm_full;	// ventus/src/L1Cache/L1MSHR.scala:152:27
  wire              _entryStatus_io_full;	// ventus/src/L1Cache/L1MSHR.scala:152:27
  wire [1:0]        _entryStatus_io_next;	// ventus/src/L1Cache/L1MSHR.scala:152:27
  wire              _subentryStatusForRsp_io_next2cancel;	// ventus/src/L1Cache/L1MSHR.scala:148:36
  wire [1:0]        _subentryStatusForRsp_io_used;	// ventus/src/L1Cache/L1MSHR.scala:148:36
  wire              _subentryStatus_io_alm_full;	// ventus/src/L1Cache/L1MSHR.scala:144:30
  wire              _subentryStatus_io_full;	// ventus/src/L1Cache/L1MSHR.scala:144:30
  wire              _subentryStatus_io_next;	// ventus/src/L1Cache/L1MSHR.scala:144:30
  wire              _MSHR_st1_io_deq_valid;	// ventus/src/L1Cache/L1MSHR.scala:108:24
  wire [3:0]        _MSHR_st1_io_deq_bits_entryMatchProbe;	// ventus/src/L1Cache/L1MSHR.scala:108:24
  wire [1:0]        _MSHR_st1_io_deq_bits_subEntryIdx;	// ventus/src/L1Cache/L1MSHR.scala:108:24
  reg  [24:0]       blockAddr_Access_0;	// ventus/src/L1Cache/L1MSHR.scala:100:33
  reg  [24:0]       blockAddr_Access_1;	// ventus/src/L1Cache/L1MSHR.scala:100:33
  reg  [24:0]       blockAddr_Access_2;	// ventus/src/L1Cache/L1MSHR.scala:100:33
  reg  [24:0]       blockAddr_Access_3;	// ventus/src/L1Cache/L1MSHR.scala:100:33
  reg  [161:0]      targetInfo_Accesss_0_0;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_0_1;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_1_0;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_1_1;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_2_0;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_2_1;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_3_0;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg  [161:0]      targetInfo_Accesss_3_1;	// ventus/src/L1Cache/L1MSHR.scala:102:35
  reg               subentry_valid_0_0;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_0_1;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_1_0;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_1_1;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_2_0;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_2_1;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_3_0;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  reg               subentry_valid_3_1;	// ventus/src/L1Cache/L1MSHR.scala:105:31
  wire [1:0]        _entry_valid_T_2 = {subentry_valid_1_0, subentry_valid_1_1};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :106:55
  wire [1:0]        _entry_valid_T_4 = {subentry_valid_2_0, subentry_valid_2_1};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :106:55
  wire [1:0]        _entry_valid_T_6 = {subentry_valid_3_0, subentry_valid_3_1};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :106:55
  wire [3:0]        entry_valid =
    {|_entry_valid_T_6,
     |_entry_valid_T_4,
     |_entry_valid_T_2,
     |{subentry_valid_0_0, subentry_valid_0_1}};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :106:{28,55,59}
  reg               releasing_stall_0;	// ventus/src/L1Cache/L1MSHR.scala:109:32
  reg               releasing_stall_1;	// ventus/src/L1Cache/L1MSHR.scala:109:32
  reg               releasing_stall_2;	// ventus/src/L1Cache/L1MSHR.scala:109:32
  reg               releasing_stall_3;	// ventus/src/L1Cache/L1MSHR.scala:109:32
  wire [1:0]        _subentrySelectedForReq_T_4 =
    {|(entryMatchProbe[3:2]), entryMatchProbe[3] | entryMatchProbe[1]};	// src/main/scala/chisel3/util/OneHot.scala:30:18, :31:18, :32:{10,14,28}, ventus/src/L1Cache/L1MSHR.scala:187:90
  wire [3:0]        _GEN =
    {{subentry_valid_3_0},
     {subentry_valid_2_0},
     {subentry_valid_1_0},
     {subentry_valid_0_0}};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :143:35
  wire [3:0]        _GEN_0 =
    {{subentry_valid_3_1},
     {subentry_valid_2_1},
     {subentry_valid_1_1},
     {subentry_valid_0_1}};	// ventus/src/L1Cache/L1MSHR.scala:105:31, :143:35
  reg  [2:0]        mshrStatus_st1_r;	// ventus/src/L1Cache/L1MSHR.scala:156:33
  assign entryMatchProbe =
    {blockAddr_Access_3 == io_probe_bits_blockAddr,
     blockAddr_Access_2 == io_probe_bits_blockAddr,
     blockAddr_Access_1 == io_probe_bits_blockAddr,
     blockAddr_Access_0 == io_probe_bits_blockAddr} & entry_valid;	// ventus/src/L1Cache/L1MSHR.scala:100:33, :106:28, :187:{31,59,90}
  wire              _GEN_1 = ~_io_missReq_ready_T_2 & io_missReq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:295:{23,50}
  wire [1:0]        entryMatchProbeid_reg_hi_1 =
    {blockAddr_Access_3 == io_missReq_bits_blockAddr,
     blockAddr_Access_2 == io_missReq_bits_blockAddr}
    & {|_entry_valid_T_6, |_entry_valid_T_4};	// src/main/scala/chisel3/util/OneHot.scala:30:18, ventus/src/L1Cache/L1MSHR.scala:100:33, :106:{55,59}, :192:{74,107}
  wire              primaryMiss_st0 = entryMatchProbe == 4'h0;	// ventus/src/L1Cache/L1MSHR.scala:111:48, :187:90, :199:43
  wire [2:0]        _GEN_2 = {2'h1, _subentryStatus_io_full};	// ventus/src/L1Cache/L1MSHR.scala:144:30, :189:45, :228:26, :229:26, :233:26
  wire              _GEN_3 = mshrStatus_st1_r == 3'h1;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :214:24, :238:27
  wire [2:0]        mshrStatus_st1_w =
    (|_MSHR_st1_io_deq_bits_entryMatchProbe) & (mshrStatus_st1_r == 3'h0 | _GEN_3)
    & io_stage2_ready
      ? _GEN_2
      : mshrStatus_st1_r;	// ventus/src/L1Cache/L1MSHR.scala:108:24, :156:33, :198:60, :228:26, :229:26, :233:26, :238:27, :274:{43,51,79,99}, :275:24, :281:22
  wire              _io_missRspIn_ready_T_2 = mshrStatus_st1_w == 3'h3;	// ventus/src/L1Cache/L1MSHR.scala:274:99, :275:24, :276:24, :281:22, :295:70
  assign _io_missReq_ready_T_2 = mshrStatus_st1_w == 3'h1 | _io_missRspIn_ready_T_2;	// ventus/src/L1Cache/L1MSHR.scala:214:24, :274:99, :275:24, :281:22, :295:{42,50,70}
  wire              _GEN_4 = ~_io_missRspIn_ready_T_7 & io_missRspIn_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:319:25, :320:102
  `ifndef SYNTHESIS	// ventus/src/L1Cache/L1MSHR.scala:196:9
    always @(posedge clock) begin	// ventus/src/L1Cache/L1MSHR.scala:196:9
      automatic logic [2:0] _GEN_5 =
        {1'h0, {1'h0, entryMatchProbe[0]} + {1'h0, entryMatchProbe[1]}}
        + {1'h0, {1'h0, entryMatchProbe[2]} + {1'h0, entryMatchProbe[3]}};	// src/main/scala/chisel3/util/OneHot.scala:30:18, :31:18, ventus/src/L1Cache/L1MSHR.scala:105:68, :187:90, :196:18
      if (~reset & (|(_GEN_5[2:1]))) begin	// ventus/src/L1Cache/L1MSHR.scala:196:{9,18,36}
        if (`ASSERT_VERBOSE_COND_)	// ventus/src/L1Cache/L1MSHR.scala:196:9
          $error("Assertion failed\n    at L1MSHR.scala:196 assert(PopCount(entryMatchProbe) <= 1.U)\n");	// ventus/src/L1Cache/L1MSHR.scala:196:9
        if (`STOP_COND_)	// ventus/src/L1Cache/L1MSHR.scala:196:9
          $fatal;	// ventus/src/L1Cache/L1MSHR.scala:196:9
      end
      if (~reset & ~(~_GEN_1 | _GEN_1 & ~_GEN_4)) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:196:9, :296:{9,10,27,47,50}
        if (`ASSERT_VERBOSE_COND_)	// ventus/src/L1Cache/L1MSHR.scala:296:9
          $error("Assertion failed: MSHR cant have Req & Rsp valid in same cycle, later the prior\n    at L1MSHR.scala:296 assert(!io.missReq.fire || (io.missReq.fire && !io.missRspIn.fire), \"MSHR cant have Req & Rsp valid in same cycle, later the prior\")\n");	// ventus/src/L1Cache/L1MSHR.scala:296:9
        if (`STOP_COND_)	// ventus/src/L1Cache/L1MSHR.scala:296:9
          $fatal;	// ventus/src/L1Cache/L1MSHR.scala:296:9
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire [1:0]        real_SRAMAddrUp =
    (|_MSHR_st1_io_deq_bits_entryMatchProbe)
      ? {|(_MSHR_st1_io_deq_bits_entryMatchProbe[3:2]),
         _MSHR_st1_io_deq_bits_entryMatchProbe[3]
           | _MSHR_st1_io_deq_bits_entryMatchProbe[1]}
      : _entryStatus_io_next;	// src/main/scala/chisel3/util/OneHot.scala:30:18, :31:18, :32:{10,14,28}, ventus/src/L1Cache/L1MSHR.scala:108:24, :152:27, :198:60, :297:28
  wire [1:0]        _GEN_6 =
    {|entryMatchProbeid_reg_hi_1,
     entryMatchProbeid_reg_hi_1[1] | blockAddr_Access_1 == io_missReq_bits_blockAddr
       & (|_entry_valid_T_2)};	// src/main/scala/chisel3/util/OneHot.scala:30:18, :31:18, :32:{14,28}, ventus/src/L1Cache/L1MSHR.scala:100:33, :106:{55,59}, :192:{27,74,107}
  assign _io_missRspIn_ready_T_7 =
    (|_subentryStatusForRsp_io_used)
    | (mshrStatus_st1_w == 3'h4 | _io_missRspIn_ready_T_2)
    & _subentryStatusForRsp_io_used == 2'h1 | io_missReq_valid;	// ventus/src/L1Cache/L1MSHR.scala:148:36, :189:45, :241:24, :274:99, :275:24, :281:22, :295:70, :319:57, :320:{24,32,61,93,102}
  wire [3:0][161:0] _GEN_7 =
    {{targetInfo_Accesss_3_0},
     {targetInfo_Accesss_2_0},
     {targetInfo_Accesss_1_0},
     {targetInfo_Accesss_0_0}};	// ventus/src/L1Cache/L1MSHR.scala:102:35, :334:41
  wire [3:0][161:0] _GEN_8 =
    {{targetInfo_Accesss_3_1},
     {targetInfo_Accesss_2_1},
     {targetInfo_Accesss_1_1},
     {targetInfo_Accesss_0_1}};	// ventus/src/L1Cache/L1MSHR.scala:102:35, :334:41
  wire [3:0][24:0]  _GEN_9 =
    {{blockAddr_Access_3},
     {blockAddr_Access_2},
     {blockAddr_Access_1},
     {blockAddr_Access_0}};	// ventus/src/L1Cache/L1MSHR.scala:100:33, :335:40
  always @(posedge clock) begin	// ventus/src/L1Cache/L1MSHR.scala:79:7
    if (reset) begin	// ventus/src/L1Cache/L1MSHR.scala:79:7
      blockAddr_Access_0 <= 25'h0;	// ventus/src/L1Cache/L1MSHR.scala:100:{33,41}
      blockAddr_Access_1 <= 25'h0;	// ventus/src/L1Cache/L1MSHR.scala:100:{33,41}
      blockAddr_Access_2 <= 25'h0;	// ventus/src/L1Cache/L1MSHR.scala:100:{33,41}
      blockAddr_Access_3 <= 25'h0;	// ventus/src/L1Cache/L1MSHR.scala:100:{33,41}
      targetInfo_Accesss_0_0 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_0_1 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_1_0 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_1_1 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_2_0 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_2_1 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_3_0 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      targetInfo_Accesss_3_1 <= 162'h0;	// ventus/src/L1Cache/L1MSHR.scala:102:{35,72}
      subentry_valid_0_0 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_0_1 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_1_0 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_1_1 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_2_0 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_2_1 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_3_0 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      subentry_valid_3_1 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:{31,68}
      releasing_stall_0 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:68, :109:32
      releasing_stall_1 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:68, :109:32
      releasing_stall_2 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:68, :109:32
      releasing_stall_3 <= 1'h0;	// ventus/src/L1Cache/L1MSHR.scala:105:68, :109:32
      mshrStatus_st1_r <= 3'h0;	// ventus/src/L1Cache/L1MSHR.scala:156:33
    end
    else begin	// ventus/src/L1Cache/L1MSHR.scala:79:7
      automatic logic _GEN_10 = _GEN_1 & io_stage1_ready;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:188:26
      automatic logic _GEN_11 = _GEN_10 & mshrStatus_st1_w == 3'h0;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :188:{26,51,71}, :274:99, :275:24, :281:22
      automatic logic _GEN_12 = _entryStatus_io_next == 2'h0;	// ventus/src/L1Cache/L1MSHR.scala:101:39, :152:27, :189:45
      automatic logic _GEN_13 = _entryStatus_io_next == 2'h1;	// ventus/src/L1Cache/L1MSHR.scala:152:27, :189:45
      automatic logic _GEN_14 = _entryStatus_io_next == 2'h2;	// ventus/src/L1Cache/L1MSHR.scala:152:27, :189:45
      automatic logic real_SRAMAddrDown =
        (|_MSHR_st1_io_deq_bits_entryMatchProbe) & _MSHR_st1_io_deq_bits_subEntryIdx[0];	// ventus/src/L1Cache/L1MSHR.scala:108:24, :198:60, :298:30
      automatic logic _GEN_15 = real_SRAMAddrUp == 2'h0;	// ventus/src/L1Cache/L1MSHR.scala:101:39, :297:28, :300:60
      automatic logic _GEN_16 = real_SRAMAddrUp == 2'h1;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :297:28, :300:60
      automatic logic _GEN_17 = real_SRAMAddrUp == 2'h2;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :297:28, :300:60
      automatic logic _GEN_18 = io_stage1_ready & _MSHR_st1_io_deq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:108:24
      automatic logic _GEN_19 = io_missRspIn_bits_instrId == 2'h0;	// ventus/src/L1Cache/L1MSHR.scala:101:39, :350:31
      automatic logic _GEN_20 =
        _MSHR_st1_io_deq_bits_subEntryIdx == 2'h0 & _GEN_1
        & (|_MSHR_st1_io_deq_bits_entryMatchProbe) & _GEN_18;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:101:39, :108:24, :198:60, :354:32, :355:40
      automatic logic _GEN_21 = _GEN_6 == 2'h0;	// ventus/src/L1Cache/L1MSHR.scala:101:39, :192:27, :355:80
      automatic logic _GEN_22 =
        _MSHR_st1_io_deq_bits_subEntryIdx == 2'h1 & _GEN_1
        & (|_MSHR_st1_io_deq_bits_entryMatchProbe) & _GEN_18;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:108:24, :189:45, :198:60, :354:32, :355:40
      automatic logic _GEN_23 = io_missRspIn_bits_instrId == 2'h1;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :350:31
      automatic logic _GEN_24 = _GEN_6 == 2'h1;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :192:27, :355:80
      automatic logic _GEN_25 = io_missRspIn_bits_instrId == 2'h2;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :350:31
      automatic logic _GEN_26 = _GEN_6 == 2'h2;	// ventus/src/L1Cache/L1MSHR.scala:189:45, :192:27, :355:80
      if (_GEN_11 & _GEN_12)	// ventus/src/L1Cache/L1MSHR.scala:100:33, :188:{51,80}, :189:45
        blockAddr_Access_0 <= io_missReq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:100:33
      if (_GEN_11 & _GEN_13)	// ventus/src/L1Cache/L1MSHR.scala:100:33, :188:{51,80}, :189:45
        blockAddr_Access_1 <= io_missReq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:100:33
      if (_GEN_11 & _GEN_14)	// ventus/src/L1Cache/L1MSHR.scala:100:33, :188:{51,80}, :189:45
        blockAddr_Access_2 <= io_missReq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:100:33
      if (_GEN_11 & (&_entryStatus_io_next))	// ventus/src/L1Cache/L1MSHR.scala:100:33, :152:27, :188:{51,80}, :189:45
        blockAddr_Access_3 <= io_missReq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:100:33
      if (_GEN_10 & _GEN_15 & ~real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_0_0 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & _GEN_15 & real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_0_1 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & _GEN_16 & ~real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_1_0 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & _GEN_16 & real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_1_1 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & _GEN_17 & ~real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_2_0 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & _GEN_17 & real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :298:30, :299:50, :300:60
        targetInfo_Accesss_2_1 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & (&real_SRAMAddrUp) & ~real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :297:28, :298:30, :299:50, :300:60
        targetInfo_Accesss_3_0 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      if (_GEN_10 & (&real_SRAMAddrUp) & real_SRAMAddrDown)	// ventus/src/L1Cache/L1MSHR.scala:102:35, :188:26, :297:28, :298:30, :299:50, :300:60
        targetInfo_Accesss_3_1 <= io_missReq_bits_targetInfo;	// ventus/src/L1Cache/L1MSHR.scala:102:35
      subentry_valid_0_0 <=
        _GEN_12 & _GEN_1 & _GEN_18 & ~(|_MSHR_st1_io_deq_bits_entryMatchProbe)
        | ~(_GEN_19 & ~_subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
            & _missRspOut_st1_io_enq_ready) & (_GEN_20 & _GEN_21 | subentry_valid_0_0);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:105:31, :108:24, :148:36, :189:45, :198:60, :201:21, :332:30, :348:{77,93}, :349:41, :350:{31,72}, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_0_1 <=
        ~(_GEN_19 & _subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
          & _missRspOut_st1_io_enq_ready) & (_GEN_22 & _GEN_21 | subentry_valid_0_1);	// ventus/src/L1Cache/L1MSHR.scala:105:31, :148:36, :332:30, :350:31, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_1_0 <=
        _GEN_13 & _GEN_1 & _GEN_18 & ~(|_MSHR_st1_io_deq_bits_entryMatchProbe)
        | ~(_GEN_23 & ~_subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
            & _missRspOut_st1_io_enq_ready) & (_GEN_20 & _GEN_24 | subentry_valid_1_0);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:105:31, :108:24, :148:36, :189:45, :198:60, :201:21, :332:30, :348:{77,93}, :349:41, :350:{31,72}, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_1_1 <=
        ~(_GEN_23 & _subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
          & _missRspOut_st1_io_enq_ready) & (_GEN_22 & _GEN_24 | subentry_valid_1_1);	// ventus/src/L1Cache/L1MSHR.scala:105:31, :148:36, :332:30, :350:31, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_2_0 <=
        _GEN_14 & _GEN_1 & _GEN_18 & ~(|_MSHR_st1_io_deq_bits_entryMatchProbe)
        | ~(_GEN_25 & ~_subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
            & _missRspOut_st1_io_enq_ready) & (_GEN_20 & _GEN_26 | subentry_valid_2_0);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:105:31, :108:24, :148:36, :189:45, :198:60, :201:21, :332:30, :348:{77,93}, :349:41, :350:{31,72}, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_2_1 <=
        ~(_GEN_25 & _subentryStatusForRsp_io_next2cancel & io_missRspIn_valid
          & _missRspOut_st1_io_enq_ready) & (_GEN_22 & _GEN_26 | subentry_valid_2_1);	// ventus/src/L1Cache/L1MSHR.scala:105:31, :148:36, :332:30, :350:31, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_3_0 <=
        (&_entryStatus_io_next) & _GEN_1 & _GEN_18
        & ~(|_MSHR_st1_io_deq_bits_entryMatchProbe)
        | ~((&io_missRspIn_bits_instrId) & ~_subentryStatusForRsp_io_next2cancel
            & io_missRspIn_valid & _missRspOut_st1_io_enq_ready)
        & (_GEN_20 & (&_GEN_6) | subentry_valid_3_0);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:105:31, :108:24, :148:36, :152:27, :189:45, :192:27, :198:60, :201:21, :332:30, :348:{77,93}, :349:41, :350:{31,72}, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      subentry_valid_3_1 <=
        ~((&io_missRspIn_bits_instrId) & _subentryStatusForRsp_io_next2cancel
          & io_missRspIn_valid & _missRspOut_st1_io_enq_ready)
        & (_GEN_22 & (&_GEN_6) | subentry_valid_3_1);	// ventus/src/L1Cache/L1MSHR.scala:105:31, :148:36, :192:27, :332:30, :350:31, :351:{28,60}, :352:41, :355:{40,64,80,107}, :356:39
      releasing_stall_0 <=
        ~(_GEN_19 & _GEN_4 & releasing_stall_0)
        & (_GEN_19 & io_missRspIn_valid & ~releasing_stall_0 | releasing_stall_0);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:109:32, :350:31, :361:{66,93}, :362:30, :363:{73,76,101}, :364:30
      releasing_stall_1 <=
        ~(_GEN_23 & _GEN_4 & releasing_stall_1)
        & (_GEN_23 & io_missRspIn_valid & ~releasing_stall_1 | releasing_stall_1);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:109:32, :350:31, :361:{66,93}, :362:30, :363:{73,76,101}, :364:30
      releasing_stall_2 <=
        ~(_GEN_25 & _GEN_4 & releasing_stall_2)
        & (_GEN_25 & io_missRspIn_valid & ~releasing_stall_2 | releasing_stall_2);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:109:32, :350:31, :361:{66,93}, :362:30, :363:{73,76,101}, :364:30
      releasing_stall_3 <=
        ~((&io_missRspIn_bits_instrId) & _GEN_4 & releasing_stall_3)
        & ((&io_missRspIn_bits_instrId) & io_missRspIn_valid & ~releasing_stall_3
           | releasing_stall_3);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:109:32, :350:31, :361:{66,93}, :362:30, :363:{73,76,101}, :364:30
      if (_GEN_1 & ~io_probe_valid & io_stage2_ready) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:212:{27,43}
        if (~(|_MSHR_st1_io_deq_bits_entryMatchProbe) & _entryStatus_io_alm_full)	// ventus/src/L1Cache/L1MSHR.scala:108:24, :152:27, :198:60, :201:21, :213:22
          mshrStatus_st1_r <= 3'h1;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :214:24
        else if ((|_MSHR_st1_io_deq_bits_entryMatchProbe) & _subentryStatus_io_alm_full)	// ventus/src/L1Cache/L1MSHR.scala:108:24, :144:30, :198:60, :215:30
          mshrStatus_st1_r <= 3'h3;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :276:24
      end
      else if (io_probe_valid) begin	// ventus/src/L1Cache/L1MSHR.scala:80:14
        if (primaryMiss_st0)	// ventus/src/L1Cache/L1MSHR.scala:199:43
          mshrStatus_st1_r <=
            {2'h0, _entryStatus_io_full | _entryStatus_io_alm_full & _GEN_1};	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/L1Cache/L1MSHR.scala:101:39, :152:27, :156:33, :220:{26,47,68}, :221:26, :225:26
        else	// ventus/src/L1Cache/L1MSHR.scala:199:43
          mshrStatus_st1_r <= _GEN_2;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :228:26, :229:26, :233:26
      end
      else if (io_missRspIn_valid) begin	// ventus/src/L1Cache/L1MSHR.scala:80:14
        if (_GEN_3 | mshrStatus_st1_r == 3'h2)	// ventus/src/L1Cache/L1MSHR.scala:156:33, :238:{27,35,55}, :278:24
          mshrStatus_st1_r <= 3'h0;	// ventus/src/L1Cache/L1MSHR.scala:156:33
        else if (mshrStatus_st1_r == 3'h3 & _subentryStatusForRsp_io_used == 2'h1)	// ventus/src/L1Cache/L1MSHR.scala:148:36, :156:33, :189:45, :240:{33,41,73}, :276:24
          mshrStatus_st1_r <= 3'h4;	// ventus/src/L1Cache/L1MSHR.scala:156:33, :241:24
        else if (mshrStatus_st1_r == 3'h4 & _subentryStatusForRsp_io_used == 2'h0)	// ventus/src/L1Cache/L1MSHR.scala:101:39, :148:36, :156:33, :241:24, :242:{33,41,73}
          mshrStatus_st1_r <= 3'h0;	// ventus/src/L1Cache/L1MSHR.scala:156:33
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/L1Cache/L1MSHR.scala:79:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/L1MSHR.scala:79:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/L1MSHR.scala:79:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/L1Cache/L1MSHR.scala:79:7
      automatic logic [31:0] _RANDOM[0:44];	// ventus/src/L1Cache/L1MSHR.scala:79:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/L1MSHR.scala:79:7
        `INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/L1MSHR.scala:79:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/L1Cache/L1MSHR.scala:79:7
        for (logic [5:0] i = 6'h0; i < 6'h2D; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/L1Cache/L1MSHR.scala:79:7
        end	// ventus/src/L1Cache/L1MSHR.scala:79:7
        blockAddr_Access_0 = _RANDOM[6'h0][24:0];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :100:33
        blockAddr_Access_1 = {_RANDOM[6'h0][31:25], _RANDOM[6'h1][17:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :100:33
        blockAddr_Access_2 = {_RANDOM[6'h1][31:18], _RANDOM[6'h2][10:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :100:33
        blockAddr_Access_3 = {_RANDOM[6'h2][31:11], _RANDOM[6'h3][3:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :100:33
        targetInfo_Accesss_0_0 =
          {_RANDOM[6'h3][31:12],
           _RANDOM[6'h4],
           _RANDOM[6'h5],
           _RANDOM[6'h6],
           _RANDOM[6'h7],
           _RANDOM[6'h8][13:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :100:33, :102:35
        targetInfo_Accesss_0_1 =
          {_RANDOM[6'h8][31:14],
           _RANDOM[6'h9],
           _RANDOM[6'hA],
           _RANDOM[6'hB],
           _RANDOM[6'hC],
           _RANDOM[6'hD][15:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_1_0 =
          {_RANDOM[6'hD][31:16],
           _RANDOM[6'hE],
           _RANDOM[6'hF],
           _RANDOM[6'h10],
           _RANDOM[6'h11],
           _RANDOM[6'h12][17:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_1_1 =
          {_RANDOM[6'h12][31:18],
           _RANDOM[6'h13],
           _RANDOM[6'h14],
           _RANDOM[6'h15],
           _RANDOM[6'h16],
           _RANDOM[6'h17][19:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_2_0 =
          {_RANDOM[6'h17][31:20],
           _RANDOM[6'h18],
           _RANDOM[6'h19],
           _RANDOM[6'h1A],
           _RANDOM[6'h1B],
           _RANDOM[6'h1C][21:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_2_1 =
          {_RANDOM[6'h1C][31:22],
           _RANDOM[6'h1D],
           _RANDOM[6'h1E],
           _RANDOM[6'h1F],
           _RANDOM[6'h20],
           _RANDOM[6'h21][23:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_3_0 =
          {_RANDOM[6'h21][31:24],
           _RANDOM[6'h22],
           _RANDOM[6'h23],
           _RANDOM[6'h24],
           _RANDOM[6'h25],
           _RANDOM[6'h26][25:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        targetInfo_Accesss_3_1 =
          {_RANDOM[6'h26][31:26],
           _RANDOM[6'h27],
           _RANDOM[6'h28],
           _RANDOM[6'h29],
           _RANDOM[6'h2A],
           _RANDOM[6'h2B][27:0]};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35
        subentry_valid_0_0 = _RANDOM[6'h2B][28];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35, :105:31
        subentry_valid_0_1 = _RANDOM[6'h2B][29];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35, :105:31
        subentry_valid_1_0 = _RANDOM[6'h2B][30];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35, :105:31
        subentry_valid_1_1 = _RANDOM[6'h2B][31];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :102:35, :105:31
        subentry_valid_2_0 = _RANDOM[6'h2C][0];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31
        subentry_valid_2_1 = _RANDOM[6'h2C][1];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31
        subentry_valid_3_0 = _RANDOM[6'h2C][2];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31
        subentry_valid_3_1 = _RANDOM[6'h2C][3];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31
        releasing_stall_0 = _RANDOM[6'h2C][5];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31, :109:32
        releasing_stall_1 = _RANDOM[6'h2C][6];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31, :109:32
        releasing_stall_2 = _RANDOM[6'h2C][7];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31, :109:32
        releasing_stall_3 = _RANDOM[6'h2C][8];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31, :109:32
        mshrStatus_st1_r = _RANDOM[6'h2C][11:9];	// ventus/src/L1Cache/L1MSHR.scala:79:7, :105:31, :156:33
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/L1MSHR.scala:79:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/L1MSHR.scala:79:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  Queue1_MSHRpipe1Reg MSHR_st1 (	// ventus/src/L1Cache/L1MSHR.scala:108:24
    .clock                       (clock),
    .reset                       (reset),
    .io_enq_valid                (io_probe_valid),
    .io_enq_bits_entryMatchProbe (entryMatchProbe),	// ventus/src/L1Cache/L1MSHR.scala:187:90
    .io_enq_bits_subEntryIdx     ({1'h0, _subentryStatus_io_next}),	// ventus/src/L1Cache/L1MSHR.scala:105:68, :144:30, :209:36
    .io_deq_ready                (io_stage1_ready),
    .io_deq_valid                (_MSHR_st1_io_deq_valid),
    .io_deq_bits_entryMatchProbe (_MSHR_st1_io_deq_bits_entryMatchProbe),
    .io_deq_bits_subEntryIdx     (_MSHR_st1_io_deq_bits_subEntryIdx)
  );
  getEntryStatusReq subentryStatus (	// ventus/src/L1Cache/L1MSHR.scala:144:30
    .io_valid_list
      ({(|entryMatchProbe) & _GEN_0[_subentrySelectedForReq_T_4],
        (|entryMatchProbe) & _GEN[_subentrySelectedForReq_T_4]}),	// src/main/scala/chisel3/util/OneHot.scala:32:10, ventus/src/L1Cache/L1MSHR.scala:143:{35,51}, :145:42, :187:90
    .io_alm_full   (_subentryStatus_io_alm_full),
    .io_full       (_subentryStatus_io_full),
    .io_next       (_subentryStatus_io_next)
  );
  getEntryStatusRsp subentryStatusForRsp (	// ventus/src/L1Cache/L1MSHR.scala:148:36
    .io_valid_list
      ({_GEN_0[io_missRspIn_bits_instrId], _GEN[io_missRspIn_bits_instrId]}),	// ventus/src/L1Cache/L1MSHR.scala:143:35, :312:{48,52}
    .io_next2cancel (_subentryStatusForRsp_io_next2cancel),
    .io_used        (_subentryStatusForRsp_io_used)
  );
  getEntryStatusReq_1 entryStatus (	// ventus/src/L1Cache/L1MSHR.scala:152:27
    .io_valid_list (entry_valid),	// ventus/src/L1Cache/L1MSHR.scala:106:28
    .io_alm_full   (_entryStatus_io_alm_full),
    .io_full       (_entryStatus_io_full),
    .io_next       (_entryStatus_io_next)
  );
  Queue1_MSHRmissRspOut missRspOut_st1 (	// ventus/src/L1Cache/L1MSHR.scala:332:30
    .clock                  (clock),
    .reset                  (reset),
    .io_enq_ready           (_missRspOut_st1_io_enq_ready),
    .io_enq_valid           (io_missRspIn_valid & (|_subentryStatusForRsp_io_used)),	// ventus/src/L1Cache/L1MSHR.scala:148:36, :333:{53,86}
    .io_enq_bits_targetInfo
      (_subentryStatusForRsp_io_next2cancel
         ? _GEN_8[io_missRspIn_bits_instrId]
         : _GEN_7[io_missRspIn_bits_instrId]),	// ventus/src/L1Cache/L1MSHR.scala:148:36, :334:41
    .io_enq_bits_blockAddr  (_GEN_9[io_missRspIn_bits_instrId]),	// ventus/src/L1Cache/L1MSHR.scala:335:40
    .io_enq_bits_instrId    (io_missRspIn_bits_instrId),
    .io_deq_ready           (io_missRspOut_ready),
    .io_deq_valid           (_missRspOut_st1_io_deq_valid),
    .io_deq_bits_targetInfo (io_missRspOut_bits_targetInfo),
    .io_deq_bits_blockAddr  (_missRspOut_st1_io_deq_bits_blockAddr)
  );
  assign io_probeOut_st1_probeStatus = mshrStatus_st1_w;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :274:99, :275:24, :281:22
  assign io_probeOut_st1_a_source = io_missReq_valid ? real_SRAMAddrUp : _GEN_6;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :192:27, :297:28, :309:34
  assign io_missReq_ready = ~_io_missReq_ready_T_2;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :295:{23,50}
  assign io_missRspIn_ready = ~_io_missRspIn_ready_T_7;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :319:25, :320:102
  assign io_missRspOut_valid = _missRspOut_st1_io_deq_valid;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :332:30
  assign io_missRspOut_bits_blockAddr = _missRspOut_st1_io_deq_bits_blockAddr;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :332:30
  assign io_empty = entry_valid == 4'h0;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :106:28, :111:48, :112:28
  assign io_probestatus = _MSHR_st1_io_deq_valid;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :108:24
  assign io_mshrStatus_st0 =
    primaryMiss_st0
      ? {2'h0, _entryStatus_io_full | io_missReq_valid & _entryStatus_io_alm_full}
      : _subentryStatus_io_full | io_missReq_valid & _subentryStatus_io_alm_full
          ? 3'h3
          : io_probe_bits_blockAddr == _missRspOut_st1_io_deq_bits_blockAddr
            & _missRspOut_st1_io_deq_valid
              ? 3'h4
              : 3'h2;	// ventus/src/L1Cache/L1MSHR.scala:79:7, :101:39, :144:30, :152:27, :193:58, :199:43, :241:24, :247:25, :248:{24,44,65}, :249:22, :253:22, :256:{23,43,63}, :257:22, :260:{41,64}, :261:22, :263:22, :276:24, :278:24, :332:30
  assign io_releasing_stall =
    |{releasing_stall_3, releasing_stall_2, releasing_stall_1, releasing_stall_0};	// ventus/src/L1Cache/L1MSHR.scala:79:7, :109:32, :111:{41,48}
endmodule

