// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module FarPath_32(	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7
  input         io_in_a_sign,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  input  [7:0]  io_in_a_exp,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  input  [23:0] io_in_a_sig,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
                io_in_b_sig,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  input  [7:0]  io_in_expDiff,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  input         io_in_effSub,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  output        io_out_result_sign,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  output [23:0] io_out_sig_a,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  output [27:0] io_out_sig_b,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
  output [7:0]  io_out_exp_a_vec_0,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
                io_out_exp_a_vec_1,	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
                io_out_exp_a_vec_2	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:9:14
);

  wire [25:0] _shiftRightJam_io_out;	// dependencies/fpuv2/fudian/src/main/scala/fudian/utils/ShiftRightJam.scala:27:31
  wire        _shiftRightJam_io_sticky;	// dependencies/fpuv2/fudian/src/main/scala/fudian/utils/ShiftRightJam.scala:27:31
  ShiftRightJam_64 shiftRightJam (	// dependencies/fpuv2/fudian/src/main/scala/fudian/utils/ShiftRightJam.scala:27:31
    .io_in     ({io_in_b_sig, 2'h0}),	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:31:53
    .io_shamt  (io_in_expDiff),
    .io_out    (_shiftRightJam_io_out),
    .io_sticky (_shiftRightJam_io_sticky)
  );
  assign io_out_result_sign = io_in_a_sign;	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7
  assign io_out_sig_a = io_in_a_sig;	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7
  assign io_out_sig_b =
    (io_in_effSub
       ? {1'h1, ~_shiftRightJam_io_out, ~_shiftRightJam_io_sticky}
       : {1'h0, _shiftRightJam_io_out, _shiftRightJam_io_sticky}) + {27'h0, io_in_effSub};	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7, :34:31, :35:{27,37,86}, dependencies/fpuv2/fudian/src/main/scala/fudian/utils/ShiftRightJam.scala:27:31
  assign io_out_exp_a_vec_0 = io_in_a_exp + 8'h1;	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7, :45:28
  assign io_out_exp_a_vec_1 = io_in_a_exp;	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7
  assign io_out_exp_a_vec_2 = io_in_a_exp - 8'h1;	// dependencies/fpuv2/fudian/src/main/scala/fudian/FADD.scala:7:7, :46:29
endmodule

