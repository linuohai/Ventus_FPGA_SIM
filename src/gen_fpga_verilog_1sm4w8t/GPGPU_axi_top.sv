// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module GPGPU_axi_top(	// ventus/src/top/GPGPU_top.scala:115:7
  input         clock,	// ventus/src/top/GPGPU_top.scala:115:7
                reset,	// ventus/src/top/GPGPU_top.scala:115:7
  input  [31:0] io_s_aw_awaddr,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_s_aw_awvalid,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_s_aw_awready,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [11:0] io_s_aw_awid,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [31:0] io_s_w_wdata,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_s_w_wvalid,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_s_w_wready,	// ventus/src/top/GPGPU_top.scala:119:12
                io_s_b_bvalid,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_s_b_bready,	// ventus/src/top/GPGPU_top.scala:119:12
  output [11:0] io_s_b_bid,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [31:0] io_s_ar_araddr,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_s_ar_arvalid,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_s_ar_arready,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [11:0] io_s_ar_arid,	// ventus/src/top/GPGPU_top.scala:119:12
  output [31:0] io_s_r_rdata,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_s_r_rvalid,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_s_r_rready,	// ventus/src/top/GPGPU_top.scala:119:12
  output [11:0] io_s_r_rid,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_aw_ready,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_m_aw_valid,	// ventus/src/top/GPGPU_top.scala:119:12
  output [14:0] io_m_aw_bits_id,	// ventus/src/top/GPGPU_top.scala:119:12
  output [31:0] io_m_aw_bits_addr,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_w_ready,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_m_w_valid,	// ventus/src/top/GPGPU_top.scala:119:12
  output [63:0] io_m_w_bits_data,	// ventus/src/top/GPGPU_top.scala:119:12
  output [7:0]  io_m_w_bits_strb,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_m_w_bits_last,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_b_valid,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [14:0] io_m_b_bits_id,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_ar_ready,	// ventus/src/top/GPGPU_top.scala:119:12
  output        io_m_ar_valid,	// ventus/src/top/GPGPU_top.scala:119:12
  output [14:0] io_m_ar_bits_id,	// ventus/src/top/GPGPU_top.scala:119:12
  output [31:0] io_m_ar_bits_addr,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_r_valid,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [14:0] io_m_r_bits_id,	// ventus/src/top/GPGPU_top.scala:119:12
  input  [63:0] io_m_r_bits_data,	// ventus/src/top/GPGPU_top.scala:119:12
  input         io_m_r_bits_last	// ventus/src/top/GPGPU_top.scala:119:12
);

  wire          _axi_adapter_io_l2cache_outa_ready;	// ventus/src/top/GPGPU_top.scala:127:25
  wire          _axi_adapter_io_l2cache_outd_valid;	// ventus/src/top/GPGPU_top.scala:127:25
  wire [2:0]    _axi_adapter_io_l2cache_outd_bits_opcode;	// ventus/src/top/GPGPU_top.scala:127:25
  wire [14:0]   _axi_adapter_io_l2cache_outd_bits_source;	// ventus/src/top/GPGPU_top.scala:127:25
  wire [1023:0] _axi_adapter_io_l2cache_outd_bits_data;	// ventus/src/top/GPGPU_top.scala:127:25
  wire          _axi_lite_adapter_io_data_valid;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [31:0]   _axi_lite_adapter_io_data_bits_host_wg_id;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [3:0]    _axi_lite_adapter_io_data_bits_host_num_wf;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [5:0]    _axi_lite_adapter_io_data_bits_host_wf_size;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [31:0]   _axi_lite_adapter_io_data_bits_host_start_pc;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [10:0]   _axi_lite_adapter_io_data_bits_host_kernel_size_3d_0;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [10:0]   _axi_lite_adapter_io_data_bits_host_kernel_size_3d_1;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [10:0]   _axi_lite_adapter_io_data_bits_host_kernel_size_3d_2;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [31:0]   _axi_lite_adapter_io_data_bits_host_csr_knl;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [11:0]   _axi_lite_adapter_io_data_bits_host_vgpr_size_total;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [11:0]   _axi_lite_adapter_io_data_bits_host_sgpr_size_total;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [17:0]   _axi_lite_adapter_io_data_bits_host_lds_size_total;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [11:0]   _axi_lite_adapter_io_data_bits_host_vgpr_size_per_wf;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [11:0]   _axi_lite_adapter_io_data_bits_host_sgpr_size_per_wf;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [17:0]   _axi_lite_adapter_io_data_bits_host_pds_size_per_wf;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [31:0]   _axi_lite_adapter_io_data_bits_host_pds_baseaddr;	// ventus/src/top/GPGPU_top.scala:126:30
  wire [31:0]   _axi_lite_adapter_io_data_bits_host_gds_baseaddr;	// ventus/src/top/GPGPU_top.scala:126:30
  wire          _axi_lite_adapter_io_rsp_ready;	// ventus/src/top/GPGPU_top.scala:126:30
  wire          _gpgpu_top_io_host_req_ready;	// ventus/src/top/GPGPU_top.scala:125:23
  wire          _gpgpu_top_io_host_rsp_valid;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [31:0]   _gpgpu_top_io_host_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id;	// ventus/src/top/GPGPU_top.scala:125:23
  wire          _gpgpu_top_io_out_a_0_valid;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [2:0]    _gpgpu_top_io_out_a_0_bits_opcode;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [14:0]   _gpgpu_top_io_out_a_0_bits_source;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [31:0]   _gpgpu_top_io_out_a_0_bits_address;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [127:0]  _gpgpu_top_io_out_a_0_bits_mask;	// ventus/src/top/GPGPU_top.scala:125:23
  wire [1023:0] _gpgpu_top_io_out_a_0_bits_data;	// ventus/src/top/GPGPU_top.scala:125:23
  GPU gpgpu_top (	// ventus/src/top/GPGPU_top.scala:125:23
    .clock                                                  (clock),
    .reset                                                  (reset),
    .io_host_req_ready
      (_gpgpu_top_io_host_req_ready),
    .io_host_req_valid
      (_axi_lite_adapter_io_data_valid),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_wg_id
      (_axi_lite_adapter_io_data_bits_host_wg_id),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_num_wf
      (_axi_lite_adapter_io_data_bits_host_num_wf),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_wf_size
      (_axi_lite_adapter_io_data_bits_host_wf_size),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_start_pc
      (_axi_lite_adapter_io_data_bits_host_start_pc),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_kernel_size_3d_0
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_0),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_kernel_size_3d_1
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_1),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_kernel_size_3d_2
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_2),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_csr_knl
      (_axi_lite_adapter_io_data_bits_host_csr_knl),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_vgpr_size_total
      (_axi_lite_adapter_io_data_bits_host_vgpr_size_total),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_sgpr_size_total
      (_axi_lite_adapter_io_data_bits_host_sgpr_size_total),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_lds_size_total
      (_axi_lite_adapter_io_data_bits_host_lds_size_total),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_vgpr_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_vgpr_size_per_wf),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_sgpr_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_sgpr_size_per_wf),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_pds_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_pds_size_per_wf),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_pds_baseaddr
      (_axi_lite_adapter_io_data_bits_host_pds_baseaddr),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_req_bits_host_gds_baseaddr
      (_axi_lite_adapter_io_data_bits_host_gds_baseaddr),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_rsp_ready
      (_axi_lite_adapter_io_rsp_ready),	// ventus/src/top/GPGPU_top.scala:126:30
    .io_host_rsp_valid
      (_gpgpu_top_io_host_rsp_valid),
    .io_host_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id
      (_gpgpu_top_io_host_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id),
    .io_out_a_0_ready
      (_axi_adapter_io_l2cache_outa_ready),	// ventus/src/top/GPGPU_top.scala:127:25
    .io_out_a_0_valid                                       (_gpgpu_top_io_out_a_0_valid),
    .io_out_a_0_bits_opcode
      (_gpgpu_top_io_out_a_0_bits_opcode),
    .io_out_a_0_bits_source
      (_gpgpu_top_io_out_a_0_bits_source),
    .io_out_a_0_bits_address
      (_gpgpu_top_io_out_a_0_bits_address),
    .io_out_a_0_bits_mask
      (_gpgpu_top_io_out_a_0_bits_mask),
    .io_out_a_0_bits_data
      (_gpgpu_top_io_out_a_0_bits_data),
    .io_out_d_0_valid
      (_axi_adapter_io_l2cache_outd_valid),	// ventus/src/top/GPGPU_top.scala:127:25
    .io_out_d_0_bits_opcode
      (_axi_adapter_io_l2cache_outd_bits_opcode),	// ventus/src/top/GPGPU_top.scala:127:25
    .io_out_d_0_bits_source
      (_axi_adapter_io_l2cache_outd_bits_source),	// ventus/src/top/GPGPU_top.scala:127:25
    .io_out_d_0_bits_data
      (_axi_adapter_io_l2cache_outd_bits_data)	// ventus/src/top/GPGPU_top.scala:127:25
  );
  AXI4Lite2CTA axi_lite_adapter (	// ventus/src/top/GPGPU_top.scala:126:30
    .clock                                             (clock),
    .reset                                             (reset),
    .io_ctl_aw_awaddr                                  (io_s_aw_awaddr),
    .io_ctl_aw_awvalid                                 (io_s_aw_awvalid),
    .io_ctl_aw_awready                                 (io_s_aw_awready),
    .io_ctl_aw_awid                                    (io_s_aw_awid),
    .io_ctl_w_wdata                                    (io_s_w_wdata),
    .io_ctl_w_wvalid                                   (io_s_w_wvalid),
    .io_ctl_w_wready                                   (io_s_w_wready),
    .io_ctl_b_bvalid                                   (io_s_b_bvalid),
    .io_ctl_b_bready                                   (io_s_b_bready),
    .io_ctl_b_bid                                      (io_s_b_bid),
    .io_ctl_ar_araddr                                  (io_s_ar_araddr),
    .io_ctl_ar_arvalid                                 (io_s_ar_arvalid),
    .io_ctl_ar_arready                                 (io_s_ar_arready),
    .io_ctl_ar_arid                                    (io_s_ar_arid),
    .io_ctl_r_rdata                                    (io_s_r_rdata),
    .io_ctl_r_rvalid                                   (io_s_r_rvalid),
    .io_ctl_r_rready                                   (io_s_r_rready),
    .io_ctl_r_rid                                      (io_s_r_rid),
    .io_data_ready                                     (_gpgpu_top_io_host_req_ready),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_data_valid                                     (_axi_lite_adapter_io_data_valid),
    .io_data_bits_host_wg_id
      (_axi_lite_adapter_io_data_bits_host_wg_id),
    .io_data_bits_host_num_wf
      (_axi_lite_adapter_io_data_bits_host_num_wf),
    .io_data_bits_host_wf_size
      (_axi_lite_adapter_io_data_bits_host_wf_size),
    .io_data_bits_host_start_pc
      (_axi_lite_adapter_io_data_bits_host_start_pc),
    .io_data_bits_host_kernel_size_3d_0
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_0),
    .io_data_bits_host_kernel_size_3d_1
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_1),
    .io_data_bits_host_kernel_size_3d_2
      (_axi_lite_adapter_io_data_bits_host_kernel_size_3d_2),
    .io_data_bits_host_csr_knl
      (_axi_lite_adapter_io_data_bits_host_csr_knl),
    .io_data_bits_host_vgpr_size_total
      (_axi_lite_adapter_io_data_bits_host_vgpr_size_total),
    .io_data_bits_host_sgpr_size_total
      (_axi_lite_adapter_io_data_bits_host_sgpr_size_total),
    .io_data_bits_host_lds_size_total
      (_axi_lite_adapter_io_data_bits_host_lds_size_total),
    .io_data_bits_host_vgpr_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_vgpr_size_per_wf),
    .io_data_bits_host_sgpr_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_sgpr_size_per_wf),
    .io_data_bits_host_pds_size_per_wf
      (_axi_lite_adapter_io_data_bits_host_pds_size_per_wf),
    .io_data_bits_host_pds_baseaddr
      (_axi_lite_adapter_io_data_bits_host_pds_baseaddr),
    .io_data_bits_host_gds_baseaddr
      (_axi_lite_adapter_io_data_bits_host_gds_baseaddr),
    .io_rsp_ready                                      (_axi_lite_adapter_io_rsp_ready),
    .io_rsp_valid                                      (_gpgpu_top_io_host_rsp_valid),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id
      (_gpgpu_top_io_host_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id)	// ventus/src/top/GPGPU_top.scala:125:23
  );
  AXI4Adapter axi_adapter (	// ventus/src/top/GPGPU_top.scala:127:25
    .clock                             (clock),
    .reset                             (reset),
    .io_AXI_master_bundle_aw_ready     (io_m_aw_ready),
    .io_AXI_master_bundle_aw_valid     (io_m_aw_valid),
    .io_AXI_master_bundle_aw_bits_id   (io_m_aw_bits_id),
    .io_AXI_master_bundle_aw_bits_addr (io_m_aw_bits_addr),
    .io_AXI_master_bundle_w_ready      (io_m_w_ready),
    .io_AXI_master_bundle_w_valid      (io_m_w_valid),
    .io_AXI_master_bundle_w_bits_data  (io_m_w_bits_data),
    .io_AXI_master_bundle_w_bits_strb  (io_m_w_bits_strb),
    .io_AXI_master_bundle_w_bits_last  (io_m_w_bits_last),
    .io_AXI_master_bundle_b_valid      (io_m_b_valid),
    .io_AXI_master_bundle_b_bits_id    (io_m_b_bits_id),
    .io_AXI_master_bundle_ar_ready     (io_m_ar_ready),
    .io_AXI_master_bundle_ar_valid     (io_m_ar_valid),
    .io_AXI_master_bundle_ar_bits_id   (io_m_ar_bits_id),
    .io_AXI_master_bundle_ar_bits_addr (io_m_ar_bits_addr),
    .io_AXI_master_bundle_r_valid      (io_m_r_valid),
    .io_AXI_master_bundle_r_bits_id    (io_m_r_bits_id),
    .io_AXI_master_bundle_r_bits_data  (io_m_r_bits_data),
    .io_AXI_master_bundle_r_bits_last  (io_m_r_bits_last),
    .io_l2cache_outa_ready             (_axi_adapter_io_l2cache_outa_ready),
    .io_l2cache_outa_valid             (_gpgpu_top_io_out_a_0_valid),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outa_bits_opcode       (_gpgpu_top_io_out_a_0_bits_opcode),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outa_bits_source       (_gpgpu_top_io_out_a_0_bits_source),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outa_bits_address      (_gpgpu_top_io_out_a_0_bits_address),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outa_bits_mask         (_gpgpu_top_io_out_a_0_bits_mask),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outa_bits_data         (_gpgpu_top_io_out_a_0_bits_data),	// ventus/src/top/GPGPU_top.scala:125:23
    .io_l2cache_outd_valid             (_axi_adapter_io_l2cache_outd_valid),
    .io_l2cache_outd_bits_opcode       (_axi_adapter_io_l2cache_outd_bits_opcode),
    .io_l2cache_outd_bits_source       (_axi_adapter_io_l2cache_outd_bits_source),
    .io_l2cache_outd_bits_data         (_axi_adapter_io_l2cache_outd_bits_data)
  );
endmodule

