// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module ScalarFPU_1(	// dependencies/fpuv2/src/main/scala/FPU.scala:8:7
  input         clock,	// dependencies/fpuv2/src/main/scala/FPU.scala:8:7
                reset,	// dependencies/fpuv2/src/main/scala/FPU.scala:8:7
                io_in_valid,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
  input  [5:0]  io_in_bits_op,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
  input  [31:0] io_in_bits_a,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
                io_in_bits_b,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
                io_in_bits_c,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
  input  [2:0]  io_in_bits_rm,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
  input         io_out_ready,	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
  output [63:0] io_out_bits_result	// dependencies/fpuv2/src/main/scala/FPU.scala:10:14
);

  wire        _outArbiter_io_in_0_ready;	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
  wire        _outArbiter_io_in_1_ready;	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
  wire        _outArbiter_io_in_2_ready;	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
  wire        _outArbiter_io_in_3_ready;	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
  wire        _outArbiter_io_in_4_ready;	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
  wire [63:0] _IntToFP_io_out_bits_result;	// dependencies/fpuv2/src/main/scala/FPU.scala:20:11
  wire        _FPToInt_io_out_valid;	// dependencies/fpuv2/src/main/scala/FPU.scala:19:11
  wire [63:0] _FPToInt_io_out_bits_result;	// dependencies/fpuv2/src/main/scala/FPU.scala:19:11
  wire        _FPMV_io_out_valid;	// dependencies/fpuv2/src/main/scala/FPU.scala:18:11
  wire [31:0] _FPMV_io_out_bits_result;	// dependencies/fpuv2/src/main/scala/FPU.scala:18:11
  wire        _FCMP_io_out_valid;	// dependencies/fpuv2/src/main/scala/FPU.scala:17:11
  wire [31:0] _FCMP_io_out_bits_result;	// dependencies/fpuv2/src/main/scala/FPU.scala:17:11
  wire        _FMA_io_out_valid;	// dependencies/fpuv2/src/main/scala/FPU.scala:16:11
  wire [31:0] _FMA_io_out_bits_result;	// dependencies/fpuv2/src/main/scala/FPU.scala:16:11
  wire        _io_in_ready_T = io_in_bits_op[5:3] == 3'h0;	// dependencies/fpuv2/src/main/scala/FPU.scala:23:30, :25:{32,38}
  wire        _io_in_ready_T_2 = io_in_bits_op[5:3] == 3'h1;	// dependencies/fpuv2/src/main/scala/FPU.scala:23:30, :25:38
  wire        _io_in_ready_T_4 = io_in_bits_op[5:3] == 3'h2;	// dependencies/fpuv2/src/main/scala/FPU.scala:23:30, :25:38
  wire        _io_in_ready_T_6 = io_in_bits_op[5:3] == 3'h3;	// dependencies/fpuv2/src/main/scala/FPU.scala:23:30, :25:38
  wire        _io_in_ready_T_8 = io_in_bits_op[5:3] == 3'h4;	// dependencies/fpuv2/src/main/scala/FPU.scala:23:30, :25:38
  FMA_1 FMA (	// dependencies/fpuv2/src/main/scala/FPU.scala:16:11
    .clock              (clock),
    .reset              (reset),
    .io_in_valid        (_io_in_ready_T & io_in_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :31:38
    .io_in_bits_op      (_io_in_ready_T ? io_in_bits_op[2:0] : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38,58}
    .io_in_bits_a       (_io_in_ready_T ? io_in_bits_a : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31
    .io_in_bits_b       (_io_in_ready_T ? io_in_bits_b : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31, :28:31
    .io_in_bits_c       (_io_in_ready_T ? io_in_bits_c : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31, :29:31
    .io_in_bits_rm      (_io_in_ready_T ? io_in_bits_rm : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38}, :26:32
    .io_out_ready       (_outArbiter_io_in_0_ready),	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_out_valid       (_FMA_io_out_valid),
    .io_out_bits_result (_FMA_io_out_bits_result)
  );
  FCMP_3 FCMP (	// dependencies/fpuv2/src/main/scala/FPU.scala:17:11
    .clock              (clock),
    .reset              (reset),
    .io_in_valid        (_io_in_ready_T_2 & io_in_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :31:38
    .io_in_bits_op      (_io_in_ready_T_2 ? io_in_bits_op[2:0] : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38,58}
    .io_in_bits_a       (_io_in_ready_T_2 ? io_in_bits_a : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31
    .io_in_bits_b       (_io_in_ready_T_2 ? io_in_bits_b : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31, :28:31
    .io_out_ready       (_outArbiter_io_in_1_ready),	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_out_valid       (_FCMP_io_out_valid),
    .io_out_bits_result (_FCMP_io_out_bits_result)
  );
  FPMV_1 FPMV (	// dependencies/fpuv2/src/main/scala/FPU.scala:18:11
    .clock              (clock),
    .reset              (reset),
    .io_in_valid        (_io_in_ready_T_4 & io_in_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :31:38
    .io_in_bits_op      (_io_in_ready_T_4 ? io_in_bits_op[2:0] : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38,58}
    .io_in_bits_a       (_io_in_ready_T_4 ? io_in_bits_a : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31
    .io_in_bits_b       (_io_in_ready_T_4 ? io_in_bits_b : 32'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:31, :28:31
    .io_out_ready       (_outArbiter_io_in_2_ready),	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_out_valid       (_FPMV_io_out_valid),
    .io_out_bits_result (_FPMV_io_out_bits_result)
  );
  FPToInt_3 FPToInt (	// dependencies/fpuv2/src/main/scala/FPU.scala:19:11
    .clock              (clock),
    .reset              (reset),
    .io_in_valid        (_io_in_ready_T_6 & io_in_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :31:38
    .io_in_bits_op      (_io_in_ready_T_6 ? io_in_bits_op[2:0] : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38,58}
    .io_in_bits_a       ({32'h0, _io_in_ready_T_6 ? io_in_bits_a : 32'h0}),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:{25,31}
    .io_in_bits_rm      (_io_in_ready_T_6 ? io_in_bits_rm : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38}, :26:32
    .io_out_ready       (_outArbiter_io_in_3_ready),	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_out_valid       (_FPToInt_io_out_valid),
    .io_out_bits_result (_FPToInt_io_out_bits_result)
  );
  IntToFP_1 IntToFP (	// dependencies/fpuv2/src/main/scala/FPU.scala:20:11
    .clock              (clock),
    .reset              (reset),
    .io_in_valid        (_io_in_ready_T_8 & io_in_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :31:38
    .io_in_bits_op      (_io_in_ready_T_8 ? io_in_bits_op[2:0] : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38,58}
    .io_in_bits_a       ({32'h0, _io_in_ready_T_8 ? io_in_bits_a : 32'h0}),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:38, :27:{25,31}
    .io_in_bits_rm      (_io_in_ready_T_8 ? io_in_bits_rm : 3'h0),	// dependencies/fpuv2/src/main/scala/FPU.scala:25:{32,38}, :26:32
    .io_out_ready       (_outArbiter_io_in_4_ready),	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_out_bits_result (_IntToFP_io_out_bits_result)
  );
  Arbiter5_FPUOutput_1 outArbiter (	// dependencies/fpuv2/src/main/scala/FPU.scala:39:26
    .io_in_0_ready       (_outArbiter_io_in_0_ready),
    .io_in_0_valid       (_FMA_io_out_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:16:11
    .io_in_0_bits_result ({32'h0, _FMA_io_out_bits_result}),	// dependencies/fpuv2/src/main/scala/FPU.scala:16:11, :27:31, :41:27
    .io_in_1_ready       (_outArbiter_io_in_1_ready),
    .io_in_1_valid       (_FCMP_io_out_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:17:11
    .io_in_1_bits_result ({32'h0, _FCMP_io_out_bits_result}),	// dependencies/fpuv2/src/main/scala/FPU.scala:17:11, :27:31, :41:27
    .io_in_2_ready       (_outArbiter_io_in_2_ready),
    .io_in_2_valid       (_FPMV_io_out_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:18:11
    .io_in_2_bits_result ({32'h0, _FPMV_io_out_bits_result}),	// dependencies/fpuv2/src/main/scala/FPU.scala:18:11, :27:31, :41:27
    .io_in_3_ready       (_outArbiter_io_in_3_ready),
    .io_in_3_valid       (_FPToInt_io_out_valid),	// dependencies/fpuv2/src/main/scala/FPU.scala:19:11
    .io_in_3_bits_result (_FPToInt_io_out_bits_result),	// dependencies/fpuv2/src/main/scala/FPU.scala:19:11
    .io_in_4_ready       (_outArbiter_io_in_4_ready),
    .io_in_4_bits_result (_IntToFP_io_out_bits_result),	// dependencies/fpuv2/src/main/scala/FPU.scala:20:11
    .io_out_ready        (io_out_ready),
    .io_out_bits_result  (io_out_bits_result)
  );
endmodule

