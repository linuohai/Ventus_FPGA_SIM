// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module FPMV_1(	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
  input         clock,	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
                reset,	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
                io_in_valid,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
  input  [2:0]  io_in_bits_op,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
  input  [31:0] io_in_bits_a,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
                io_in_bits_b,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
  input         io_out_ready,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
  output        io_out_valid,	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
  output [31:0] io_out_bits_result	// dependencies/fpuv2/src/main/scala/utils/FPUSubModule.scala:70:14
);

  reg        REG;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
  reg        REG_1;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
  reg [31:0] a;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
  reg [2:0]  s1_op;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
  reg [31:0] io_out_bits_result_r;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
  always @(posedge clock) begin	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
    automatic logic _s1_op_T_1;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:18:53
    _s1_op_T_1 = REG & REG_1;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58, :18:53
    if (reset) begin	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      REG <= 1'h0;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
      REG_1 <= 1'h0;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
    end
    else begin	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      if (~(~io_out_ready & _s1_op_T_1))	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:18:{12,26,53}
        REG <= io_in_valid;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
      if (~(~io_out_ready & REG_1))	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58, :18:{12,26}
        REG_1 <= REG;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
    end
    if (io_in_valid & ~(~io_out_ready & _s1_op_T_1))	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:18:{12,53}, :26:{79,82,98}
      a <=
        io_in_bits_op == 3'h2
          ? io_in_bits_a
          : {io_in_bits_op == 3'h4
               ? io_in_bits_a[31] ^ io_in_bits_b[31]
               : io_in_bits_op == 3'h5
                   ? ~(io_in_bits_b[31])
                   : io_in_bits_op == 3'h6 ? io_in_bits_b[31] : io_in_bits_a[31],
             io_in_bits_a[30:0]};	// dependencies/fpuv2/src/main/scala/FPMV.scala:14:{48,52}, :15:40, :16:24, :17:46, :19:{20,24}, :21:{8,35}, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
    if (io_in_valid & ~(~io_out_ready & _s1_op_T_1))	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:18:{12,53}, :26:{79,82,98}
      s1_op <= io_in_bits_op;	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
    if (REG & ~(~io_out_ready & REG_1)) begin	// dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58, :18:12, :26:{79,82,98}
      automatic logic classifyOut_decode_expIsZero;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:32:28
      automatic logic classifyOut_decode_isSubnormal;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:41:46
      automatic logic classifyOut_decode_isInf;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:42:40
      automatic logic classifyOut_decode_isZero;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:43:41
      automatic logic classifyOut_decode_isNaN;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:44:40
      automatic logic classifyOut_isNormal;	// dependencies/fpuv2/src/main/scala/FPMV.scala:27:38
      classifyOut_decode_expIsZero = a[30:23] == 8'h0;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:32:28, :60:18, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      classifyOut_decode_isSubnormal = classifyOut_decode_expIsZero & (|(a[22:0]));	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:32:28, :34:28, :41:46, :61:18, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      classifyOut_decode_isInf = (&(a[30:23])) & ~(|(a[22:0]));	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:33:27, :34:28, :40:27, :42:40, :60:18, :61:18, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      classifyOut_decode_isZero = classifyOut_decode_expIsZero & ~(|(a[22:0]));	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:32:28, :34:28, :40:27, :43:41, :61:18, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      classifyOut_decode_isNaN = (&(a[30:23])) & (|(a[22:0]));	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:33:27, :34:28, :44:40, :60:18, :61:18, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      classifyOut_isNormal = ~(&(a[30:23])) & ~classifyOut_decode_expIsZero;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:32:28, :33:27, :60:18, dependencies/fpuv2/src/main/scala/FPMV.scala:27:{20,38,41}, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      io_out_bits_result_r <=
        s1_op == 3'h2
          ? {22'h0,
             classifyOut_decode_isNaN & a[22],
             classifyOut_decode_isNaN & ~(a[22]),
             classifyOut_decode_isInf & ~(a[31]),
             classifyOut_isNormal & ~(a[31]),
             classifyOut_decode_isSubnormal & ~(a[31]),
             classifyOut_decode_isZero & ~(a[31]),
             classifyOut_decode_isZero & a[31],
             classifyOut_decode_isSubnormal & a[31],
             classifyOut_isNormal & a[31],
             classifyOut_decode_isInf & a[31]}
          : a;	// dependencies/fpuv2/fudian/src/main/scala/fudian/package.scala:41:46, :42:40, :43:41, :44:40, :45:{37,40,49}, :46:37, :59:19, dependencies/fpuv2/src/main/scala/FPMV.scala:19:24, :27:38, :31:{20,23}, :32:16, :33:26, :34:21, :35:21, :36:26, :37:16, :38:20, :44:{34,41}, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
    `ifdef FIRRTL_BEFORE_INITIAL	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      `FIRRTL_BEFORE_INITIAL	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      automatic logic [31:0] _RANDOM[0:2];	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      `ifdef INIT_RANDOM_PROLOG_	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
        `INIT_RANDOM_PROLOG_	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
        end	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
        REG = _RANDOM[2'h0][0];	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
        REG_1 = _RANDOM[2'h0][1];	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
        a = {_RANDOM[2'h0][31:2], _RANDOM[2'h1][1:0]};	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58, :26:58
        s1_op = _RANDOM[2'h1][4:2];	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
        io_out_bits_result_r = {_RANDOM[2'h1][31:5], _RANDOM[2'h2][4:0]};	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
      `FIRRTL_AFTER_INITIAL	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_out_valid = REG_1;	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:16:58
  assign io_out_bits_result = io_out_bits_result_r;	// dependencies/fpuv2/src/main/scala/FPMV.scala:9:7, dependencies/fpuv2/src/main/scala/utils/HasPipelineReg.scala:26:58
endmodule

