// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module ImmGen(	// ventus/src/pipeline/regfile.scala:85:7
  input  [31:0] io_inst,	// ventus/src/pipeline/regfile.scala:86:14
  input  [3:0]  io_sel,	// ventus/src/pipeline/regfile.scala:86:14
  input  [6:0]  io_imm_ext,	// ventus/src/pipeline/regfile.scala:86:14
  output [31:0] io_out	// ventus/src/pipeline/regfile.scala:86:14
);

  wire [5:0]  _GEN = io_imm_ext[6] ? io_imm_ext[5:0] : {6{io_inst[19]}};	// ventus/src/pipeline/regfile.scala:96:{17,28,52}
  wire [11:0] _out_T_3 = io_sel == 4'h0 ? io_inst[31:20] : {io_inst[31:21], 1'h0};	// ventus/src/pipeline/regfile.scala:88:{21,30}, :90:17, :102:{33,40}
  wire [20:0] _out_T_9 =
    io_sel == 4'h2
      ? {{9{io_inst[31]}}, io_inst[7], io_inst[30:25], io_inst[11:8], 1'h0}
      : io_sel == 4'h1
          ? {{9{io_inst[31]}}, io_inst[31:25], io_inst[11:7]}
          : io_sel == 4'h5
              ? {io_inst[31], io_inst[19:12], io_inst[20], io_inst[30:21], 1'h0}
              : {{9{_out_T_3[11]}}, _out_T_3};	// ventus/src/pipeline/regfile.scala:89:{25,42}, :90:{17,25,38,50,67}, :92:{17,38,55,68}, :102:40
  wire [20:0] _GEN_0 = {21{io_inst[30]}};	// ventus/src/pipeline/regfile.scala:102:40
  assign io_out =
    io_sel == 4'h8
      ? {_GEN_0, io_inst[30:25], io_inst[11:7]}
      : io_sel == 4'h9
          ? {_GEN_0, io_inst[30:20]}
          : io_sel == 4'h6
              ? {{21{_GEN[5]}}, _GEN, io_inst[19:15]}
              : io_sel == 4'h7
                  ? {27'h0, io_inst[19:15]}
                  : io_sel == 4'h4
                      ? {{27{io_inst[24]}}, io_inst[24:20]}
                      : io_sel == 4'h3
                          ? {io_inst[31:12], 12'h0}
                          : {{11{_out_T_9[20]}}, _out_T_9};	// ventus/src/pipeline/regfile.scala:85:7, :89:42, :90:50, :91:{17,25}, :93:{17,35}, :94:21, :96:17, :97:24, :102:40
endmodule

