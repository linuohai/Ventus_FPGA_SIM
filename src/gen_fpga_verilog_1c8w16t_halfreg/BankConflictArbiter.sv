// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module BankConflictArbiter(	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
  input         clock,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
                reset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
                io_coreReqArb_isWrite,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_coreReqArb_enable,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_coreReqArb_perLaneAddr_0_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_0_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_0_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_1_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_1_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_1_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_2_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_2_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_2_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_3_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_3_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_3_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_4_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_4_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_4_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_5_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_5_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_5_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_6_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_6_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_6_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_7_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_7_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_7_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_8_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_8_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_8_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_9_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_9_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_9_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_10_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_10_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_10_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_11_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_11_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_11_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_12_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_12_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_12_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_13_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_13_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_13_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_14_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_14_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_14_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input         io_coreReqArb_perLaneAddr_15_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0]  io_coreReqArb_perLaneAddr_15_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0]  io_coreReqArb_perLaneAddr_15_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [15:0] io_dataCrsbarSel1H_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_8,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_9,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_10,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_11,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_12,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_13,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_14,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataCrsbarSel1H_15,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_0_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_0_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_1_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_1_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_2_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_2_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_3_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_3_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_4_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_4_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_5_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_5_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_6_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_6_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_7_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_7_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_8_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_8_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_9_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_9_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_10_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_10_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_11_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_11_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_12_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_12_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_13_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_13_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_14_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_14_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_addrCrsbarOut_15_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0]  io_addrCrsbarOut_15_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output        io_dataArrayEn_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_8,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_9,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_10,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_11,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_12,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_13,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_14,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_dataArrayEn_15,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_8,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_9,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_10,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_11,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_12,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_13,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_14,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_activeLane_15,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_bankConflict,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
                io_bankConflict_isWrite	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
);

  wire [3:0]  bankIdx_15;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_15;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_14;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_14;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_13;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_13;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_12;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_12;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_11;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_11;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_10;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_10;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_9;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_9;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [3:0]  bankIdx_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire        laneActiveMask_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  reg         bankConflict_reg;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33
  reg         conflictReqIsW_reg;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:117:31
  reg         perLaneConflictReq_reg_0_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_0_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_0_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_0_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_1_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_1_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_1_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_1_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_2_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_2_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_2_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_2_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_3_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_3_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_3_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_3_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_4_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_4_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_4_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_4_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_5_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_5_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_5_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_5_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_6_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_6_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_6_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_6_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_7_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_7_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_7_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_7_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_8_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_8_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_8_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_8_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_9_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_9_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_9_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_9_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_10_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_10_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_10_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_10_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_11_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_11_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_11_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_11_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_12_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_12_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_12_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_12_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_13_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_13_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_13_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_13_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_14_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_14_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_14_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_14_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_15_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_15_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg         perLaneConflictReq_reg_15_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0]  perLaneConflictReq_reg_15_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  wire        isWrite = bankConflict_reg ? conflictReqIsW_reg : io_coreReqArb_isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :117:31, :134:26
  wire [15:0] bankIdxMasked_0 = 16'h1 << bankIdx_0 & {16{laneActiveMask_0}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_1 = 16'h1 << bankIdx_1 & {16{laneActiveMask_1}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_2 = 16'h1 << bankIdx_2 & {16{laneActiveMask_2}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_3 = 16'h1 << bankIdx_3 & {16{laneActiveMask_3}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_4 = 16'h1 << bankIdx_4 & {16{laneActiveMask_4}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_5 = 16'h1 << bankIdx_5 & {16{laneActiveMask_5}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_6 = 16'h1 << bankIdx_6 & {16{laneActiveMask_6}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_7 = 16'h1 << bankIdx_7 & {16{laneActiveMask_7}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_8 = 16'h1 << bankIdx_8 & {16{laneActiveMask_8}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_9 = 16'h1 << bankIdx_9 & {16{laneActiveMask_9}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_10 = 16'h1 << bankIdx_10 & {16{laneActiveMask_10}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_11 = 16'h1 << bankIdx_11 & {16{laneActiveMask_11}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_12 = 16'h1 << bankIdx_12 & {16{laneActiveMask_12}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_13 = 16'h1 << bankIdx_13 & {16{laneActiveMask_13}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_14 = 16'h1 << bankIdx_14 & {16{laneActiveMask_14}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [15:0] bankIdxMasked_15 = 16'h1 << bankIdx_15 & {16{laneActiveMask_15}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [4:0]  perBankReqCount_0 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[0]} + {1'h0, bankIdxMasked_1[0]}}
        + {1'h0, {1'h0, bankIdxMasked_2[0]} + {1'h0, bankIdxMasked_3[0]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[0]} + {1'h0, bankIdxMasked_5[0]}}
            + {1'h0, {1'h0, bankIdxMasked_6[0]} + {1'h0, bankIdxMasked_7[0]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[0]} + {1'h0, bankIdxMasked_9[0]}}
          + {1'h0, {1'h0, bankIdxMasked_10[0]} + {1'h0, bankIdxMasked_11[0]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[0]} + {1'h0, bankIdxMasked_13[0]}}
              + {1'h0, {1'h0, bankIdxMasked_14[0]} + {1'h0, bankIdxMasked_15[0]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_1 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[1]} + {1'h0, bankIdxMasked_1[1]}}
        + {1'h0, {1'h0, bankIdxMasked_2[1]} + {1'h0, bankIdxMasked_3[1]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[1]} + {1'h0, bankIdxMasked_5[1]}}
            + {1'h0, {1'h0, bankIdxMasked_6[1]} + {1'h0, bankIdxMasked_7[1]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[1]} + {1'h0, bankIdxMasked_9[1]}}
          + {1'h0, {1'h0, bankIdxMasked_10[1]} + {1'h0, bankIdxMasked_11[1]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[1]} + {1'h0, bankIdxMasked_13[1]}}
              + {1'h0, {1'h0, bankIdxMasked_14[1]} + {1'h0, bankIdxMasked_15[1]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_2 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[2]} + {1'h0, bankIdxMasked_1[2]}}
        + {1'h0, {1'h0, bankIdxMasked_2[2]} + {1'h0, bankIdxMasked_3[2]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[2]} + {1'h0, bankIdxMasked_5[2]}}
            + {1'h0, {1'h0, bankIdxMasked_6[2]} + {1'h0, bankIdxMasked_7[2]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[2]} + {1'h0, bankIdxMasked_9[2]}}
          + {1'h0, {1'h0, bankIdxMasked_10[2]} + {1'h0, bankIdxMasked_11[2]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[2]} + {1'h0, bankIdxMasked_13[2]}}
              + {1'h0, {1'h0, bankIdxMasked_14[2]} + {1'h0, bankIdxMasked_15[2]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_3 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[3]} + {1'h0, bankIdxMasked_1[3]}}
        + {1'h0, {1'h0, bankIdxMasked_2[3]} + {1'h0, bankIdxMasked_3[3]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[3]} + {1'h0, bankIdxMasked_5[3]}}
            + {1'h0, {1'h0, bankIdxMasked_6[3]} + {1'h0, bankIdxMasked_7[3]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[3]} + {1'h0, bankIdxMasked_9[3]}}
          + {1'h0, {1'h0, bankIdxMasked_10[3]} + {1'h0, bankIdxMasked_11[3]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[3]} + {1'h0, bankIdxMasked_13[3]}}
              + {1'h0, {1'h0, bankIdxMasked_14[3]} + {1'h0, bankIdxMasked_15[3]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_4 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[4]} + {1'h0, bankIdxMasked_1[4]}}
        + {1'h0, {1'h0, bankIdxMasked_2[4]} + {1'h0, bankIdxMasked_3[4]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[4]} + {1'h0, bankIdxMasked_5[4]}}
            + {1'h0, {1'h0, bankIdxMasked_6[4]} + {1'h0, bankIdxMasked_7[4]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[4]} + {1'h0, bankIdxMasked_9[4]}}
          + {1'h0, {1'h0, bankIdxMasked_10[4]} + {1'h0, bankIdxMasked_11[4]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[4]} + {1'h0, bankIdxMasked_13[4]}}
              + {1'h0, {1'h0, bankIdxMasked_14[4]} + {1'h0, bankIdxMasked_15[4]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_5 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[5]} + {1'h0, bankIdxMasked_1[5]}}
        + {1'h0, {1'h0, bankIdxMasked_2[5]} + {1'h0, bankIdxMasked_3[5]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[5]} + {1'h0, bankIdxMasked_5[5]}}
            + {1'h0, {1'h0, bankIdxMasked_6[5]} + {1'h0, bankIdxMasked_7[5]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[5]} + {1'h0, bankIdxMasked_9[5]}}
          + {1'h0, {1'h0, bankIdxMasked_10[5]} + {1'h0, bankIdxMasked_11[5]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[5]} + {1'h0, bankIdxMasked_13[5]}}
              + {1'h0, {1'h0, bankIdxMasked_14[5]} + {1'h0, bankIdxMasked_15[5]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_6 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[6]} + {1'h0, bankIdxMasked_1[6]}}
        + {1'h0, {1'h0, bankIdxMasked_2[6]} + {1'h0, bankIdxMasked_3[6]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[6]} + {1'h0, bankIdxMasked_5[6]}}
            + {1'h0, {1'h0, bankIdxMasked_6[6]} + {1'h0, bankIdxMasked_7[6]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[6]} + {1'h0, bankIdxMasked_9[6]}}
          + {1'h0, {1'h0, bankIdxMasked_10[6]} + {1'h0, bankIdxMasked_11[6]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[6]} + {1'h0, bankIdxMasked_13[6]}}
              + {1'h0, {1'h0, bankIdxMasked_14[6]} + {1'h0, bankIdxMasked_15[6]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_7 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[7]} + {1'h0, bankIdxMasked_1[7]}}
        + {1'h0, {1'h0, bankIdxMasked_2[7]} + {1'h0, bankIdxMasked_3[7]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[7]} + {1'h0, bankIdxMasked_5[7]}}
            + {1'h0, {1'h0, bankIdxMasked_6[7]} + {1'h0, bankIdxMasked_7[7]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[7]} + {1'h0, bankIdxMasked_9[7]}}
          + {1'h0, {1'h0, bankIdxMasked_10[7]} + {1'h0, bankIdxMasked_11[7]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[7]} + {1'h0, bankIdxMasked_13[7]}}
              + {1'h0, {1'h0, bankIdxMasked_14[7]} + {1'h0, bankIdxMasked_15[7]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_8 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[8]} + {1'h0, bankIdxMasked_1[8]}}
        + {1'h0, {1'h0, bankIdxMasked_2[8]} + {1'h0, bankIdxMasked_3[8]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[8]} + {1'h0, bankIdxMasked_5[8]}}
            + {1'h0, {1'h0, bankIdxMasked_6[8]} + {1'h0, bankIdxMasked_7[8]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[8]} + {1'h0, bankIdxMasked_9[8]}}
          + {1'h0, {1'h0, bankIdxMasked_10[8]} + {1'h0, bankIdxMasked_11[8]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[8]} + {1'h0, bankIdxMasked_13[8]}}
              + {1'h0, {1'h0, bankIdxMasked_14[8]} + {1'h0, bankIdxMasked_15[8]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_9 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[9]} + {1'h0, bankIdxMasked_1[9]}}
        + {1'h0, {1'h0, bankIdxMasked_2[9]} + {1'h0, bankIdxMasked_3[9]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[9]} + {1'h0, bankIdxMasked_5[9]}}
            + {1'h0, {1'h0, bankIdxMasked_6[9]} + {1'h0, bankIdxMasked_7[9]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[9]} + {1'h0, bankIdxMasked_9[9]}}
          + {1'h0, {1'h0, bankIdxMasked_10[9]} + {1'h0, bankIdxMasked_11[9]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[9]} + {1'h0, bankIdxMasked_13[9]}}
              + {1'h0, {1'h0, bankIdxMasked_14[9]} + {1'h0, bankIdxMasked_15[9]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_10 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[10]} + {1'h0, bankIdxMasked_1[10]}}
        + {1'h0, {1'h0, bankIdxMasked_2[10]} + {1'h0, bankIdxMasked_3[10]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[10]} + {1'h0, bankIdxMasked_5[10]}}
            + {1'h0, {1'h0, bankIdxMasked_6[10]} + {1'h0, bankIdxMasked_7[10]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[10]} + {1'h0, bankIdxMasked_9[10]}}
          + {1'h0, {1'h0, bankIdxMasked_10[10]} + {1'h0, bankIdxMasked_11[10]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[10]} + {1'h0, bankIdxMasked_13[10]}}
              + {1'h0, {1'h0, bankIdxMasked_14[10]} + {1'h0, bankIdxMasked_15[10]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_11 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[11]} + {1'h0, bankIdxMasked_1[11]}}
        + {1'h0, {1'h0, bankIdxMasked_2[11]} + {1'h0, bankIdxMasked_3[11]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[11]} + {1'h0, bankIdxMasked_5[11]}}
            + {1'h0, {1'h0, bankIdxMasked_6[11]} + {1'h0, bankIdxMasked_7[11]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[11]} + {1'h0, bankIdxMasked_9[11]}}
          + {1'h0, {1'h0, bankIdxMasked_10[11]} + {1'h0, bankIdxMasked_11[11]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[11]} + {1'h0, bankIdxMasked_13[11]}}
              + {1'h0, {1'h0, bankIdxMasked_14[11]} + {1'h0, bankIdxMasked_15[11]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_12 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[12]} + {1'h0, bankIdxMasked_1[12]}}
        + {1'h0, {1'h0, bankIdxMasked_2[12]} + {1'h0, bankIdxMasked_3[12]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[12]} + {1'h0, bankIdxMasked_5[12]}}
            + {1'h0, {1'h0, bankIdxMasked_6[12]} + {1'h0, bankIdxMasked_7[12]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[12]} + {1'h0, bankIdxMasked_9[12]}}
          + {1'h0, {1'h0, bankIdxMasked_10[12]} + {1'h0, bankIdxMasked_11[12]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[12]} + {1'h0, bankIdxMasked_13[12]}}
              + {1'h0, {1'h0, bankIdxMasked_14[12]} + {1'h0, bankIdxMasked_15[12]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_13 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[13]} + {1'h0, bankIdxMasked_1[13]}}
        + {1'h0, {1'h0, bankIdxMasked_2[13]} + {1'h0, bankIdxMasked_3[13]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[13]} + {1'h0, bankIdxMasked_5[13]}}
            + {1'h0, {1'h0, bankIdxMasked_6[13]} + {1'h0, bankIdxMasked_7[13]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[13]} + {1'h0, bankIdxMasked_9[13]}}
          + {1'h0, {1'h0, bankIdxMasked_10[13]} + {1'h0, bankIdxMasked_11[13]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[13]} + {1'h0, bankIdxMasked_13[13]}}
              + {1'h0, {1'h0, bankIdxMasked_14[13]} + {1'h0, bankIdxMasked_15[13]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_14 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[14]} + {1'h0, bankIdxMasked_1[14]}}
        + {1'h0, {1'h0, bankIdxMasked_2[14]} + {1'h0, bankIdxMasked_3[14]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[14]} + {1'h0, bankIdxMasked_5[14]}}
            + {1'h0, {1'h0, bankIdxMasked_6[14]} + {1'h0, bankIdxMasked_7[14]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[14]} + {1'h0, bankIdxMasked_9[14]}}
          + {1'h0, {1'h0, bankIdxMasked_10[14]} + {1'h0, bankIdxMasked_11[14]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[14]} + {1'h0, bankIdxMasked_13[14]}}
              + {1'h0, {1'h0, bankIdxMasked_14[14]} + {1'h0, bankIdxMasked_15[14]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [4:0]  perBankReqCount_15 =
    {1'h0,
     {1'h0,
      {1'h0, {1'h0, bankIdxMasked_0[15]} + {1'h0, bankIdxMasked_1[15]}}
        + {1'h0, {1'h0, bankIdxMasked_2[15]} + {1'h0, bankIdxMasked_3[15]}}}
       + {1'h0,
          {1'h0, {1'h0, bankIdxMasked_4[15]} + {1'h0, bankIdxMasked_5[15]}}
            + {1'h0, {1'h0, bankIdxMasked_6[15]} + {1'h0, bankIdxMasked_7[15]}}}}
    + {1'h0,
       {1'h0,
        {1'h0, {1'h0, bankIdxMasked_8[15]} + {1'h0, bankIdxMasked_9[15]}}
          + {1'h0, {1'h0, bankIdxMasked_10[15]} + {1'h0, bankIdxMasked_11[15]}}}
         + {1'h0,
            {1'h0, {1'h0, bankIdxMasked_12[15]} + {1'h0, bankIdxMasked_13[15]}}
              + {1'h0, {1'h0, bankIdxMasked_14[15]} + {1'h0, bankIdxMasked_15[15]}}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire        bankConflict =
    (|{|(perBankReqCount_0[4:1]),
       |(perBankReqCount_1[4:1]),
       |(perBankReqCount_2[4:1]),
       |(perBankReqCount_3[4:1]),
       |(perBankReqCount_4[4:1]),
       |(perBankReqCount_5[4:1]),
       |(perBankReqCount_6[4:1]),
       |(perBankReqCount_7[4:1]),
       |(perBankReqCount_8[4:1]),
       |(perBankReqCount_9[4:1]),
       |(perBankReqCount_10[4:1]),
       |(perBankReqCount_11[4:1]),
       |(perBankReqCount_12[4:1]),
       |(perBankReqCount_13[4:1]),
       |(perBankReqCount_14[4:1]),
       |(perBankReqCount_15[4:1])}) & (io_coreReqArb_enable | bankConflict_reg);	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :147:35, :158:46, :159:{22,43,47,72}
  wire [15:0] perBankActiveLaneWhenConflict1H_0 =
    bankIdxMasked_0[0]
      ? 16'h1
      : bankIdxMasked_1[0]
          ? 16'h2
          : bankIdxMasked_2[0]
              ? 16'h4
              : bankIdxMasked_3[0]
                  ? 16'h8
                  : bankIdxMasked_4[0]
                      ? 16'h10
                      : bankIdxMasked_5[0]
                          ? 16'h20
                          : bankIdxMasked_6[0]
                              ? 16'h40
                              : bankIdxMasked_7[0]
                                  ? 16'h80
                                  : bankIdxMasked_8[0]
                                      ? 16'h100
                                      : bankIdxMasked_9[0]
                                          ? 16'h200
                                          : bankIdxMasked_10[0]
                                              ? 16'h400
                                              : bankIdxMasked_11[0]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[0]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[0]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[0]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[0],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_1 =
    bankIdxMasked_0[1]
      ? 16'h1
      : bankIdxMasked_1[1]
          ? 16'h2
          : bankIdxMasked_2[1]
              ? 16'h4
              : bankIdxMasked_3[1]
                  ? 16'h8
                  : bankIdxMasked_4[1]
                      ? 16'h10
                      : bankIdxMasked_5[1]
                          ? 16'h20
                          : bankIdxMasked_6[1]
                              ? 16'h40
                              : bankIdxMasked_7[1]
                                  ? 16'h80
                                  : bankIdxMasked_8[1]
                                      ? 16'h100
                                      : bankIdxMasked_9[1]
                                          ? 16'h200
                                          : bankIdxMasked_10[1]
                                              ? 16'h400
                                              : bankIdxMasked_11[1]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[1]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[1]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[1]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[1],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_2 =
    bankIdxMasked_0[2]
      ? 16'h1
      : bankIdxMasked_1[2]
          ? 16'h2
          : bankIdxMasked_2[2]
              ? 16'h4
              : bankIdxMasked_3[2]
                  ? 16'h8
                  : bankIdxMasked_4[2]
                      ? 16'h10
                      : bankIdxMasked_5[2]
                          ? 16'h20
                          : bankIdxMasked_6[2]
                              ? 16'h40
                              : bankIdxMasked_7[2]
                                  ? 16'h80
                                  : bankIdxMasked_8[2]
                                      ? 16'h100
                                      : bankIdxMasked_9[2]
                                          ? 16'h200
                                          : bankIdxMasked_10[2]
                                              ? 16'h400
                                              : bankIdxMasked_11[2]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[2]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[2]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[2]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[2],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_3 =
    bankIdxMasked_0[3]
      ? 16'h1
      : bankIdxMasked_1[3]
          ? 16'h2
          : bankIdxMasked_2[3]
              ? 16'h4
              : bankIdxMasked_3[3]
                  ? 16'h8
                  : bankIdxMasked_4[3]
                      ? 16'h10
                      : bankIdxMasked_5[3]
                          ? 16'h20
                          : bankIdxMasked_6[3]
                              ? 16'h40
                              : bankIdxMasked_7[3]
                                  ? 16'h80
                                  : bankIdxMasked_8[3]
                                      ? 16'h100
                                      : bankIdxMasked_9[3]
                                          ? 16'h200
                                          : bankIdxMasked_10[3]
                                              ? 16'h400
                                              : bankIdxMasked_11[3]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[3]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[3]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[3]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[3],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_4 =
    bankIdxMasked_0[4]
      ? 16'h1
      : bankIdxMasked_1[4]
          ? 16'h2
          : bankIdxMasked_2[4]
              ? 16'h4
              : bankIdxMasked_3[4]
                  ? 16'h8
                  : bankIdxMasked_4[4]
                      ? 16'h10
                      : bankIdxMasked_5[4]
                          ? 16'h20
                          : bankIdxMasked_6[4]
                              ? 16'h40
                              : bankIdxMasked_7[4]
                                  ? 16'h80
                                  : bankIdxMasked_8[4]
                                      ? 16'h100
                                      : bankIdxMasked_9[4]
                                          ? 16'h200
                                          : bankIdxMasked_10[4]
                                              ? 16'h400
                                              : bankIdxMasked_11[4]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[4]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[4]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[4]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[4],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_5 =
    bankIdxMasked_0[5]
      ? 16'h1
      : bankIdxMasked_1[5]
          ? 16'h2
          : bankIdxMasked_2[5]
              ? 16'h4
              : bankIdxMasked_3[5]
                  ? 16'h8
                  : bankIdxMasked_4[5]
                      ? 16'h10
                      : bankIdxMasked_5[5]
                          ? 16'h20
                          : bankIdxMasked_6[5]
                              ? 16'h40
                              : bankIdxMasked_7[5]
                                  ? 16'h80
                                  : bankIdxMasked_8[5]
                                      ? 16'h100
                                      : bankIdxMasked_9[5]
                                          ? 16'h200
                                          : bankIdxMasked_10[5]
                                              ? 16'h400
                                              : bankIdxMasked_11[5]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[5]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[5]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[5]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[5],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_6 =
    bankIdxMasked_0[6]
      ? 16'h1
      : bankIdxMasked_1[6]
          ? 16'h2
          : bankIdxMasked_2[6]
              ? 16'h4
              : bankIdxMasked_3[6]
                  ? 16'h8
                  : bankIdxMasked_4[6]
                      ? 16'h10
                      : bankIdxMasked_5[6]
                          ? 16'h20
                          : bankIdxMasked_6[6]
                              ? 16'h40
                              : bankIdxMasked_7[6]
                                  ? 16'h80
                                  : bankIdxMasked_8[6]
                                      ? 16'h100
                                      : bankIdxMasked_9[6]
                                          ? 16'h200
                                          : bankIdxMasked_10[6]
                                              ? 16'h400
                                              : bankIdxMasked_11[6]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[6]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[6]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[6]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[6],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_7 =
    bankIdxMasked_0[7]
      ? 16'h1
      : bankIdxMasked_1[7]
          ? 16'h2
          : bankIdxMasked_2[7]
              ? 16'h4
              : bankIdxMasked_3[7]
                  ? 16'h8
                  : bankIdxMasked_4[7]
                      ? 16'h10
                      : bankIdxMasked_5[7]
                          ? 16'h20
                          : bankIdxMasked_6[7]
                              ? 16'h40
                              : bankIdxMasked_7[7]
                                  ? 16'h80
                                  : bankIdxMasked_8[7]
                                      ? 16'h100
                                      : bankIdxMasked_9[7]
                                          ? 16'h200
                                          : bankIdxMasked_10[7]
                                              ? 16'h400
                                              : bankIdxMasked_11[7]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[7]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[7]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[7]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[7],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_8 =
    bankIdxMasked_0[8]
      ? 16'h1
      : bankIdxMasked_1[8]
          ? 16'h2
          : bankIdxMasked_2[8]
              ? 16'h4
              : bankIdxMasked_3[8]
                  ? 16'h8
                  : bankIdxMasked_4[8]
                      ? 16'h10
                      : bankIdxMasked_5[8]
                          ? 16'h20
                          : bankIdxMasked_6[8]
                              ? 16'h40
                              : bankIdxMasked_7[8]
                                  ? 16'h80
                                  : bankIdxMasked_8[8]
                                      ? 16'h100
                                      : bankIdxMasked_9[8]
                                          ? 16'h200
                                          : bankIdxMasked_10[8]
                                              ? 16'h400
                                              : bankIdxMasked_11[8]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[8]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[8]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[8]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[8],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_9 =
    bankIdxMasked_0[9]
      ? 16'h1
      : bankIdxMasked_1[9]
          ? 16'h2
          : bankIdxMasked_2[9]
              ? 16'h4
              : bankIdxMasked_3[9]
                  ? 16'h8
                  : bankIdxMasked_4[9]
                      ? 16'h10
                      : bankIdxMasked_5[9]
                          ? 16'h20
                          : bankIdxMasked_6[9]
                              ? 16'h40
                              : bankIdxMasked_7[9]
                                  ? 16'h80
                                  : bankIdxMasked_8[9]
                                      ? 16'h100
                                      : bankIdxMasked_9[9]
                                          ? 16'h200
                                          : bankIdxMasked_10[9]
                                              ? 16'h400
                                              : bankIdxMasked_11[9]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[9]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[9]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[9]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[9],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_10 =
    bankIdxMasked_0[10]
      ? 16'h1
      : bankIdxMasked_1[10]
          ? 16'h2
          : bankIdxMasked_2[10]
              ? 16'h4
              : bankIdxMasked_3[10]
                  ? 16'h8
                  : bankIdxMasked_4[10]
                      ? 16'h10
                      : bankIdxMasked_5[10]
                          ? 16'h20
                          : bankIdxMasked_6[10]
                              ? 16'h40
                              : bankIdxMasked_7[10]
                                  ? 16'h80
                                  : bankIdxMasked_8[10]
                                      ? 16'h100
                                      : bankIdxMasked_9[10]
                                          ? 16'h200
                                          : bankIdxMasked_10[10]
                                              ? 16'h400
                                              : bankIdxMasked_11[10]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[10]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[10]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[10]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[10],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_11 =
    bankIdxMasked_0[11]
      ? 16'h1
      : bankIdxMasked_1[11]
          ? 16'h2
          : bankIdxMasked_2[11]
              ? 16'h4
              : bankIdxMasked_3[11]
                  ? 16'h8
                  : bankIdxMasked_4[11]
                      ? 16'h10
                      : bankIdxMasked_5[11]
                          ? 16'h20
                          : bankIdxMasked_6[11]
                              ? 16'h40
                              : bankIdxMasked_7[11]
                                  ? 16'h80
                                  : bankIdxMasked_8[11]
                                      ? 16'h100
                                      : bankIdxMasked_9[11]
                                          ? 16'h200
                                          : bankIdxMasked_10[11]
                                              ? 16'h400
                                              : bankIdxMasked_11[11]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[11]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[11]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[11]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[11],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_12 =
    bankIdxMasked_0[12]
      ? 16'h1
      : bankIdxMasked_1[12]
          ? 16'h2
          : bankIdxMasked_2[12]
              ? 16'h4
              : bankIdxMasked_3[12]
                  ? 16'h8
                  : bankIdxMasked_4[12]
                      ? 16'h10
                      : bankIdxMasked_5[12]
                          ? 16'h20
                          : bankIdxMasked_6[12]
                              ? 16'h40
                              : bankIdxMasked_7[12]
                                  ? 16'h80
                                  : bankIdxMasked_8[12]
                                      ? 16'h100
                                      : bankIdxMasked_9[12]
                                          ? 16'h200
                                          : bankIdxMasked_10[12]
                                              ? 16'h400
                                              : bankIdxMasked_11[12]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[12]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[12]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[12]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[12],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_13 =
    bankIdxMasked_0[13]
      ? 16'h1
      : bankIdxMasked_1[13]
          ? 16'h2
          : bankIdxMasked_2[13]
              ? 16'h4
              : bankIdxMasked_3[13]
                  ? 16'h8
                  : bankIdxMasked_4[13]
                      ? 16'h10
                      : bankIdxMasked_5[13]
                          ? 16'h20
                          : bankIdxMasked_6[13]
                              ? 16'h40
                              : bankIdxMasked_7[13]
                                  ? 16'h80
                                  : bankIdxMasked_8[13]
                                      ? 16'h100
                                      : bankIdxMasked_9[13]
                                          ? 16'h200
                                          : bankIdxMasked_10[13]
                                              ? 16'h400
                                              : bankIdxMasked_11[13]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[13]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[13]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[13]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[13],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_14 =
    bankIdxMasked_0[14]
      ? 16'h1
      : bankIdxMasked_1[14]
          ? 16'h2
          : bankIdxMasked_2[14]
              ? 16'h4
              : bankIdxMasked_3[14]
                  ? 16'h8
                  : bankIdxMasked_4[14]
                      ? 16'h10
                      : bankIdxMasked_5[14]
                          ? 16'h20
                          : bankIdxMasked_6[14]
                              ? 16'h40
                              : bankIdxMasked_7[14]
                                  ? 16'h80
                                  : bankIdxMasked_8[14]
                                      ? 16'h100
                                      : bankIdxMasked_9[14]
                                          ? 16'h200
                                          : bankIdxMasked_10[14]
                                              ? 16'h400
                                              : bankIdxMasked_11[14]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[14]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[14]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[14]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[14],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] perBankActiveLaneWhenConflict1H_15 =
    bankIdxMasked_0[15]
      ? 16'h1
      : bankIdxMasked_1[15]
          ? 16'h2
          : bankIdxMasked_2[15]
              ? 16'h4
              : bankIdxMasked_3[15]
                  ? 16'h8
                  : bankIdxMasked_4[15]
                      ? 16'h10
                      : bankIdxMasked_5[15]
                          ? 16'h20
                          : bankIdxMasked_6[15]
                              ? 16'h40
                              : bankIdxMasked_7[15]
                                  ? 16'h80
                                  : bankIdxMasked_8[15]
                                      ? 16'h100
                                      : bankIdxMasked_9[15]
                                          ? 16'h200
                                          : bankIdxMasked_10[15]
                                              ? 16'h400
                                              : bankIdxMasked_11[15]
                                                  ? 16'h800
                                                  : bankIdxMasked_12[15]
                                                      ? 16'h1000
                                                      : bankIdxMasked_13[15]
                                                          ? 16'h2000
                                                          : bankIdxMasked_14[15]
                                                              ? 16'h4000
                                                              : {bankIdxMasked_15[15],
                                                                 15'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [15:0] _ActiveLaneWhenConflict1H_0_T_16 =
    {perBankActiveLaneWhenConflict1H_0[0],
     perBankActiveLaneWhenConflict1H_1[0],
     perBankActiveLaneWhenConflict1H_2[0],
     perBankActiveLaneWhenConflict1H_3[0],
     perBankActiveLaneWhenConflict1H_4[0],
     perBankActiveLaneWhenConflict1H_5[0],
     perBankActiveLaneWhenConflict1H_6[0],
     perBankActiveLaneWhenConflict1H_7[0],
     perBankActiveLaneWhenConflict1H_8[0],
     perBankActiveLaneWhenConflict1H_9[0],
     perBankActiveLaneWhenConflict1H_10[0],
     perBankActiveLaneWhenConflict1H_11[0],
     perBankActiveLaneWhenConflict1H_12[0],
     perBankActiveLaneWhenConflict1H_13[0],
     perBankActiveLaneWhenConflict1H_14[0],
     perBankActiveLaneWhenConflict1H_15[0]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_1_T_16 =
    {perBankActiveLaneWhenConflict1H_0[1],
     perBankActiveLaneWhenConflict1H_1[1],
     perBankActiveLaneWhenConflict1H_2[1],
     perBankActiveLaneWhenConflict1H_3[1],
     perBankActiveLaneWhenConflict1H_4[1],
     perBankActiveLaneWhenConflict1H_5[1],
     perBankActiveLaneWhenConflict1H_6[1],
     perBankActiveLaneWhenConflict1H_7[1],
     perBankActiveLaneWhenConflict1H_8[1],
     perBankActiveLaneWhenConflict1H_9[1],
     perBankActiveLaneWhenConflict1H_10[1],
     perBankActiveLaneWhenConflict1H_11[1],
     perBankActiveLaneWhenConflict1H_12[1],
     perBankActiveLaneWhenConflict1H_13[1],
     perBankActiveLaneWhenConflict1H_14[1],
     perBankActiveLaneWhenConflict1H_15[1]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_2_T_16 =
    {perBankActiveLaneWhenConflict1H_0[2],
     perBankActiveLaneWhenConflict1H_1[2],
     perBankActiveLaneWhenConflict1H_2[2],
     perBankActiveLaneWhenConflict1H_3[2],
     perBankActiveLaneWhenConflict1H_4[2],
     perBankActiveLaneWhenConflict1H_5[2],
     perBankActiveLaneWhenConflict1H_6[2],
     perBankActiveLaneWhenConflict1H_7[2],
     perBankActiveLaneWhenConflict1H_8[2],
     perBankActiveLaneWhenConflict1H_9[2],
     perBankActiveLaneWhenConflict1H_10[2],
     perBankActiveLaneWhenConflict1H_11[2],
     perBankActiveLaneWhenConflict1H_12[2],
     perBankActiveLaneWhenConflict1H_13[2],
     perBankActiveLaneWhenConflict1H_14[2],
     perBankActiveLaneWhenConflict1H_15[2]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_3_T_16 =
    {perBankActiveLaneWhenConflict1H_0[3],
     perBankActiveLaneWhenConflict1H_1[3],
     perBankActiveLaneWhenConflict1H_2[3],
     perBankActiveLaneWhenConflict1H_3[3],
     perBankActiveLaneWhenConflict1H_4[3],
     perBankActiveLaneWhenConflict1H_5[3],
     perBankActiveLaneWhenConflict1H_6[3],
     perBankActiveLaneWhenConflict1H_7[3],
     perBankActiveLaneWhenConflict1H_8[3],
     perBankActiveLaneWhenConflict1H_9[3],
     perBankActiveLaneWhenConflict1H_10[3],
     perBankActiveLaneWhenConflict1H_11[3],
     perBankActiveLaneWhenConflict1H_12[3],
     perBankActiveLaneWhenConflict1H_13[3],
     perBankActiveLaneWhenConflict1H_14[3],
     perBankActiveLaneWhenConflict1H_15[3]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_4_T_16 =
    {perBankActiveLaneWhenConflict1H_0[4],
     perBankActiveLaneWhenConflict1H_1[4],
     perBankActiveLaneWhenConflict1H_2[4],
     perBankActiveLaneWhenConflict1H_3[4],
     perBankActiveLaneWhenConflict1H_4[4],
     perBankActiveLaneWhenConflict1H_5[4],
     perBankActiveLaneWhenConflict1H_6[4],
     perBankActiveLaneWhenConflict1H_7[4],
     perBankActiveLaneWhenConflict1H_8[4],
     perBankActiveLaneWhenConflict1H_9[4],
     perBankActiveLaneWhenConflict1H_10[4],
     perBankActiveLaneWhenConflict1H_11[4],
     perBankActiveLaneWhenConflict1H_12[4],
     perBankActiveLaneWhenConflict1H_13[4],
     perBankActiveLaneWhenConflict1H_14[4],
     perBankActiveLaneWhenConflict1H_15[4]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_5_T_16 =
    {perBankActiveLaneWhenConflict1H_0[5],
     perBankActiveLaneWhenConflict1H_1[5],
     perBankActiveLaneWhenConflict1H_2[5],
     perBankActiveLaneWhenConflict1H_3[5],
     perBankActiveLaneWhenConflict1H_4[5],
     perBankActiveLaneWhenConflict1H_5[5],
     perBankActiveLaneWhenConflict1H_6[5],
     perBankActiveLaneWhenConflict1H_7[5],
     perBankActiveLaneWhenConflict1H_8[5],
     perBankActiveLaneWhenConflict1H_9[5],
     perBankActiveLaneWhenConflict1H_10[5],
     perBankActiveLaneWhenConflict1H_11[5],
     perBankActiveLaneWhenConflict1H_12[5],
     perBankActiveLaneWhenConflict1H_13[5],
     perBankActiveLaneWhenConflict1H_14[5],
     perBankActiveLaneWhenConflict1H_15[5]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_6_T_16 =
    {perBankActiveLaneWhenConflict1H_0[6],
     perBankActiveLaneWhenConflict1H_1[6],
     perBankActiveLaneWhenConflict1H_2[6],
     perBankActiveLaneWhenConflict1H_3[6],
     perBankActiveLaneWhenConflict1H_4[6],
     perBankActiveLaneWhenConflict1H_5[6],
     perBankActiveLaneWhenConflict1H_6[6],
     perBankActiveLaneWhenConflict1H_7[6],
     perBankActiveLaneWhenConflict1H_8[6],
     perBankActiveLaneWhenConflict1H_9[6],
     perBankActiveLaneWhenConflict1H_10[6],
     perBankActiveLaneWhenConflict1H_11[6],
     perBankActiveLaneWhenConflict1H_12[6],
     perBankActiveLaneWhenConflict1H_13[6],
     perBankActiveLaneWhenConflict1H_14[6],
     perBankActiveLaneWhenConflict1H_15[6]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_7_T_16 =
    {perBankActiveLaneWhenConflict1H_0[7],
     perBankActiveLaneWhenConflict1H_1[7],
     perBankActiveLaneWhenConflict1H_2[7],
     perBankActiveLaneWhenConflict1H_3[7],
     perBankActiveLaneWhenConflict1H_4[7],
     perBankActiveLaneWhenConflict1H_5[7],
     perBankActiveLaneWhenConflict1H_6[7],
     perBankActiveLaneWhenConflict1H_7[7],
     perBankActiveLaneWhenConflict1H_8[7],
     perBankActiveLaneWhenConflict1H_9[7],
     perBankActiveLaneWhenConflict1H_10[7],
     perBankActiveLaneWhenConflict1H_11[7],
     perBankActiveLaneWhenConflict1H_12[7],
     perBankActiveLaneWhenConflict1H_13[7],
     perBankActiveLaneWhenConflict1H_14[7],
     perBankActiveLaneWhenConflict1H_15[7]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_8_T_16 =
    {perBankActiveLaneWhenConflict1H_0[8],
     perBankActiveLaneWhenConflict1H_1[8],
     perBankActiveLaneWhenConflict1H_2[8],
     perBankActiveLaneWhenConflict1H_3[8],
     perBankActiveLaneWhenConflict1H_4[8],
     perBankActiveLaneWhenConflict1H_5[8],
     perBankActiveLaneWhenConflict1H_6[8],
     perBankActiveLaneWhenConflict1H_7[8],
     perBankActiveLaneWhenConflict1H_8[8],
     perBankActiveLaneWhenConflict1H_9[8],
     perBankActiveLaneWhenConflict1H_10[8],
     perBankActiveLaneWhenConflict1H_11[8],
     perBankActiveLaneWhenConflict1H_12[8],
     perBankActiveLaneWhenConflict1H_13[8],
     perBankActiveLaneWhenConflict1H_14[8],
     perBankActiveLaneWhenConflict1H_15[8]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_9_T_16 =
    {perBankActiveLaneWhenConflict1H_0[9],
     perBankActiveLaneWhenConflict1H_1[9],
     perBankActiveLaneWhenConflict1H_2[9],
     perBankActiveLaneWhenConflict1H_3[9],
     perBankActiveLaneWhenConflict1H_4[9],
     perBankActiveLaneWhenConflict1H_5[9],
     perBankActiveLaneWhenConflict1H_6[9],
     perBankActiveLaneWhenConflict1H_7[9],
     perBankActiveLaneWhenConflict1H_8[9],
     perBankActiveLaneWhenConflict1H_9[9],
     perBankActiveLaneWhenConflict1H_10[9],
     perBankActiveLaneWhenConflict1H_11[9],
     perBankActiveLaneWhenConflict1H_12[9],
     perBankActiveLaneWhenConflict1H_13[9],
     perBankActiveLaneWhenConflict1H_14[9],
     perBankActiveLaneWhenConflict1H_15[9]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_10_T_16 =
    {perBankActiveLaneWhenConflict1H_0[10],
     perBankActiveLaneWhenConflict1H_1[10],
     perBankActiveLaneWhenConflict1H_2[10],
     perBankActiveLaneWhenConflict1H_3[10],
     perBankActiveLaneWhenConflict1H_4[10],
     perBankActiveLaneWhenConflict1H_5[10],
     perBankActiveLaneWhenConflict1H_6[10],
     perBankActiveLaneWhenConflict1H_7[10],
     perBankActiveLaneWhenConflict1H_8[10],
     perBankActiveLaneWhenConflict1H_9[10],
     perBankActiveLaneWhenConflict1H_10[10],
     perBankActiveLaneWhenConflict1H_11[10],
     perBankActiveLaneWhenConflict1H_12[10],
     perBankActiveLaneWhenConflict1H_13[10],
     perBankActiveLaneWhenConflict1H_14[10],
     perBankActiveLaneWhenConflict1H_15[10]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_11_T_16 =
    {perBankActiveLaneWhenConflict1H_0[11],
     perBankActiveLaneWhenConflict1H_1[11],
     perBankActiveLaneWhenConflict1H_2[11],
     perBankActiveLaneWhenConflict1H_3[11],
     perBankActiveLaneWhenConflict1H_4[11],
     perBankActiveLaneWhenConflict1H_5[11],
     perBankActiveLaneWhenConflict1H_6[11],
     perBankActiveLaneWhenConflict1H_7[11],
     perBankActiveLaneWhenConflict1H_8[11],
     perBankActiveLaneWhenConflict1H_9[11],
     perBankActiveLaneWhenConflict1H_10[11],
     perBankActiveLaneWhenConflict1H_11[11],
     perBankActiveLaneWhenConflict1H_12[11],
     perBankActiveLaneWhenConflict1H_13[11],
     perBankActiveLaneWhenConflict1H_14[11],
     perBankActiveLaneWhenConflict1H_15[11]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_12_T_16 =
    {perBankActiveLaneWhenConflict1H_0[12],
     perBankActiveLaneWhenConflict1H_1[12],
     perBankActiveLaneWhenConflict1H_2[12],
     perBankActiveLaneWhenConflict1H_3[12],
     perBankActiveLaneWhenConflict1H_4[12],
     perBankActiveLaneWhenConflict1H_5[12],
     perBankActiveLaneWhenConflict1H_6[12],
     perBankActiveLaneWhenConflict1H_7[12],
     perBankActiveLaneWhenConflict1H_8[12],
     perBankActiveLaneWhenConflict1H_9[12],
     perBankActiveLaneWhenConflict1H_10[12],
     perBankActiveLaneWhenConflict1H_11[12],
     perBankActiveLaneWhenConflict1H_12[12],
     perBankActiveLaneWhenConflict1H_13[12],
     perBankActiveLaneWhenConflict1H_14[12],
     perBankActiveLaneWhenConflict1H_15[12]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_13_T_16 =
    {perBankActiveLaneWhenConflict1H_0[13],
     perBankActiveLaneWhenConflict1H_1[13],
     perBankActiveLaneWhenConflict1H_2[13],
     perBankActiveLaneWhenConflict1H_3[13],
     perBankActiveLaneWhenConflict1H_4[13],
     perBankActiveLaneWhenConflict1H_5[13],
     perBankActiveLaneWhenConflict1H_6[13],
     perBankActiveLaneWhenConflict1H_7[13],
     perBankActiveLaneWhenConflict1H_8[13],
     perBankActiveLaneWhenConflict1H_9[13],
     perBankActiveLaneWhenConflict1H_10[13],
     perBankActiveLaneWhenConflict1H_11[13],
     perBankActiveLaneWhenConflict1H_12[13],
     perBankActiveLaneWhenConflict1H_13[13],
     perBankActiveLaneWhenConflict1H_14[13],
     perBankActiveLaneWhenConflict1H_15[13]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_14_T_16 =
    {perBankActiveLaneWhenConflict1H_0[14],
     perBankActiveLaneWhenConflict1H_1[14],
     perBankActiveLaneWhenConflict1H_2[14],
     perBankActiveLaneWhenConflict1H_3[14],
     perBankActiveLaneWhenConflict1H_4[14],
     perBankActiveLaneWhenConflict1H_5[14],
     perBankActiveLaneWhenConflict1H_6[14],
     perBankActiveLaneWhenConflict1H_7[14],
     perBankActiveLaneWhenConflict1H_8[14],
     perBankActiveLaneWhenConflict1H_9[14],
     perBankActiveLaneWhenConflict1H_10[14],
     perBankActiveLaneWhenConflict1H_11[14],
     perBankActiveLaneWhenConflict1H_12[14],
     perBankActiveLaneWhenConflict1H_13[14],
     perBankActiveLaneWhenConflict1H_14[14],
     perBankActiveLaneWhenConflict1H_15[14]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [15:0] _ActiveLaneWhenConflict1H_15_T_16 =
    {perBankActiveLaneWhenConflict1H_0[15],
     perBankActiveLaneWhenConflict1H_1[15],
     perBankActiveLaneWhenConflict1H_2[15],
     perBankActiveLaneWhenConflict1H_3[15],
     perBankActiveLaneWhenConflict1H_4[15],
     perBankActiveLaneWhenConflict1H_5[15],
     perBankActiveLaneWhenConflict1H_6[15],
     perBankActiveLaneWhenConflict1H_7[15],
     perBankActiveLaneWhenConflict1H_8[15],
     perBankActiveLaneWhenConflict1H_9[15],
     perBankActiveLaneWhenConflict1H_10[15],
     perBankActiveLaneWhenConflict1H_11[15],
     perBankActiveLaneWhenConflict1H_12[15],
     perBankActiveLaneWhenConflict1H_13[15],
     perBankActiveLaneWhenConflict1H_14[15],
     perBankActiveLaneWhenConflict1H_15[15]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  assign laneActiveMask_0 =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_activeMask
      : io_coreReqArb_perLaneAddr_0_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_0 =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_bankIdx
      : io_coreReqArb_perLaneAddr_0_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_0_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_0_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_0_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_0_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_1 =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_activeMask
      : io_coreReqArb_perLaneAddr_1_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_1 =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_bankIdx
      : io_coreReqArb_perLaneAddr_1_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_1_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_1_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_1_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_1_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_2 =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_activeMask
      : io_coreReqArb_perLaneAddr_2_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_2 =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_bankIdx
      : io_coreReqArb_perLaneAddr_2_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_2_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_2_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_2_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_2_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_3 =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_activeMask
      : io_coreReqArb_perLaneAddr_3_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_3 =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_bankIdx
      : io_coreReqArb_perLaneAddr_3_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_3_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_3_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_3_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_3_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_4 =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_activeMask
      : io_coreReqArb_perLaneAddr_4_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_4 =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_bankIdx
      : io_coreReqArb_perLaneAddr_4_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_4_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_4_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_4_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_4_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_5 =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_activeMask
      : io_coreReqArb_perLaneAddr_5_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_5 =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_bankIdx
      : io_coreReqArb_perLaneAddr_5_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_5_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_5_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_5_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_5_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_6 =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_activeMask
      : io_coreReqArb_perLaneAddr_6_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_6 =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_bankIdx
      : io_coreReqArb_perLaneAddr_6_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_6_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_6_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_6_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_6_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_7 =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_activeMask
      : io_coreReqArb_perLaneAddr_7_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_7 =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_bankIdx
      : io_coreReqArb_perLaneAddr_7_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_7_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_7_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_7_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_7_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_8 =
    bankConflict_reg
      ? perLaneConflictReq_reg_8_activeMask
      : io_coreReqArb_perLaneAddr_8_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_8 =
    bankConflict_reg
      ? perLaneConflictReq_reg_8_bankIdx
      : io_coreReqArb_perLaneAddr_8_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_8_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_8_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_8_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_8_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_8_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_8_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_9 =
    bankConflict_reg
      ? perLaneConflictReq_reg_9_activeMask
      : io_coreReqArb_perLaneAddr_9_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_9 =
    bankConflict_reg
      ? perLaneConflictReq_reg_9_bankIdx
      : io_coreReqArb_perLaneAddr_9_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_9_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_9_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_9_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_9_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_9_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_9_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_10 =
    bankConflict_reg
      ? perLaneConflictReq_reg_10_activeMask
      : io_coreReqArb_perLaneAddr_10_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_10 =
    bankConflict_reg
      ? perLaneConflictReq_reg_10_bankIdx
      : io_coreReqArb_perLaneAddr_10_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_10_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_10_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_10_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_10_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_10_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_10_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_11 =
    bankConflict_reg
      ? perLaneConflictReq_reg_11_activeMask
      : io_coreReqArb_perLaneAddr_11_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_11 =
    bankConflict_reg
      ? perLaneConflictReq_reg_11_bankIdx
      : io_coreReqArb_perLaneAddr_11_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_11_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_11_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_11_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_11_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_11_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_11_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_12 =
    bankConflict_reg
      ? perLaneConflictReq_reg_12_activeMask
      : io_coreReqArb_perLaneAddr_12_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_12 =
    bankConflict_reg
      ? perLaneConflictReq_reg_12_bankIdx
      : io_coreReqArb_perLaneAddr_12_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_12_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_12_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_12_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_12_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_12_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_12_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_13 =
    bankConflict_reg
      ? perLaneConflictReq_reg_13_activeMask
      : io_coreReqArb_perLaneAddr_13_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_13 =
    bankConflict_reg
      ? perLaneConflictReq_reg_13_bankIdx
      : io_coreReqArb_perLaneAddr_13_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_13_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_13_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_13_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_13_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_13_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_13_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_14 =
    bankConflict_reg
      ? perLaneConflictReq_reg_14_activeMask
      : io_coreReqArb_perLaneAddr_14_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_14 =
    bankConflict_reg
      ? perLaneConflictReq_reg_14_bankIdx
      : io_coreReqArb_perLaneAddr_14_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_14_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_14_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_14_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_14_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_14_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_14_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_15 =
    bankConflict_reg
      ? perLaneConflictReq_reg_15_activeMask
      : io_coreReqArb_perLaneAddr_15_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_15 =
    bankConflict_reg
      ? perLaneConflictReq_reg_15_bankIdx
      : io_coreReqArb_perLaneAddr_15_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire        perLaneConflictReq_15_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_15_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_15_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0]  perLaneConflictReq_15_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_15_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_15_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  always @(posedge clock) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    automatic logic [15:0] _ReserveLaneWhenConflict1H_T_1 =
      ~{|_ActiveLaneWhenConflict1H_0_T_16,
        |_ActiveLaneWhenConflict1H_1_T_16,
        |_ActiveLaneWhenConflict1H_2_T_16,
        |_ActiveLaneWhenConflict1H_3_T_16,
        |_ActiveLaneWhenConflict1H_4_T_16,
        |_ActiveLaneWhenConflict1H_5_T_16,
        |_ActiveLaneWhenConflict1H_6_T_16,
        |_ActiveLaneWhenConflict1H_7_T_16,
        |_ActiveLaneWhenConflict1H_8_T_16,
        |_ActiveLaneWhenConflict1H_9_T_16,
        |_ActiveLaneWhenConflict1H_10_T_16,
        |_ActiveLaneWhenConflict1H_11_T_16,
        |_ActiveLaneWhenConflict1H_12_T_16,
        |_ActiveLaneWhenConflict1H_13_T_16,
        |_ActiveLaneWhenConflict1H_14_T_16,
        |_ActiveLaneWhenConflict1H_15_T_16};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,83}, :168:{45,49}
    automatic logic        ReserveLaneWhenConflict1H_15 =
      _ReserveLaneWhenConflict1H_T_1[0] & laneActiveMask_15;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_14 =
      _ReserveLaneWhenConflict1H_T_1[1] & laneActiveMask_14;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_13 =
      _ReserveLaneWhenConflict1H_T_1[2] & laneActiveMask_13;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_12 =
      _ReserveLaneWhenConflict1H_T_1[3] & laneActiveMask_12;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_11 =
      _ReserveLaneWhenConflict1H_T_1[4] & laneActiveMask_11;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_10 =
      _ReserveLaneWhenConflict1H_T_1[5] & laneActiveMask_10;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_9 =
      _ReserveLaneWhenConflict1H_T_1[6] & laneActiveMask_9;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_8 =
      _ReserveLaneWhenConflict1H_T_1[7] & laneActiveMask_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_7 =
      _ReserveLaneWhenConflict1H_T_1[8] & laneActiveMask_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_6 =
      _ReserveLaneWhenConflict1H_T_1[9] & laneActiveMask_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_5 =
      _ReserveLaneWhenConflict1H_T_1[10] & laneActiveMask_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_4 =
      _ReserveLaneWhenConflict1H_T_1[11] & laneActiveMask_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_3 =
      _ReserveLaneWhenConflict1H_T_1[12] & laneActiveMask_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_2 =
      _ReserveLaneWhenConflict1H_T_1[13] & laneActiveMask_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_1 =
      _ReserveLaneWhenConflict1H_T_1[14] & laneActiveMask_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic        ReserveLaneWhenConflict1H_0 =
      _ReserveLaneWhenConflict1H_T_1[15] & laneActiveMask_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    if (reset)	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      bankConflict_reg <= 1'h0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33
    else	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      bankConflict_reg <= bankConflict;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :159:47
    if (bankConflict)	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:159:47
      conflictReqIsW_reg <= io_coreReqArb_isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:117:31
    perLaneConflictReq_reg_0_activeMask <= ReserveLaneWhenConflict1H_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_0 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_0_bankIdx <= io_coreReqArb_perLaneAddr_0_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_0_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_0_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_0_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_0_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_1_activeMask <= ReserveLaneWhenConflict1H_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_1 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_1_bankIdx <= io_coreReqArb_perLaneAddr_1_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_1_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_1_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_1_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_1_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_2_activeMask <= ReserveLaneWhenConflict1H_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_2 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_2_bankIdx <= io_coreReqArb_perLaneAddr_2_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_2_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_2_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_2_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_2_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_3_activeMask <= ReserveLaneWhenConflict1H_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_3 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_3_bankIdx <= io_coreReqArb_perLaneAddr_3_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_3_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_3_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_3_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_3_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_4_activeMask <= ReserveLaneWhenConflict1H_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_4 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_4_bankIdx <= io_coreReqArb_perLaneAddr_4_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_4_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_4_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_4_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_4_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_5_activeMask <= ReserveLaneWhenConflict1H_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_5 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_5_bankIdx <= io_coreReqArb_perLaneAddr_5_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_5_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_5_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_5_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_5_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_6_activeMask <= ReserveLaneWhenConflict1H_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_6 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_6_bankIdx <= io_coreReqArb_perLaneAddr_6_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_6_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_6_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_6_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_6_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_7_activeMask <= ReserveLaneWhenConflict1H_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_7 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_7_bankIdx <= io_coreReqArb_perLaneAddr_7_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_7_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_7_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_7_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_7_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_8_activeMask <= ReserveLaneWhenConflict1H_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_8 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_8_bankIdx <= io_coreReqArb_perLaneAddr_8_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_8_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_8_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_8_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_8_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_9_activeMask <= ReserveLaneWhenConflict1H_9;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_9 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_9_bankIdx <= io_coreReqArb_perLaneAddr_9_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_9_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_9_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_9_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_9_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_10_activeMask <= ReserveLaneWhenConflict1H_10;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_10 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_10_bankIdx <= io_coreReqArb_perLaneAddr_10_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_10_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_10_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_10_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_10_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_11_activeMask <= ReserveLaneWhenConflict1H_11;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_11 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_11_bankIdx <= io_coreReqArb_perLaneAddr_11_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_11_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_11_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_11_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_11_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_12_activeMask <= ReserveLaneWhenConflict1H_12;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_12 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_12_bankIdx <= io_coreReqArb_perLaneAddr_12_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_12_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_12_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_12_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_12_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_13_activeMask <= ReserveLaneWhenConflict1H_13;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_13 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_13_bankIdx <= io_coreReqArb_perLaneAddr_13_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_13_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_13_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_13_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_13_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_14_activeMask <= ReserveLaneWhenConflict1H_14;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_14 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_14_bankIdx <= io_coreReqArb_perLaneAddr_14_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_14_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_14_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_14_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_14_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_15_activeMask <= ReserveLaneWhenConflict1H_15;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_15 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_15_bankIdx <= io_coreReqArb_perLaneAddr_15_blockOffset[3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_15_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_15_blockOffset[4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_15_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_15_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      automatic logic [31:0] _RANDOM[0:5];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        `INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        end	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        bankConflict_reg = _RANDOM[3'h0][0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33
        conflictReqIsW_reg = _RANDOM[3'h0][1];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :117:31
        perLaneConflictReq_reg_0_activeMask = _RANDOM[3'h0][2];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_bankIdx = _RANDOM[3'h0][6:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_AddrBundle_bankOffset = _RANDOM[3'h0][7];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_AddrBundle_wordOffset1H = _RANDOM[3'h0][11:8];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_activeMask = _RANDOM[3'h0][12];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_bankIdx = _RANDOM[3'h0][16:13];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_AddrBundle_bankOffset = _RANDOM[3'h0][17];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_AddrBundle_wordOffset1H = _RANDOM[3'h0][21:18];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_activeMask = _RANDOM[3'h0][22];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_bankIdx = _RANDOM[3'h0][26:23];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_AddrBundle_bankOffset = _RANDOM[3'h0][27];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_AddrBundle_wordOffset1H = _RANDOM[3'h0][31:28];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_3_activeMask = _RANDOM[3'h1][0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_bankIdx = _RANDOM[3'h1][4:1];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_AddrBundle_bankOffset = _RANDOM[3'h1][5];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_AddrBundle_wordOffset1H = _RANDOM[3'h1][9:6];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_activeMask = _RANDOM[3'h1][10];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_bankIdx = _RANDOM[3'h1][14:11];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_AddrBundle_bankOffset = _RANDOM[3'h1][15];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_AddrBundle_wordOffset1H = _RANDOM[3'h1][19:16];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_activeMask = _RANDOM[3'h1][20];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_bankIdx = _RANDOM[3'h1][24:21];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_AddrBundle_bankOffset = _RANDOM[3'h1][25];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_AddrBundle_wordOffset1H = _RANDOM[3'h1][29:26];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_activeMask = _RANDOM[3'h1][30];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_bankIdx = {_RANDOM[3'h1][31], _RANDOM[3'h2][2:0]};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_AddrBundle_bankOffset = _RANDOM[3'h2][3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_AddrBundle_wordOffset1H = _RANDOM[3'h2][7:4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_activeMask = _RANDOM[3'h2][8];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_bankIdx = _RANDOM[3'h2][12:9];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_AddrBundle_bankOffset = _RANDOM[3'h2][13];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_AddrBundle_wordOffset1H = _RANDOM[3'h2][17:14];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_8_activeMask = _RANDOM[3'h2][18];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_8_bankIdx = _RANDOM[3'h2][22:19];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_8_AddrBundle_bankOffset = _RANDOM[3'h2][23];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_8_AddrBundle_wordOffset1H = _RANDOM[3'h2][27:24];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_9_activeMask = _RANDOM[3'h2][28];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_9_bankIdx = {_RANDOM[3'h2][31:29], _RANDOM[3'h3][0]};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_9_AddrBundle_bankOffset = _RANDOM[3'h3][1];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_9_AddrBundle_wordOffset1H = _RANDOM[3'h3][5:2];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_10_activeMask = _RANDOM[3'h3][6];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_10_bankIdx = _RANDOM[3'h3][10:7];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_10_AddrBundle_bankOffset = _RANDOM[3'h3][11];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_10_AddrBundle_wordOffset1H = _RANDOM[3'h3][15:12];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_11_activeMask = _RANDOM[3'h3][16];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_11_bankIdx = _RANDOM[3'h3][20:17];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_11_AddrBundle_bankOffset = _RANDOM[3'h3][21];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_11_AddrBundle_wordOffset1H = _RANDOM[3'h3][25:22];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_12_activeMask = _RANDOM[3'h3][26];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_12_bankIdx = _RANDOM[3'h3][30:27];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_12_AddrBundle_bankOffset = _RANDOM[3'h3][31];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_12_AddrBundle_wordOffset1H = _RANDOM[3'h4][3:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_13_activeMask = _RANDOM[3'h4][4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_13_bankIdx = _RANDOM[3'h4][8:5];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_13_AddrBundle_bankOffset = _RANDOM[3'h4][9];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_13_AddrBundle_wordOffset1H = _RANDOM[3'h4][13:10];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_14_activeMask = _RANDOM[3'h4][14];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_14_bankIdx = _RANDOM[3'h4][18:15];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_14_AddrBundle_bankOffset = _RANDOM[3'h4][19];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_14_AddrBundle_wordOffset1H = _RANDOM[3'h4][23:20];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_15_activeMask = _RANDOM[3'h4][24];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_15_bankIdx = _RANDOM[3'h4][28:25];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_15_AddrBundle_bankOffset = _RANDOM[3'h4][29];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_15_AddrBundle_wordOffset1H =
          {_RANDOM[3'h4][31:30], _RANDOM[3'h5][1:0]};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_dataCrsbarSel1H_0 =
    isWrite ? perBankActiveLaneWhenConflict1H_0 : bankIdxMasked_0;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_1 =
    isWrite ? perBankActiveLaneWhenConflict1H_1 : bankIdxMasked_1;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_2 =
    isWrite ? perBankActiveLaneWhenConflict1H_2 : bankIdxMasked_2;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_3 =
    isWrite ? perBankActiveLaneWhenConflict1H_3 : bankIdxMasked_3;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_4 =
    isWrite ? perBankActiveLaneWhenConflict1H_4 : bankIdxMasked_4;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_5 =
    isWrite ? perBankActiveLaneWhenConflict1H_5 : bankIdxMasked_5;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_6 =
    isWrite ? perBankActiveLaneWhenConflict1H_6 : bankIdxMasked_6;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_7 =
    isWrite ? perBankActiveLaneWhenConflict1H_7 : bankIdxMasked_7;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_8 =
    isWrite ? perBankActiveLaneWhenConflict1H_8 : bankIdxMasked_8;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_9 =
    isWrite ? perBankActiveLaneWhenConflict1H_9 : bankIdxMasked_9;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_10 =
    isWrite ? perBankActiveLaneWhenConflict1H_10 : bankIdxMasked_10;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_11 =
    isWrite ? perBankActiveLaneWhenConflict1H_11 : bankIdxMasked_11;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_12 =
    isWrite ? perBankActiveLaneWhenConflict1H_12 : bankIdxMasked_12;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_13 =
    isWrite ? perBankActiveLaneWhenConflict1H_13 : bankIdxMasked_13;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_14 =
    isWrite ? perBankActiveLaneWhenConflict1H_14 : bankIdxMasked_14;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_15 =
    isWrite ? perBankActiveLaneWhenConflict1H_15 : bankIdxMasked_15;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_addrCrsbarOut_0_bankOffset =
    perBankActiveLaneWhenConflict1H_0[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_0[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_0_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_0[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_1_bankOffset =
    perBankActiveLaneWhenConflict1H_1[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_1[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_1_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_1[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_2_bankOffset =
    perBankActiveLaneWhenConflict1H_2[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_2[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_2_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_2[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_3_bankOffset =
    perBankActiveLaneWhenConflict1H_3[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_3[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_3_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_3[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_4_bankOffset =
    perBankActiveLaneWhenConflict1H_4[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_4[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_4_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_4[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_5_bankOffset =
    perBankActiveLaneWhenConflict1H_5[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_5[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_5_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_5[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_6_bankOffset =
    perBankActiveLaneWhenConflict1H_6[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_6[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_6_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_6[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_7_bankOffset =
    perBankActiveLaneWhenConflict1H_7[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_7[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_7_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_7[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_8_bankOffset =
    perBankActiveLaneWhenConflict1H_8[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_8[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_8_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_8[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_8[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_9_bankOffset =
    perBankActiveLaneWhenConflict1H_9[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_9[15] & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_9_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_9[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_9[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_10_bankOffset =
    perBankActiveLaneWhenConflict1H_10[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_10[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_10_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_10[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_10[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_11_bankOffset =
    perBankActiveLaneWhenConflict1H_11[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_11[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_11_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_11[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_11[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_12_bankOffset =
    perBankActiveLaneWhenConflict1H_12[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_12[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_12_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_12[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_12[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_13_bankOffset =
    perBankActiveLaneWhenConflict1H_13[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_13[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_13_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_13[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_13[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_14_bankOffset =
    perBankActiveLaneWhenConflict1H_14[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_14[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_14_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_14[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_14[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_15_bankOffset =
    perBankActiveLaneWhenConflict1H_15[0] & perLaneConflictReq_0_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[1] & perLaneConflictReq_1_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[2] & perLaneConflictReq_2_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[3] & perLaneConflictReq_3_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[4] & perLaneConflictReq_4_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[5] & perLaneConflictReq_5_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[6] & perLaneConflictReq_6_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[7] & perLaneConflictReq_7_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[8] & perLaneConflictReq_8_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[9] & perLaneConflictReq_9_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[10] & perLaneConflictReq_10_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[11] & perLaneConflictReq_11_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[12] & perLaneConflictReq_12_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[13] & perLaneConflictReq_13_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[14] & perLaneConflictReq_14_AddrBundle_bankOffset
    | perBankActiveLaneWhenConflict1H_15[15]
    & perLaneConflictReq_15_AddrBundle_bankOffset;	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_15_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_15[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[8]
         ? perLaneConflictReq_8_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[9]
         ? perLaneConflictReq_9_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[10]
         ? perLaneConflictReq_10_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[11]
         ? perLaneConflictReq_11_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[12]
         ? perLaneConflictReq_12_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[13]
         ? perLaneConflictReq_13_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[14]
         ? perLaneConflictReq_14_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_15[15]
         ? perLaneConflictReq_15_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_dataArrayEn_0 = |perBankActiveLaneWhenConflict1H_0;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_1 = |perBankActiveLaneWhenConflict1H_1;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_2 = |perBankActiveLaneWhenConflict1H_2;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_3 = |perBankActiveLaneWhenConflict1H_3;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_4 = |perBankActiveLaneWhenConflict1H_4;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_5 = |perBankActiveLaneWhenConflict1H_5;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_6 = |perBankActiveLaneWhenConflict1H_6;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_7 = |perBankActiveLaneWhenConflict1H_7;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_8 = |perBankActiveLaneWhenConflict1H_8;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_9 = |perBankActiveLaneWhenConflict1H_9;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_10 = |perBankActiveLaneWhenConflict1H_10;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_11 = |perBankActiveLaneWhenConflict1H_11;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_12 = |perBankActiveLaneWhenConflict1H_12;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_13 = |perBankActiveLaneWhenConflict1H_13;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_14 = |perBankActiveLaneWhenConflict1H_14;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_15 = |perBankActiveLaneWhenConflict1H_15;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_activeLane_0 = |_ActiveLaneWhenConflict1H_0_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_1 = |_ActiveLaneWhenConflict1H_1_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_2 = |_ActiveLaneWhenConflict1H_2_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_3 = |_ActiveLaneWhenConflict1H_3_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_4 = |_ActiveLaneWhenConflict1H_4_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_5 = |_ActiveLaneWhenConflict1H_5_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_6 = |_ActiveLaneWhenConflict1H_6_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_7 = |_ActiveLaneWhenConflict1H_7_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_8 = |_ActiveLaneWhenConflict1H_8_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_9 = |_ActiveLaneWhenConflict1H_9_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_10 = |_ActiveLaneWhenConflict1H_10_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_11 = |_ActiveLaneWhenConflict1H_11_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_12 = |_ActiveLaneWhenConflict1H_12_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_13 = |_ActiveLaneWhenConflict1H_13_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_14 = |_ActiveLaneWhenConflict1H_14_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_15 = |_ActiveLaneWhenConflict1H_15_T_16;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_bankConflict = bankConflict;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :159:47
  assign io_bankConflict_isWrite = isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26
endmodule

