// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AXI4Lite2CTA(	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
  input         clock,	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
                reset,	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
  input  [31:0] io_ctl_aw_awaddr,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_ctl_aw_awvalid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_ctl_aw_awready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input  [11:0] io_ctl_aw_awid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input  [31:0] io_ctl_w_wdata,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_ctl_w_wvalid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_ctl_w_wready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_ctl_b_bvalid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_ctl_b_bready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [11:0] io_ctl_b_bid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input  [31:0] io_ctl_ar_araddr,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_ctl_ar_arvalid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_ctl_ar_arready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input  [11:0] io_ctl_ar_arid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [31:0] io_ctl_r_rdata,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_ctl_r_rvalid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_ctl_r_rready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [11:0] io_ctl_r_rid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_data_ready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_data_valid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [31:0] io_data_bits_host_wg_id,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [3:0]  io_data_bits_host_num_wf,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [4:0]  io_data_bits_host_wf_size,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [31:0] io_data_bits_host_start_pc,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [10:0] io_data_bits_host_kernel_size_3d_0,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_data_bits_host_kernel_size_3d_1,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_data_bits_host_kernel_size_3d_2,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [31:0] io_data_bits_host_csr_knl,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [10:0] io_data_bits_host_vgpr_size_total,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_data_bits_host_sgpr_size_total,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [17:0] io_data_bits_host_lds_size_total,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [10:0] io_data_bits_host_vgpr_size_per_wf,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_data_bits_host_sgpr_size_per_wf,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [16:0] io_data_bits_host_pds_size_per_wf,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output [31:0] io_data_bits_host_pds_baseaddr,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
                io_data_bits_host_gds_baseaddr,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  output        io_rsp_ready,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input         io_rsp_valid,	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
  input  [31:0] io_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id	// ventus/src/axi/AXI4Lite2CTA.scala:21:14
);

  reg  [31:0]       regs_0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_1;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_2;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_3;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_4;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_5;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_6;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_7;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_8;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_9;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_10;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_11;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_12;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_13;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_14;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_15;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_16;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_17;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_18;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  reg  [31:0]       regs_19;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
  wire              io_rsp_ready_0 = io_rsp_valid & ~(regs_17[0]);	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :33:{20,22,31}
  reg  [2:0]        state;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22
  reg               awready;	// ventus/src/axi/AXI4Lite2CTA.scala:42:24
  reg               wready;	// ventus/src/axi/AXI4Lite2CTA.scala:43:23
  reg               bvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:44:23
  reg               arready;	// ventus/src/axi/AXI4Lite2CTA.scala:47:24
  reg               rvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:48:23
  reg  [31:0]       addr;	// ventus/src/axi/AXI4Lite2CTA.scala:51:21
  reg               write;	// ventus/src/axi/AXI4Lite2CTA.scala:54:22
  reg  [31:0]       dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24
  reg  [11:0]       transaction_id;	// ventus/src/axi/AXI4Lite2CTA.scala:57:31
  reg  [31:0]       rdata_reg;	// ventus/src/axi/AXI4Lite2CTA.scala:60:26
  reg               REG;	// ventus/src/axi/AXI4Lite2CTA.scala:63:15
  reg               REG_1;	// ventus/src/axi/AXI4Lite2CTA.scala:63:44
  wire              _GEN = REG | ~REG_1;	// ventus/src/axi/AXI4Lite2CTA.scala:63:{15,33,36,44}
  wire [31:0][31:0] _GEN_0 =
    {{regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_0},
     {regs_19},
     {regs_18},
     {regs_17},
     {regs_16},
     {regs_15},
     {regs_14},
     {regs_13},
     {regs_12},
     {regs_11},
     {regs_10},
     {regs_9},
     {regs_8},
     {regs_7},
     {regs_6},
     {regs_5},
     {regs_4},
     {regs_3},
     {regs_2},
     {regs_1},
     {regs_0}};	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :64:11
  wire [31:0]       _GEN_1 = _GEN_0[addr[4:0]];	// ventus/src/axi/AXI4Lite2CTA.scala:51:21, :64:11
  reg               out_state;	// ventus/src/axi/AXI4Lite2CTA.scala:84:24
  wire              io_data_valid_0 = regs_0[0] & out_state;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :84:24, :85:26, :86:30
  always @(posedge clock) begin	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
    if (reset) begin	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      regs_0 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_1 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_2 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_3 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_4 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_5 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_6 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_7 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_8 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_9 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_10 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_11 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_12 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_13 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_14 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_15 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_16 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_17 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_18 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      regs_19 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      state <= 3'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22
      awready <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :42:24
      wready <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :43:23
      bvalid <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :44:23
      arready <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :47:24
      rvalid <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :48:23
      addr <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:38, :51:21
      write <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :54:22
      dataOut <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:38, :55:24
      transaction_id <= 12'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:57:31
      rdata_reg <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:38, :60:26
      out_state <= 1'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :84:24
    end
    else begin	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      automatic logic            _GEN_2;	// ventus/src/axi/AXI4Lite2CTA.scala:84:24, :107:21, :114:26, :115:19
      automatic logic            _GEN_3;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_4;	// ventus/src/axi/AXI4Lite2CTA.scala:131:29
      automatic logic            _GEN_5;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_6;	// ventus/src/axi/AXI4Lite2CTA.scala:142:30
      automatic logic            _GEN_7;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_8;	// ventus/src/axi/AXI4Lite2CTA.scala:151:28
      automatic logic            _GEN_9;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_10;	// ventus/src/axi/AXI4Lite2CTA.scala:158:30
      automatic logic            _GEN_11;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_12;	// ventus/src/axi/AXI4Lite2CTA.scala:166:28
      automatic logic            _GEN_13;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
      automatic logic            _GEN_14;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
      automatic logic            _GEN_15;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
      automatic logic            _GEN_16;	// ventus/src/axi/AXI4Lite2CTA.scala:177:28
      automatic logic [2:0]      _GEN_17;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :177:38, :178:15
      automatic logic [7:0][2:0] _GEN_18;	// ventus/src/axi/AXI4Lite2CTA.scala:124:16, :131:52, :142:41, :151:38, :158:41, :166:38
      _GEN_2 = out_state & io_data_ready & io_data_valid_0;	// ventus/src/axi/AXI4Lite2CTA.scala:84:24, :86:30, :107:21, :114:26, :115:19
      _GEN_3 = state == 3'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16
      _GEN_4 = io_ctl_aw_awvalid & ~out_state;	// ventus/src/axi/AXI4Lite2CTA.scala:84:24, :107:21, :131:29
      _GEN_5 = state == 3'h1;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :135:15
      _GEN_6 = io_ctl_ar_arvalid & arready;	// ventus/src/axi/AXI4Lite2CTA.scala:47:24, :142:30
      _GEN_7 = state == 3'h2;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :143:15
      _GEN_8 = io_ctl_r_rready & rvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:48:23, :151:28
      _GEN_9 = state == 3'h3;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :132:15
      _GEN_10 = io_ctl_aw_awvalid & awready;	// ventus/src/axi/AXI4Lite2CTA.scala:42:24, :158:30
      _GEN_11 = state == 3'h4;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :160:15
      _GEN_12 = io_ctl_w_wvalid & wready;	// ventus/src/axi/AXI4Lite2CTA.scala:43:23, :166:28
      _GEN_13 = _GEN_5 | _GEN_7 | _GEN_9;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
      _GEN_14 = _GEN_3 | _GEN_13;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
      _GEN_15 = state == 3'h5;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :167:15
      _GEN_16 = io_ctl_b_bready & bvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:44:23, :177:28
      _GEN_17 = _GEN_15 & _GEN_16 ? 3'h0 : state;	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :177:{28,38}, :178:15
      if (write & addr[4:0] == 5'h0)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :51:21, :54:22, :107:21, :120:15, :121:16
        regs_0 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      else if (out_state & _GEN_2)	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :84:24, :107:21, :114:26, :115:19
        regs_0 <= 32'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:30:{21,38}
      if (write & addr[4:0] == 5'h1)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_1 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h2)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_2 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h3)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_3 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h4)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_4 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h5)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_5 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h6)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_6 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h7)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_7 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h8)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_8 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h9)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_9 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hA)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_10 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hB)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_11 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hC)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_12 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hD)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_13 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hE)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_14 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'hF)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_15 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h10)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :33:35, :51:21, :54:22, :120:15, :121:16
        regs_16 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      else if (io_rsp_ready_0)	// ventus/src/axi/AXI4Lite2CTA.scala:33:20
        regs_16 <= io_rsp_bits_inflight_wg_buffer_host_wf_done_wg_id;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21
      if (write & addr[4:0] == 5'h11)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :33:35, :51:21, :54:22, :120:15, :121:16
        regs_17 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      else if (io_rsp_ready_0)	// ventus/src/axi/AXI4Lite2CTA.scala:33:20
        regs_17 <= 32'h1;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :35:13
      if (write & addr[4:0] == 5'h12)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_18 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      if (write & addr[4:0] == 5'h13)	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :51:21, :54:22, :120:15, :121:16
        regs_19 <= dataOut;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :55:24
      _GEN_18 =
        {{_GEN_17},
         {_GEN_17},
         {_GEN_17},
         {_GEN_12 ? 3'h5 : state},
         {_GEN_10 ? 3'h4 : state},
         {_GEN_8 ? 3'h0 : state},
         {_GEN_6 ? 3'h2 : state},
         {_GEN_4 ? 3'h3 : io_ctl_ar_arvalid ? 3'h1 : state}};	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :131:{29,52}, :132:15, :134:36, :135:15, :142:{30,41}, :143:15, :151:{28,38}, :152:15, :158:{30,41}, :160:15, :166:{28,38}, :167:15, :177:38, :178:15
      state <= _GEN_18[state];	// ventus/src/axi/AXI4Lite2CTA.scala:40:22, :124:16, :131:52, :142:41, :151:38, :158:41, :166:38
      if (_GEN_3 | _GEN_5 | _GEN_7 | ~_GEN_9) begin	// ventus/src/axi/AXI4Lite2CTA.scala:42:24, :124:16
      end
      else	// ventus/src/axi/AXI4Lite2CTA.scala:42:24, :124:16
        awready <= ~_GEN_10;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :34:17, :42:24, :157:15, :158:{30,41}, :161:17
      if (~_GEN_14) begin	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
        if (_GEN_11)	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
          wready <= ~_GEN_12;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :34:17, :43:23, :165:14, :166:{28,38}, :170:16
        else	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
          wready <= ~_GEN_15 & wready;	// ventus/src/axi/AXI4Lite2CTA.scala:43:23, :54:22, :124:16, :174:13, :175:14
      end
      bvalid <=
        ~_GEN_3 & (_GEN_5 | _GEN_7 | _GEN_9 | _GEN_11 | ~_GEN_15 ? bvalid : ~_GEN_16);	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :34:17, :44:23, :54:22, :124:16, :126:14, :127:14, :174:13, :176:14, :177:{28,38}, :179:16
      if (_GEN_3 | ~_GEN_5) begin	// ventus/src/axi/AXI4Lite2CTA.scala:47:24, :124:16
      end
      else	// ventus/src/axi/AXI4Lite2CTA.scala:47:24, :124:16
        arready <= ~_GEN_6;	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :34:17, :47:24, :141:15, :142:{30,41}, :146:17
      rvalid <= ~_GEN_3 & (_GEN_5 | ~_GEN_7 ? rvalid : ~_GEN_8);	// ventus/src/axi/AXI4Lite2CTA.scala:32:15, :34:17, :48:23, :124:16, :126:14, :150:14, :151:{28,38}, :153:16
      if (_GEN_3)	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
        transaction_id <=
          _GEN_4 ? io_ctl_aw_awid : io_ctl_ar_arvalid ? io_ctl_ar_arid : 12'h0;	// ventus/src/axi/AXI4Lite2CTA.scala:57:31, :130:22, :131:{29,52}, :133:24, :134:36, :136:24
      else if (_GEN_5) begin	// ventus/src/axi/AXI4Lite2CTA.scala:124:16
        if (_GEN_6)	// ventus/src/axi/AXI4Lite2CTA.scala:142:30
          addr <= {2'h0, io_ctl_ar_araddr[31:2]};	// ventus/src/axi/AXI4Lite2CTA.scala:51:21, :144:{14,33}
      end
      else if (_GEN_7 | ~(_GEN_9 & _GEN_10)) begin	// ventus/src/axi/AXI4Lite2CTA.scala:51:21, :124:16, :158:{30,41}, :159:14
      end
      else	// ventus/src/axi/AXI4Lite2CTA.scala:51:21, :124:16
        addr <= {2'h0, io_ctl_aw_awaddr[31:2]};	// ventus/src/axi/AXI4Lite2CTA.scala:51:21, :144:14, :159:{14,33}
      write <= ~_GEN_3 & (_GEN_13 ? write : _GEN_11 ? _GEN_12 | write : ~_GEN_15 & write);	// ventus/src/axi/AXI4Lite2CTA.scala:54:22, :55:24, :124:16, :126:14, :129:13, :166:{28,38}, :169:15, :174:13
      if (_GEN_14 | ~(_GEN_11 & _GEN_12)) begin	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16, :166:{28,38}, :168:17
      end
      else	// ventus/src/axi/AXI4Lite2CTA.scala:55:24, :124:16
        dataOut <= io_ctl_w_wdata;	// ventus/src/axi/AXI4Lite2CTA.scala:55:24
      if (_GEN)	// ventus/src/axi/AXI4Lite2CTA.scala:63:33
        rdata_reg <= _GEN_1;	// ventus/src/axi/AXI4Lite2CTA.scala:60:26, :64:11
      if (out_state)	// ventus/src/axi/AXI4Lite2CTA.scala:84:24
        out_state <= ~_GEN_2 & out_state;	// ventus/src/axi/AXI4Lite2CTA.scala:84:24, :107:21, :114:26, :115:19
      else	// ventus/src/axi/AXI4Lite2CTA.scala:84:24
        out_state <= regs_0[0] | out_state;	// ventus/src/axi/AXI4Lite2CTA.scala:30:21, :84:24, :85:26, :109:25, :110:19
    end
    REG <= io_ctl_r_rready;	// ventus/src/axi/AXI4Lite2CTA.scala:63:15
    REG_1 <= rvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:48:23, :63:44
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      automatic logic [31:0] _RANDOM[0:23];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
        `INIT_RANDOM_PROLOG_	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
        for (logic [4:0] i = 5'h0; i < 5'h18; i += 5'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
        end	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
        regs_0 = _RANDOM[5'h0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_1 = _RANDOM[5'h1];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_2 = _RANDOM[5'h2];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_3 = _RANDOM[5'h3];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_4 = _RANDOM[5'h4];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_5 = _RANDOM[5'h5];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_6 = _RANDOM[5'h6];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_7 = _RANDOM[5'h7];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_8 = _RANDOM[5'h8];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_9 = _RANDOM[5'h9];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_10 = _RANDOM[5'hA];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_11 = _RANDOM[5'hB];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_12 = _RANDOM[5'hC];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_13 = _RANDOM[5'hD];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_14 = _RANDOM[5'hE];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_15 = _RANDOM[5'hF];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_16 = _RANDOM[5'h10];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_17 = _RANDOM[5'h11];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_18 = _RANDOM[5'h12];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        regs_19 = _RANDOM[5'h13];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
        state = _RANDOM[5'h14][2:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22
        awready = _RANDOM[5'h14][3];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :42:24
        wready = _RANDOM[5'h14][4];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :43:23
        bvalid = _RANDOM[5'h14][5];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :44:23
        arready = _RANDOM[5'h14][6];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :47:24
        rvalid = _RANDOM[5'h14][7];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :48:23
        addr = {_RANDOM[5'h14][31:8], _RANDOM[5'h15][7:0]};	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :40:22, :51:21
        write = _RANDOM[5'h15][9];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :51:21, :54:22
        dataOut = {_RANDOM[5'h15][31:10], _RANDOM[5'h16][9:0]};	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :51:21, :55:24
        transaction_id = _RANDOM[5'h16][21:10];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :55:24, :57:31
        rdata_reg = {_RANDOM[5'h16][31:22], _RANDOM[5'h17][21:0]};	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :55:24, :60:26
        REG = _RANDOM[5'h17][22];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :60:26, :63:15
        REG_1 = _RANDOM[5'h17][23];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :60:26, :63:44
        out_state = _RANDOM[5'h17][24];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :60:26, :84:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/axi/AXI4Lite2CTA.scala:20:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_ctl_aw_awready = awready;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :42:24
  assign io_ctl_w_wready = wready;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :43:23
  assign io_ctl_b_bvalid = bvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :44:23
  assign io_ctl_b_bid = transaction_id;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :57:31
  assign io_ctl_ar_arready = arready;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :47:24
  assign io_ctl_r_rdata = _GEN ? _GEN_1 : rdata_reg;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :60:26, :62:9, :63:{33,53}, :64:11
  assign io_ctl_r_rvalid = rvalid;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :48:23
  assign io_ctl_r_rid = transaction_id;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :57:31
  assign io_data_valid = io_data_valid_0;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :86:30
  assign io_data_bits_host_wg_id = regs_1;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
  assign io_data_bits_host_num_wf = regs_2[3:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :88:27
  assign io_data_bits_host_wf_size = regs_3[4:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :89:28
  assign io_data_bits_host_start_pc = regs_4;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
  assign io_data_bits_host_kernel_size_3d_0 = regs_13[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :100:38
  assign io_data_bits_host_kernel_size_3d_1 = regs_14[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :101:38
  assign io_data_bits_host_kernel_size_3d_2 = regs_15[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :102:38
  assign io_data_bits_host_csr_knl = regs_12;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
  assign io_data_bits_host_vgpr_size_total = regs_5[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :91:36
  assign io_data_bits_host_sgpr_size_total = regs_6[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :92:36
  assign io_data_bits_host_lds_size_total = regs_7[17:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :93:35
  assign io_data_bits_host_vgpr_size_per_wf = regs_8[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :95:37
  assign io_data_bits_host_sgpr_size_per_wf = regs_9[10:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :96:37
  assign io_data_bits_host_pds_size_per_wf = regs_18[16:0];	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21, :103:37
  assign io_data_bits_host_pds_baseaddr = regs_11;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
  assign io_data_bits_host_gds_baseaddr = regs_10;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :30:21
  assign io_rsp_ready = io_rsp_ready_0;	// ventus/src/axi/AXI4Lite2CTA.scala:20:7, :33:20
endmodule

