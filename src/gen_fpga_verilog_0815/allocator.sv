// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module allocator(	// ventus/src/cta/allocator.scala:102:7
  input         clock,	// ventus/src/cta/allocator.scala:102:7
                reset,	// ventus/src/cta/allocator.scala:102:7
  output        io_wgbuffer_wg_new_ready,	// ventus/src/cta/allocator.scala:108:14
  input         io_wgbuffer_wg_new_valid,	// ventus/src/cta/allocator.scala:108:14
  input  [2:0]  io_wgbuffer_wg_new_bits_num_wf,	// ventus/src/cta/allocator.scala:108:14
  input  [10:0] io_wgbuffer_wg_new_bits_num_sgpr,	// ventus/src/cta/allocator.scala:108:14
                io_wgbuffer_wg_new_bits_num_vgpr,	// ventus/src/cta/allocator.scala:108:14
  input  [17:0] io_wgbuffer_wg_new_bits_num_lds,	// ventus/src/cta/allocator.scala:108:14
  input  [31:0] io_wgbuffer_wg_new_bits_wg_id,	// ventus/src/cta/allocator.scala:108:14
  input  [2:0]  io_wgbuffer_wg_new_bits_wgram_addr,	// ventus/src/cta/allocator.scala:108:14
  input         io_wgbuffer_result_ready,	// ventus/src/cta/allocator.scala:108:14
  output        io_wgbuffer_result_valid,	// ventus/src/cta/allocator.scala:108:14
                io_wgbuffer_result_bits_accept,	// ventus/src/cta/allocator.scala:108:14
  output [2:0]  io_wgbuffer_result_bits_wgram_addr,	// ventus/src/cta/allocator.scala:108:14
  output [31:0] io_wgbuffer_result_bits_wg_id,	// ventus/src/cta/allocator.scala:108:14
  input         io_cuinterface_wg_new_ready,	// ventus/src/cta/allocator.scala:108:14
  output        io_cuinterface_wg_new_valid,	// ventus/src/cta/allocator.scala:108:14
  output [2:0]  io_cuinterface_wg_new_bits_wg_slot_id,	// ventus/src/cta/allocator.scala:108:14
                io_cuinterface_wg_new_bits_num_wf,	// ventus/src/cta/allocator.scala:108:14
  output        io_cuinterface_wg_new_bits_lds_dealloc_en,	// ventus/src/cta/allocator.scala:108:14
                io_cuinterface_wg_new_bits_sgpr_dealloc_en,	// ventus/src/cta/allocator.scala:108:14
                io_cuinterface_wg_new_bits_vgpr_dealloc_en,	// ventus/src/cta/allocator.scala:108:14
  output [31:0] io_cuinterface_wg_new_bits_wg_id,	// ventus/src/cta/allocator.scala:108:14
  input         io_rt_alloc_ready,	// ventus/src/cta/allocator.scala:108:14
  output        io_rt_alloc_valid,	// ventus/src/cta/allocator.scala:108:14
  output [2:0]  io_rt_alloc_bits_wg_slot_id,	// ventus/src/cta/allocator.scala:108:14
  output [17:0] io_rt_alloc_bits_num_lds,	// ventus/src/cta/allocator.scala:108:14
  output [10:0] io_rt_alloc_bits_num_sgpr,	// ventus/src/cta/allocator.scala:108:14
                io_rt_alloc_bits_num_vgpr,	// ventus/src/cta/allocator.scala:108:14
  output [31:0] io_rt_alloc_bits_wg_id,	// ventus/src/cta/allocator.scala:108:14
  input         io_rt_dealloc_valid,	// ventus/src/cta/allocator.scala:108:14
  input  [2:0]  io_rt_dealloc_bits_wg_slot_id,	// ventus/src/cta/allocator.scala:108:14
                io_rt_dealloc_bits_num_wf,	// ventus/src/cta/allocator.scala:108:14
  output        io_rt_result_lds_ready,	// ventus/src/cta/allocator.scala:108:14
  input         io_rt_result_lds_valid,	// ventus/src/cta/allocator.scala:108:14
  input  [17:0] io_rt_result_lds_bits_size_0,	// ventus/src/cta/allocator.scala:108:14
                io_rt_result_lds_bits_size_1,	// ventus/src/cta/allocator.scala:108:14
  output        io_rt_result_sgpr_ready,	// ventus/src/cta/allocator.scala:108:14
  input         io_rt_result_sgpr_valid,	// ventus/src/cta/allocator.scala:108:14
  input  [10:0] io_rt_result_sgpr_bits_size_0,	// ventus/src/cta/allocator.scala:108:14
                io_rt_result_sgpr_bits_size_1,	// ventus/src/cta/allocator.scala:108:14
  output        io_rt_result_vgpr_ready,	// ventus/src/cta/allocator.scala:108:14
  input         io_rt_result_vgpr_valid,	// ventus/src/cta/allocator.scala:108:14
  input  [10:0] io_rt_result_vgpr_bits_size_0,	// ventus/src/cta/allocator.scala:108:14
                io_rt_result_vgpr_bits_size_1	// ventus/src/cta/allocator.scala:108:14
);

  wire        _cuinterface_buf_io_enq_ready;	// ventus/src/cta/allocator.scala:329:31
  wire        _writer_vgpr_io_rt_result_ready;	// ventus/src/cta/allocator.scala:149:27
  wire        _writer_vgpr_io_rtcache_wr_en;	// ventus/src/cta/allocator.scala:149:27
  wire [10:0] _writer_vgpr_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:149:27
  wire [10:0] _writer_vgpr_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:149:27
  wire        _writer_sgpr_io_rt_result_ready;	// ventus/src/cta/allocator.scala:148:27
  wire        _writer_sgpr_io_rtcache_wr_en;	// ventus/src/cta/allocator.scala:148:27
  wire [10:0] _writer_sgpr_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:148:27
  wire [10:0] _writer_sgpr_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:148:27
  wire        _writer_lds_io_rt_result_ready;	// ventus/src/cta/allocator.scala:147:26
  wire        _writer_lds_io_rtcache_wr_en;	// ventus/src/cta/allocator.scala:147:26
  wire [17:0] _writer_lds_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:147:26
  wire [17:0] _writer_lds_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:147:26
  reg  [17:0] rtcache_lds_0_size_0;	// ventus/src/cta/allocator.scala:131:28
  reg  [17:0] rtcache_lds_0_size_1;	// ventus/src/cta/allocator.scala:131:28
  reg  [10:0] rtcache_sgpr_0_size_0;	// ventus/src/cta/allocator.scala:136:29
  reg  [10:0] rtcache_sgpr_0_size_1;	// ventus/src/cta/allocator.scala:136:29
  reg  [10:0] rtcache_vgpr_0_size_0;	// ventus/src/cta/allocator.scala:141:29
  reg  [10:0] rtcache_vgpr_0_size_1;	// ventus/src/cta/allocator.scala:141:29
  reg  [7:0]  wgslot_0;	// ventus/src/cta/allocator.scala:162:23
  reg  [2:0]  wfslot_0;	// ventus/src/cta/allocator.scala:163:23
  reg  [2:0]  wgslot_id;	// ventus/src/cta/allocator.scala:165:22
  reg  [7:0]  wgslot_id_1H;	// ventus/src/cta/allocator.scala:166:25
  reg  [2:0]  fsm;	// ventus/src/cta/allocator.scala:176:20
  reg  [2:0]  fsm_r1;	// ventus/src/cta/allocator.scala:177:23
  reg  [2:0]  wg_num_wf;	// ventus/src/cta/allocator.scala:187:21
  reg  [10:0] wg_num_sgpr;	// ventus/src/cta/allocator.scala:187:21
  reg  [10:0] wg_num_vgpr;	// ventus/src/cta/allocator.scala:187:21
  reg  [17:0] wg_num_lds;	// ventus/src/cta/allocator.scala:187:21
  reg  [31:0] wg_wg_id;	// ventus/src/cta/allocator.scala:187:21
  reg  [2:0]  wg_wgram_addr;	// ventus/src/cta/allocator.scala:187:21
  reg         cu_cnt;	// ventus/src/cta/allocator.scala:191:23
  reg         rtcache_lds_sel;	// ventus/src/cta/allocator.scala:278:35
  reg         rtcache_sgpr_sel;	// ventus/src/cta/allocator.scala:279:35
  reg         rtcache_vgpr_sel;	// ventus/src/cta/allocator.scala:280:35
  wire        io_wgbuffer_result_bits_accept_0 = fsm == 3'h3;	// ventus/src/cta/allocator.scala:102:7, :176:20, :289:32
  reg         alloc_task_rt_reg;	// ventus/src/cta/allocator.scala:316:34
  wire        io_rt_alloc_valid_0 = io_wgbuffer_result_bits_accept_0 & ~alloc_task_rt_reg;	// ventus/src/cta/allocator.scala:289:32, :316:34, :317:{44,47}
  wire        _alloc_task_rt_T = io_rt_alloc_ready & io_rt_alloc_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:317:44
  reg         alloc_task_cuinterface_reg;	// ventus/src/cta/allocator.scala:328:43
  wire        _cuinterface_buf_io_enq_valid_T_2 =
    io_wgbuffer_result_bits_accept_0 & ~alloc_task_cuinterface_reg;	// ventus/src/cta/allocator.scala:289:32, :328:43, :330:{55,58}
  wire        _alloc_task_cuinterface_T =
    _cuinterface_buf_io_enq_ready & _cuinterface_buf_io_enq_valid_T_2;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:329:31, :330:55
  reg         alloc_task_wgram2_reg;	// ventus/src/cta/allocator.scala:344:38
  wire        io_wgbuffer_result_valid_0 =
    (io_wgbuffer_result_bits_accept_0 | fsm == 3'h4) & ~alloc_task_wgram2_reg;	// ventus/src/cta/allocator.scala:102:7, :176:20, :289:32, :344:38, :345:{50,57,73,76}
  wire        _fsm_next_T_9 = io_wgbuffer_result_ready & io_wgbuffer_result_valid_0;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:345:73
  always @(posedge clock) begin	// ventus/src/cta/allocator.scala:102:7
    automatic logic _fsm_next_T;	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    automatic logic result_line_lds_1;	// ventus/src/cta/allocator.scala:251:57
    automatic logic result_line_sgpr_1;	// ventus/src/cta/allocator.scala:252:57
    automatic logic result_line_vgpr_1;	// ventus/src/cta/allocator.scala:253:57
    _fsm_next_T = ~(|fsm) & io_wgbuffer_wg_new_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:176:20, :188:44
    result_line_lds_1 = rtcache_lds_0_size_1 >= wg_num_lds;	// ventus/src/cta/allocator.scala:131:28, :187:21, :251:57
    result_line_sgpr_1 = rtcache_sgpr_0_size_1 >= wg_num_sgpr;	// ventus/src/cta/allocator.scala:136:29, :187:21, :252:57
    result_line_vgpr_1 = rtcache_vgpr_0_size_1 >= wg_num_vgpr;	// ventus/src/cta/allocator.scala:141:29, :187:21, :253:57
    if (reset) begin	// ventus/src/cta/allocator.scala:102:7
      rtcache_lds_0_size_0 <= 18'h20000;	// ventus/src/cta/allocator.scala:131:28, :132:25
      rtcache_lds_0_size_1 <= 18'h0;	// ventus/src/cta/allocator.scala:131:28, :132:25
      rtcache_sgpr_0_size_0 <= 11'h400;	// ventus/src/cta/allocator.scala:136:29, :137:25
      rtcache_sgpr_0_size_1 <= 11'h0;	// ventus/src/cta/allocator.scala:136:29, :137:25
      rtcache_vgpr_0_size_0 <= 11'h400;	// ventus/src/cta/allocator.scala:137:25, :141:29
      rtcache_vgpr_0_size_1 <= 11'h0;	// ventus/src/cta/allocator.scala:137:25, :141:29
      wgslot_0 <= 8'h0;	// ventus/src/cta/allocator.scala:162:{23,44}
      wfslot_0 <= 3'h0;	// ventus/src/cta/allocator.scala:102:7, :163:23
      fsm <= 3'h0;	// ventus/src/cta/allocator.scala:102:7, :176:20
      fsm_r1 <= 3'h0;	// ventus/src/cta/allocator.scala:102:7, :177:23
      cu_cnt <= 1'h0;	// ventus/src/cta/allocator.scala:150:85, :191:23
      alloc_task_rt_reg <= 1'h0;	// ventus/src/cta/allocator.scala:150:85, :316:34
      alloc_task_cuinterface_reg <= 1'h0;	// ventus/src/cta/allocator.scala:150:85, :328:43
      alloc_task_wgram2_reg <= 1'h0;	// ventus/src/cta/allocator.scala:150:85, :344:38
    end
    else begin	// ventus/src/cta/allocator.scala:102:7
      automatic logic _GEN;	// ventus/src/cta/allocator.scala:192:15
      automatic logic _GEN_0;	// ventus/src/cta/allocator.scala:192:15
      automatic logic alloc_task_ok;	// ventus/src/cta/allocator.scala:286:58
      automatic logic _cu_tmp_T_1;	// ventus/src/cta/allocator.scala:289:53
      _GEN = fsm == 3'h1;	// ventus/src/cta/allocator.scala:102:7, :176:20, :192:15
      _GEN_0 = fsm == 3'h2;	// ventus/src/cta/allocator.scala:102:7, :176:20, :192:15
      alloc_task_ok =
        (alloc_task_rt_reg | _alloc_task_rt_T) & (alloc_task_wgram2_reg | _fsm_next_T_9)
        & (alloc_task_cuinterface_reg | _alloc_task_cuinterface_T);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:286:58, :316:34, :325:38, :328:43, :339:56, :344:38, :353:46
      _cu_tmp_T_1 = fsm != fsm_r1;	// ventus/src/cta/allocator.scala:176:20, :177:23, :289:53
      if (_writer_lds_io_rtcache_wr_en) begin	// ventus/src/cta/allocator.scala:147:26
        rtcache_lds_0_size_0 <= _writer_lds_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:131:28, :147:26
        rtcache_lds_0_size_1 <= _writer_lds_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:131:28, :147:26
      end
      if (_writer_sgpr_io_rtcache_wr_en) begin	// ventus/src/cta/allocator.scala:148:27
        rtcache_sgpr_0_size_0 <= _writer_sgpr_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:136:29, :148:27
        rtcache_sgpr_0_size_1 <= _writer_sgpr_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:136:29, :148:27
      end
      if (_writer_vgpr_io_rtcache_wr_en) begin	// ventus/src/cta/allocator.scala:149:27
        rtcache_vgpr_0_size_0 <= _writer_vgpr_io_rtcache_wr_data_size_0;	// ventus/src/cta/allocator.scala:141:29, :149:27
        rtcache_vgpr_0_size_1 <= _writer_vgpr_io_rtcache_wr_data_size_1;	// ventus/src/cta/allocator.scala:141:29, :149:27
      end
      wgslot_0 <=
        wgslot_0 & ~(io_rt_dealloc_valid ? 8'h1 << io_rt_dealloc_bits_wg_slot_id : 8'h0)
        | (io_wgbuffer_result_bits_accept_0 & _cu_tmp_T_1 ? wgslot_id_1H : 8'h0);	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/cta/allocator.scala:162:{23,44}, :166:25, :289:{32,53}, :290:{33,52}, :291:35, :295:{36,39,71}
      wfslot_0 <=
        wfslot_0 + (io_wgbuffer_result_bits_accept_0 & _cu_tmp_T_1 ? wg_num_wf : 3'h0)
        - (io_rt_dealloc_valid ? io_rt_dealloc_bits_num_wf : 3'h0);	// ventus/src/cta/allocator.scala:102:7, :163:23, :187:21, :289:{32,53}, :292:{29,48}, :293:31, :296:{36,55}
      if (|fsm) begin	// ventus/src/cta/allocator.scala:176:20, :188:44
        if (_GEN)	// ventus/src/cta/allocator.scala:192:15
          fsm <= 3'h2;	// ventus/src/cta/allocator.scala:102:7, :176:20
        else if (_GEN_0) begin	// ventus/src/cta/allocator.scala:192:15
          if (~(_writer_lds_io_rt_result_ready & io_rt_result_lds_valid
                | _writer_sgpr_io_rt_result_ready & io_rt_result_sgpr_valid
                | _writer_vgpr_io_rt_result_ready & io_rt_result_vgpr_valid)) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:147:26, :148:27, :149:27, :218:102
            if ((|{result_line_lds_1, rtcache_lds_0_size_0 >= wg_num_lds})
                & (|{result_line_sgpr_1, rtcache_sgpr_0_size_0 >= wg_num_sgpr})
                & (|{result_line_vgpr_1, rtcache_vgpr_0_size_0 >= wg_num_vgpr})
                & wgslot_0 != 8'hFF & 3'h4 - wfslot_0 >= wg_num_wf)	// ventus/src/cta/allocator.scala:102:7, :131:28, :136:29, :141:29, :162:23, :163:23, :187:21, :251:57, :252:57, :253:57, :261:{49,56,80,87,111,118}, :262:{47,53,82,97}
              fsm <= 3'h3;	// ventus/src/cta/allocator.scala:102:7, :176:20
            else if (cu_cnt - 1'h1)	// ventus/src/cta/allocator.scala:191:23, :372:17
              fsm <= 3'h4;	// ventus/src/cta/allocator.scala:102:7, :176:20
          end
        end
        else if (fsm == 3'h4 ? _fsm_next_T_9 : fsm != 3'h3 | alloc_task_ok)	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:102:7, :176:20, :286:58, :360:12, :361:15, :376:{16,22}, :379:16
          fsm <= 3'h0;	// ventus/src/cta/allocator.scala:102:7, :176:20
      end
      else if (_fsm_next_T)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        fsm <= 3'h1;	// ventus/src/cta/allocator.scala:102:7, :176:20
      fsm_r1 <= fsm;	// ventus/src/cta/allocator.scala:176:20, :177:23
      cu_cnt <= ~_GEN & (_GEN_0 ? cu_cnt - 1'h1 : cu_cnt);	// ventus/src/cta/allocator.scala:191:23, :192:15, :195:14, :199:{14,24}
      alloc_task_rt_reg <=
        io_wgbuffer_result_bits_accept_0
        & (alloc_task_rt_reg | _alloc_task_rt_T & ~alloc_task_ok);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:286:58, :289:32, :316:34, :324:{27,65,86,89}
      alloc_task_cuinterface_reg <=
        io_wgbuffer_result_bits_accept_0
        & (alloc_task_cuinterface_reg | _alloc_task_cuinterface_T & ~alloc_task_ok);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:286:58, :289:32, :324:89, :328:43, :338:{36,83,115}
      if (fsm == 3'h4)	// ventus/src/cta/allocator.scala:102:7, :176:20, :349:58
        alloc_task_wgram2_reg <= alloc_task_wgram2_reg | _fsm_next_T_9 & ~alloc_task_ok;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:286:58, :324:89, :344:38, :351:{49,77}
      else	// ventus/src/cta/allocator.scala:349:58
        alloc_task_wgram2_reg <=
          fsm == 3'h3 & (alloc_task_wgram2_reg | _fsm_next_T_9 & ~alloc_task_ok);	// src/main/scala/chisel3/util/Decoupled.scala:51:35, ventus/src/cta/allocator.scala:102:7, :176:20, :286:58, :324:89, :344:38, :349:58, :350:{49,77}
    end
    if (fsm == 3'h2) begin	// ventus/src/cta/allocator.scala:102:7, :176:20, :269:12
      automatic logic [7:0] _wgslot_id_1H_T;	// ventus/src/cta/allocator.scala:270:34
      _wgslot_id_1H_T = ~wgslot_0;	// ventus/src/cta/allocator.scala:162:23, :270:34
      wgslot_id <=
        _wgslot_id_1H_T[0]
          ? 3'h0
          : _wgslot_id_1H_T[1]
              ? 3'h1
              : _wgslot_id_1H_T[2]
                  ? 3'h2
                  : _wgslot_id_1H_T[3]
                      ? 3'h3
                      : _wgslot_id_1H_T[4]
                          ? 3'h4
                          : _wgslot_id_1H_T[5] ? 3'h5 : {2'h3, ~(_wgslot_id_1H_T[6])};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:48:45, ventus/src/cta/allocator.scala:102:7, :165:22, :270:34
      wgslot_id_1H <=
        _wgslot_id_1H_T[0]
          ? 8'h1
          : _wgslot_id_1H_T[1]
              ? 8'h2
              : _wgslot_id_1H_T[2]
                  ? 8'h4
                  : _wgslot_id_1H_T[3]
                      ? 8'h8
                      : _wgslot_id_1H_T[4]
                          ? 8'h10
                          : _wgslot_id_1H_T[5]
                              ? 8'h20
                              : _wgslot_id_1H_T[6] ? 8'h40 : {_wgslot_id_1H_T[7], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:85:71, ventus/src/cta/allocator.scala:166:25, :270:34
      rtcache_lds_sel <= result_line_lds_1;	// ventus/src/cta/allocator.scala:251:57, :278:35
      rtcache_sgpr_sel <= result_line_sgpr_1;	// ventus/src/cta/allocator.scala:252:57, :279:35
      rtcache_vgpr_sel <= result_line_vgpr_1;	// ventus/src/cta/allocator.scala:253:57, :280:35
    end
    if (_fsm_next_T) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35
      wg_num_wf <= io_wgbuffer_wg_new_bits_num_wf;	// ventus/src/cta/allocator.scala:187:21
      wg_num_sgpr <= io_wgbuffer_wg_new_bits_num_sgpr;	// ventus/src/cta/allocator.scala:187:21
      wg_num_vgpr <= io_wgbuffer_wg_new_bits_num_vgpr;	// ventus/src/cta/allocator.scala:187:21
      wg_num_lds <= io_wgbuffer_wg_new_bits_num_lds;	// ventus/src/cta/allocator.scala:187:21
      wg_wg_id <= io_wgbuffer_wg_new_bits_wg_id;	// ventus/src/cta/allocator.scala:187:21
      wg_wgram_addr <= io_wgbuffer_wg_new_bits_wgram_addr;	// ventus/src/cta/allocator.scala:187:21
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/cta/allocator.scala:102:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/cta/allocator.scala:102:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/cta/allocator.scala:102:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/cta/allocator.scala:102:7
      automatic logic [31:0] _RANDOM[0:6];	// ventus/src/cta/allocator.scala:102:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/cta/allocator.scala:102:7
        `INIT_RANDOM_PROLOG_	// ventus/src/cta/allocator.scala:102:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/cta/allocator.scala:102:7
        for (logic [2:0] i = 3'h0; i < 3'h7; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/cta/allocator.scala:102:7
        end	// ventus/src/cta/allocator.scala:102:7
        rtcache_lds_0_size_0 = _RANDOM[3'h0][17:0];	// ventus/src/cta/allocator.scala:102:7, :131:28
        rtcache_lds_0_size_1 = {_RANDOM[3'h0][31:18], _RANDOM[3'h1][3:0]};	// ventus/src/cta/allocator.scala:102:7, :131:28
        rtcache_sgpr_0_size_0 = _RANDOM[3'h1][14:4];	// ventus/src/cta/allocator.scala:102:7, :131:28, :136:29
        rtcache_sgpr_0_size_1 = _RANDOM[3'h1][25:15];	// ventus/src/cta/allocator.scala:102:7, :131:28, :136:29
        rtcache_vgpr_0_size_0 = {_RANDOM[3'h1][31:26], _RANDOM[3'h2][4:0]};	// ventus/src/cta/allocator.scala:102:7, :131:28, :141:29
        rtcache_vgpr_0_size_1 = _RANDOM[3'h2][15:5];	// ventus/src/cta/allocator.scala:102:7, :141:29
        wgslot_0 = _RANDOM[3'h2][23:16];	// ventus/src/cta/allocator.scala:102:7, :141:29, :162:23
        wfslot_0 = _RANDOM[3'h2][26:24];	// ventus/src/cta/allocator.scala:102:7, :141:29, :163:23
        wgslot_id = _RANDOM[3'h2][29:27];	// ventus/src/cta/allocator.scala:102:7, :141:29, :165:22
        wgslot_id_1H = {_RANDOM[3'h2][31:30], _RANDOM[3'h3][5:0]};	// ventus/src/cta/allocator.scala:102:7, :141:29, :166:25
        fsm = _RANDOM[3'h3][8:6];	// ventus/src/cta/allocator.scala:102:7, :166:25, :176:20
        fsm_r1 = _RANDOM[3'h3][11:9];	// ventus/src/cta/allocator.scala:102:7, :166:25, :177:23
        wg_num_wf = _RANDOM[3'h3][14:12];	// ventus/src/cta/allocator.scala:102:7, :166:25, :187:21
        wg_num_sgpr = _RANDOM[3'h3][25:15];	// ventus/src/cta/allocator.scala:102:7, :166:25, :187:21
        wg_num_vgpr = {_RANDOM[3'h3][31:26], _RANDOM[3'h4][4:0]};	// ventus/src/cta/allocator.scala:102:7, :166:25, :187:21
        wg_num_lds = _RANDOM[3'h4][22:5];	// ventus/src/cta/allocator.scala:102:7, :187:21
        wg_wg_id = {_RANDOM[3'h4][31:23], _RANDOM[3'h5][22:0]};	// ventus/src/cta/allocator.scala:102:7, :187:21
        wg_wgram_addr = _RANDOM[3'h5][25:23];	// ventus/src/cta/allocator.scala:102:7, :187:21
        cu_cnt = _RANDOM[3'h5][26];	// ventus/src/cta/allocator.scala:102:7, :187:21, :191:23
        rtcache_lds_sel = _RANDOM[3'h5][27];	// ventus/src/cta/allocator.scala:102:7, :187:21, :278:35
        rtcache_sgpr_sel = _RANDOM[3'h5][28];	// ventus/src/cta/allocator.scala:102:7, :187:21, :279:35
        rtcache_vgpr_sel = _RANDOM[3'h5][29];	// ventus/src/cta/allocator.scala:102:7, :187:21, :280:35
        alloc_task_rt_reg = _RANDOM[3'h5][30];	// ventus/src/cta/allocator.scala:102:7, :187:21, :316:34
        alloc_task_cuinterface_reg = _RANDOM[3'h5][31];	// ventus/src/cta/allocator.scala:102:7, :187:21, :328:43
        alloc_task_wgram2_reg = _RANDOM[3'h6][0];	// ventus/src/cta/allocator.scala:102:7, :344:38
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/cta/allocator.scala:102:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/cta/allocator.scala:102:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  rtcache_writer writer_lds (	// ventus/src/cta/allocator.scala:147:26
    .clock                     (clock),
    .reset                     (reset),
    .io_rt_result_ready        (_writer_lds_io_rt_result_ready),
    .io_rt_result_valid        (io_rt_result_lds_valid),
    .io_rt_result_bits_size_0  (io_rt_result_lds_bits_size_0),
    .io_rt_result_bits_size_1  (io_rt_result_lds_bits_size_1),
    .io_alloc_en               (io_wgbuffer_result_bits_accept_0),	// ventus/src/cta/allocator.scala:289:32
    .io_alloc_sel              (rtcache_lds_sel),	// ventus/src/cta/allocator.scala:278:35
    .io_alloc_size             (wg_num_lds),	// ventus/src/cta/allocator.scala:187:21
    .io_alloc_rawdata_size_0   (rtcache_lds_0_size_0),	// ventus/src/cta/allocator.scala:131:28
    .io_alloc_rawdata_size_1   (rtcache_lds_0_size_1),	// ventus/src/cta/allocator.scala:131:28
    .io_rtcache_wr_en          (_writer_lds_io_rtcache_wr_en),
    .io_rtcache_wr_data_size_0 (_writer_lds_io_rtcache_wr_data_size_0),
    .io_rtcache_wr_data_size_1 (_writer_lds_io_rtcache_wr_data_size_1)
  );
  rtcache_writer_1 writer_sgpr (	// ventus/src/cta/allocator.scala:148:27
    .clock                     (clock),
    .reset                     (reset),
    .io_rt_result_ready        (_writer_sgpr_io_rt_result_ready),
    .io_rt_result_valid        (io_rt_result_sgpr_valid),
    .io_rt_result_bits_size_0  (io_rt_result_sgpr_bits_size_0),
    .io_rt_result_bits_size_1  (io_rt_result_sgpr_bits_size_1),
    .io_alloc_en               (io_wgbuffer_result_bits_accept_0),	// ventus/src/cta/allocator.scala:289:32
    .io_alloc_sel              (rtcache_sgpr_sel),	// ventus/src/cta/allocator.scala:279:35
    .io_alloc_size             (wg_num_sgpr),	// ventus/src/cta/allocator.scala:187:21
    .io_alloc_rawdata_size_0   (rtcache_sgpr_0_size_0),	// ventus/src/cta/allocator.scala:136:29
    .io_alloc_rawdata_size_1   (rtcache_sgpr_0_size_1),	// ventus/src/cta/allocator.scala:136:29
    .io_rtcache_wr_en          (_writer_sgpr_io_rtcache_wr_en),
    .io_rtcache_wr_data_size_0 (_writer_sgpr_io_rtcache_wr_data_size_0),
    .io_rtcache_wr_data_size_1 (_writer_sgpr_io_rtcache_wr_data_size_1)
  );
  rtcache_writer_1 writer_vgpr (	// ventus/src/cta/allocator.scala:149:27
    .clock                     (clock),
    .reset                     (reset),
    .io_rt_result_ready        (_writer_vgpr_io_rt_result_ready),
    .io_rt_result_valid        (io_rt_result_vgpr_valid),
    .io_rt_result_bits_size_0  (io_rt_result_vgpr_bits_size_0),
    .io_rt_result_bits_size_1  (io_rt_result_vgpr_bits_size_1),
    .io_alloc_en               (io_wgbuffer_result_bits_accept_0),	// ventus/src/cta/allocator.scala:289:32
    .io_alloc_sel              (rtcache_vgpr_sel),	// ventus/src/cta/allocator.scala:280:35
    .io_alloc_size             (wg_num_vgpr),	// ventus/src/cta/allocator.scala:187:21
    .io_alloc_rawdata_size_0   (rtcache_vgpr_0_size_0),	// ventus/src/cta/allocator.scala:141:29
    .io_alloc_rawdata_size_1   (rtcache_vgpr_0_size_1),	// ventus/src/cta/allocator.scala:141:29
    .io_rtcache_wr_en          (_writer_vgpr_io_rtcache_wr_en),
    .io_rtcache_wr_data_size_0 (_writer_vgpr_io_rtcache_wr_data_size_0),
    .io_rtcache_wr_data_size_1 (_writer_vgpr_io_rtcache_wr_data_size_1)
  );
  Queue1_io_alloc2cuinterface cuinterface_buf (	// ventus/src/cta/allocator.scala:329:31
    .clock                       (clock),
    .reset                       (reset),
    .io_enq_ready                (_cuinterface_buf_io_enq_ready),
    .io_enq_valid                (_cuinterface_buf_io_enq_valid_T_2),	// ventus/src/cta/allocator.scala:330:55
    .io_enq_bits_wg_slot_id      (wgslot_id),	// ventus/src/cta/allocator.scala:165:22
    .io_enq_bits_num_wf          (wg_num_wf),	// ventus/src/cta/allocator.scala:187:21
    .io_enq_bits_lds_dealloc_en  (|wg_num_lds),	// ventus/src/cta/allocator.scala:187:21, :334:61
    .io_enq_bits_sgpr_dealloc_en (|wg_num_sgpr),	// ventus/src/cta/allocator.scala:187:21, :335:63
    .io_enq_bits_vgpr_dealloc_en (|wg_num_vgpr),	// ventus/src/cta/allocator.scala:187:21, :336:63
    .io_enq_bits_wg_id           (wg_wg_id),	// ventus/src/cta/allocator.scala:187:21
    .io_deq_ready                (io_cuinterface_wg_new_ready),
    .io_deq_valid                (io_cuinterface_wg_new_valid),
    .io_deq_bits_wg_slot_id      (io_cuinterface_wg_new_bits_wg_slot_id),
    .io_deq_bits_num_wf          (io_cuinterface_wg_new_bits_num_wf),
    .io_deq_bits_lds_dealloc_en  (io_cuinterface_wg_new_bits_lds_dealloc_en),
    .io_deq_bits_sgpr_dealloc_en (io_cuinterface_wg_new_bits_sgpr_dealloc_en),
    .io_deq_bits_vgpr_dealloc_en (io_cuinterface_wg_new_bits_vgpr_dealloc_en),
    .io_deq_bits_wg_id           (io_cuinterface_wg_new_bits_wg_id)
  );
  assign io_wgbuffer_wg_new_ready = ~(|fsm);	// ventus/src/cta/allocator.scala:102:7, :176:20, :188:44
  assign io_wgbuffer_result_valid = io_wgbuffer_result_valid_0;	// ventus/src/cta/allocator.scala:102:7, :345:73
  assign io_wgbuffer_result_bits_accept = io_wgbuffer_result_bits_accept_0;	// ventus/src/cta/allocator.scala:102:7, :289:32
  assign io_wgbuffer_result_bits_wgram_addr = wg_wgram_addr;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_wgbuffer_result_bits_wg_id = wg_wg_id;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_rt_alloc_valid = io_rt_alloc_valid_0;	// ventus/src/cta/allocator.scala:102:7, :317:44
  assign io_rt_alloc_bits_wg_slot_id = wgslot_id;	// ventus/src/cta/allocator.scala:102:7, :165:22
  assign io_rt_alloc_bits_num_lds = wg_num_lds;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_rt_alloc_bits_num_sgpr = wg_num_sgpr;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_rt_alloc_bits_num_vgpr = wg_num_vgpr;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_rt_alloc_bits_wg_id = wg_wg_id;	// ventus/src/cta/allocator.scala:102:7, :187:21
  assign io_rt_result_lds_ready = _writer_lds_io_rt_result_ready;	// ventus/src/cta/allocator.scala:102:7, :147:26
  assign io_rt_result_sgpr_ready = _writer_sgpr_io_rt_result_ready;	// ventus/src/cta/allocator.scala:102:7, :148:27
  assign io_rt_result_vgpr_ready = _writer_vgpr_io_rt_result_ready;	// ventus/src/cta/allocator.scala:102:7, :149:27
endmodule

