// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module BankConflictArbiter(	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
  input        clock,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
               reset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
               io_coreReqArb_isWrite,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_coreReqArb_enable,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_coreReqArb_perLaneAddr_0_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_0_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_0_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_1_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_1_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_1_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_2_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_2_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_2_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_3_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_3_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_3_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_4_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_4_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_4_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_5_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_5_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_5_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_6_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_6_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_6_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input        io_coreReqArb_perLaneAddr_7_activeMask,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [4:0] io_coreReqArb_perLaneAddr_7_blockOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  input  [3:0] io_coreReqArb_perLaneAddr_7_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [7:0] io_dataCrsbarSel1H_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataCrsbarSel1H_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_0_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_0_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_1_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_1_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_2_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_2_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_3_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_3_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_4_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_4_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_5_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_5_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_6_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_6_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [1:0] io_addrCrsbarOut_7_bankOffset,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output [3:0] io_addrCrsbarOut_7_wordOffset1H,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
  output       io_dataArrayEn_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_dataArrayEn_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_0,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_1,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_2,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_3,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_4,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_5,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_6,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_activeLane_7,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_bankConflict,	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
               io_bankConflict_isWrite	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:103:14
);

  wire [2:0] bankIdx_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire [2:0] bankIdx_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  wire       laneActiveMask_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:170:28
  reg        bankConflict_reg;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33
  reg        conflictReqIsW_reg;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:117:31
  reg        perLaneConflictReq_reg_0_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_0_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_0_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_0_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_1_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_1_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_1_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_1_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_2_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_2_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_2_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_2_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_3_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_3_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_3_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_3_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_4_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_4_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_4_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_4_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_5_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_5_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_5_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_5_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_6_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_6_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_6_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_6_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg        perLaneConflictReq_reg_7_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [2:0] perLaneConflictReq_reg_7_bankIdx;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [1:0] perLaneConflictReq_reg_7_AddrBundle_bankOffset;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  reg  [3:0] perLaneConflictReq_reg_7_AddrBundle_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
  wire       isWrite = bankConflict_reg ? conflictReqIsW_reg : io_coreReqArb_isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :117:31, :134:26
  wire [7:0] bankIdxMasked_0 = 8'h1 << bankIdx_0 & {8{laneActiveMask_0}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_1 = 8'h1 << bankIdx_1 & {8{laneActiveMask_1}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_2 = 8'h1 << bankIdx_2 & {8{laneActiveMask_2}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_3 = 8'h1 << bankIdx_3 & {8{laneActiveMask_3}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_4 = 8'h1 << bankIdx_4 & {8{laneActiveMask_4}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_5 = 8'h1 << bankIdx_5 & {8{laneActiveMask_5}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_6 = 8'h1 << bankIdx_6 & {8{laneActiveMask_6}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [7:0] bankIdxMasked_7 = 8'h1 << bankIdx_7 & {8{laneActiveMask_7}};	// src/main/scala/chisel3/util/Mux.scala:50:70, src/main/scala/chisel3/util/OneHot.scala:58:35, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:{38,44}, :170:28
  wire [3:0] perBankReqCount_0 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[0]} + {1'h0, bankIdxMasked_1[0]}}
       + {1'h0, {1'h0, bankIdxMasked_2[0]} + {1'h0, bankIdxMasked_3[0]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[0]} + {1'h0, bankIdxMasked_5[0]}}
         + {1'h0, {1'h0, bankIdxMasked_6[0]} + {1'h0, bankIdxMasked_7[0]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_1 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[1]} + {1'h0, bankIdxMasked_1[1]}}
       + {1'h0, {1'h0, bankIdxMasked_2[1]} + {1'h0, bankIdxMasked_3[1]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[1]} + {1'h0, bankIdxMasked_5[1]}}
         + {1'h0, {1'h0, bankIdxMasked_6[1]} + {1'h0, bankIdxMasked_7[1]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_2 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[2]} + {1'h0, bankIdxMasked_1[2]}}
       + {1'h0, {1'h0, bankIdxMasked_2[2]} + {1'h0, bankIdxMasked_3[2]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[2]} + {1'h0, bankIdxMasked_5[2]}}
         + {1'h0, {1'h0, bankIdxMasked_6[2]} + {1'h0, bankIdxMasked_7[2]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_3 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[3]} + {1'h0, bankIdxMasked_1[3]}}
       + {1'h0, {1'h0, bankIdxMasked_2[3]} + {1'h0, bankIdxMasked_3[3]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[3]} + {1'h0, bankIdxMasked_5[3]}}
         + {1'h0, {1'h0, bankIdxMasked_6[3]} + {1'h0, bankIdxMasked_7[3]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_4 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[4]} + {1'h0, bankIdxMasked_1[4]}}
       + {1'h0, {1'h0, bankIdxMasked_2[4]} + {1'h0, bankIdxMasked_3[4]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[4]} + {1'h0, bankIdxMasked_5[4]}}
         + {1'h0, {1'h0, bankIdxMasked_6[4]} + {1'h0, bankIdxMasked_7[4]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_5 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[5]} + {1'h0, bankIdxMasked_1[5]}}
       + {1'h0, {1'h0, bankIdxMasked_2[5]} + {1'h0, bankIdxMasked_3[5]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[5]} + {1'h0, bankIdxMasked_5[5]}}
         + {1'h0, {1'h0, bankIdxMasked_6[5]} + {1'h0, bankIdxMasked_7[5]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_6 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[6]} + {1'h0, bankIdxMasked_1[6]}}
       + {1'h0, {1'h0, bankIdxMasked_2[6]} + {1'h0, bankIdxMasked_3[6]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[6]} + {1'h0, bankIdxMasked_5[6]}}
         + {1'h0, {1'h0, bankIdxMasked_6[6]} + {1'h0, bankIdxMasked_7[6]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire [3:0] perBankReqCount_7 =
    {1'h0,
     {1'h0, {1'h0, bankIdxMasked_0[7]} + {1'h0, bankIdxMasked_1[7]}}
       + {1'h0, {1'h0, bankIdxMasked_2[7]} + {1'h0, bankIdxMasked_3[7]}}}
    + {1'h0,
       {1'h0, {1'h0, bankIdxMasked_4[7]} + {1'h0, bankIdxMasked_5[7]}}
         + {1'h0, {1'h0, bankIdxMasked_6[7]} + {1'h0, bankIdxMasked_7[7]}}};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :142:38, :146:57, :147:35
  wire       bankConflict =
    (|{|(perBankReqCount_0[3:1]),
       |(perBankReqCount_1[3:1]),
       |(perBankReqCount_2[3:1]),
       |(perBankReqCount_3[3:1]),
       |(perBankReqCount_4[3:1]),
       |(perBankReqCount_5[3:1]),
       |(perBankReqCount_6[3:1]),
       |(perBankReqCount_7[3:1])}) & (io_coreReqArb_enable | bankConflict_reg);	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :147:35, :158:46, :159:{22,43,47,72}
  wire [7:0] perBankActiveLaneWhenConflict1H_0 =
    bankIdxMasked_0[0]
      ? 8'h1
      : bankIdxMasked_1[0]
          ? 8'h2
          : bankIdxMasked_2[0]
              ? 8'h4
              : bankIdxMasked_3[0]
                  ? 8'h8
                  : bankIdxMasked_4[0]
                      ? 8'h10
                      : bankIdxMasked_5[0]
                          ? 8'h20
                          : bankIdxMasked_6[0] ? 8'h40 : {bankIdxMasked_7[0], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_1 =
    bankIdxMasked_0[1]
      ? 8'h1
      : bankIdxMasked_1[1]
          ? 8'h2
          : bankIdxMasked_2[1]
              ? 8'h4
              : bankIdxMasked_3[1]
                  ? 8'h8
                  : bankIdxMasked_4[1]
                      ? 8'h10
                      : bankIdxMasked_5[1]
                          ? 8'h20
                          : bankIdxMasked_6[1] ? 8'h40 : {bankIdxMasked_7[1], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_2 =
    bankIdxMasked_0[2]
      ? 8'h1
      : bankIdxMasked_1[2]
          ? 8'h2
          : bankIdxMasked_2[2]
              ? 8'h4
              : bankIdxMasked_3[2]
                  ? 8'h8
                  : bankIdxMasked_4[2]
                      ? 8'h10
                      : bankIdxMasked_5[2]
                          ? 8'h20
                          : bankIdxMasked_6[2] ? 8'h40 : {bankIdxMasked_7[2], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_3 =
    bankIdxMasked_0[3]
      ? 8'h1
      : bankIdxMasked_1[3]
          ? 8'h2
          : bankIdxMasked_2[3]
              ? 8'h4
              : bankIdxMasked_3[3]
                  ? 8'h8
                  : bankIdxMasked_4[3]
                      ? 8'h10
                      : bankIdxMasked_5[3]
                          ? 8'h20
                          : bankIdxMasked_6[3] ? 8'h40 : {bankIdxMasked_7[3], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_4 =
    bankIdxMasked_0[4]
      ? 8'h1
      : bankIdxMasked_1[4]
          ? 8'h2
          : bankIdxMasked_2[4]
              ? 8'h4
              : bankIdxMasked_3[4]
                  ? 8'h8
                  : bankIdxMasked_4[4]
                      ? 8'h10
                      : bankIdxMasked_5[4]
                          ? 8'h20
                          : bankIdxMasked_6[4] ? 8'h40 : {bankIdxMasked_7[4], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_5 =
    bankIdxMasked_0[5]
      ? 8'h1
      : bankIdxMasked_1[5]
          ? 8'h2
          : bankIdxMasked_2[5]
              ? 8'h4
              : bankIdxMasked_3[5]
                  ? 8'h8
                  : bankIdxMasked_4[5]
                      ? 8'h10
                      : bankIdxMasked_5[5]
                          ? 8'h20
                          : bankIdxMasked_6[5] ? 8'h40 : {bankIdxMasked_7[5], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_6 =
    bankIdxMasked_0[6]
      ? 8'h1
      : bankIdxMasked_1[6]
          ? 8'h2
          : bankIdxMasked_2[6]
              ? 8'h4
              : bankIdxMasked_3[6]
                  ? 8'h8
                  : bankIdxMasked_4[6]
                      ? 8'h10
                      : bankIdxMasked_5[6]
                          ? 8'h20
                          : bankIdxMasked_6[6] ? 8'h40 : {bankIdxMasked_7[6], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] perBankActiveLaneWhenConflict1H_7 =
    bankIdxMasked_0[7]
      ? 8'h1
      : bankIdxMasked_1[7]
          ? 8'h2
          : bankIdxMasked_2[7]
              ? 8'h4
              : bankIdxMasked_3[7]
                  ? 8'h8
                  : bankIdxMasked_4[7]
                      ? 8'h10
                      : bankIdxMasked_5[7]
                          ? 8'h20
                          : bankIdxMasked_6[7] ? 8'h40 : {bankIdxMasked_7[7], 7'h0};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:142:38, :146:57
  wire [7:0] _ActiveLaneWhenConflict1H_0_T_8 =
    {perBankActiveLaneWhenConflict1H_0[0],
     perBankActiveLaneWhenConflict1H_1[0],
     perBankActiveLaneWhenConflict1H_2[0],
     perBankActiveLaneWhenConflict1H_3[0],
     perBankActiveLaneWhenConflict1H_4[0],
     perBankActiveLaneWhenConflict1H_5[0],
     perBankActiveLaneWhenConflict1H_6[0],
     perBankActiveLaneWhenConflict1H_7[0]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_1_T_8 =
    {perBankActiveLaneWhenConflict1H_0[1],
     perBankActiveLaneWhenConflict1H_1[1],
     perBankActiveLaneWhenConflict1H_2[1],
     perBankActiveLaneWhenConflict1H_3[1],
     perBankActiveLaneWhenConflict1H_4[1],
     perBankActiveLaneWhenConflict1H_5[1],
     perBankActiveLaneWhenConflict1H_6[1],
     perBankActiveLaneWhenConflict1H_7[1]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_2_T_8 =
    {perBankActiveLaneWhenConflict1H_0[2],
     perBankActiveLaneWhenConflict1H_1[2],
     perBankActiveLaneWhenConflict1H_2[2],
     perBankActiveLaneWhenConflict1H_3[2],
     perBankActiveLaneWhenConflict1H_4[2],
     perBankActiveLaneWhenConflict1H_5[2],
     perBankActiveLaneWhenConflict1H_6[2],
     perBankActiveLaneWhenConflict1H_7[2]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_3_T_8 =
    {perBankActiveLaneWhenConflict1H_0[3],
     perBankActiveLaneWhenConflict1H_1[3],
     perBankActiveLaneWhenConflict1H_2[3],
     perBankActiveLaneWhenConflict1H_3[3],
     perBankActiveLaneWhenConflict1H_4[3],
     perBankActiveLaneWhenConflict1H_5[3],
     perBankActiveLaneWhenConflict1H_6[3],
     perBankActiveLaneWhenConflict1H_7[3]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_4_T_8 =
    {perBankActiveLaneWhenConflict1H_0[4],
     perBankActiveLaneWhenConflict1H_1[4],
     perBankActiveLaneWhenConflict1H_2[4],
     perBankActiveLaneWhenConflict1H_3[4],
     perBankActiveLaneWhenConflict1H_4[4],
     perBankActiveLaneWhenConflict1H_5[4],
     perBankActiveLaneWhenConflict1H_6[4],
     perBankActiveLaneWhenConflict1H_7[4]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_5_T_8 =
    {perBankActiveLaneWhenConflict1H_0[5],
     perBankActiveLaneWhenConflict1H_1[5],
     perBankActiveLaneWhenConflict1H_2[5],
     perBankActiveLaneWhenConflict1H_3[5],
     perBankActiveLaneWhenConflict1H_4[5],
     perBankActiveLaneWhenConflict1H_5[5],
     perBankActiveLaneWhenConflict1H_6[5],
     perBankActiveLaneWhenConflict1H_7[5]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_6_T_8 =
    {perBankActiveLaneWhenConflict1H_0[6],
     perBankActiveLaneWhenConflict1H_1[6],
     perBankActiveLaneWhenConflict1H_2[6],
     perBankActiveLaneWhenConflict1H_3[6],
     perBankActiveLaneWhenConflict1H_4[6],
     perBankActiveLaneWhenConflict1H_5[6],
     perBankActiveLaneWhenConflict1H_6[6],
     perBankActiveLaneWhenConflict1H_7[6]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  wire [7:0] _ActiveLaneWhenConflict1H_7_T_8 =
    {perBankActiveLaneWhenConflict1H_0[7],
     perBankActiveLaneWhenConflict1H_1[7],
     perBankActiveLaneWhenConflict1H_2[7],
     perBankActiveLaneWhenConflict1H_3[7],
     perBankActiveLaneWhenConflict1H_4[7],
     perBankActiveLaneWhenConflict1H_5[7],
     perBankActiveLaneWhenConflict1H_6[7],
     perBankActiveLaneWhenConflict1H_7[7]};	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,77}
  assign laneActiveMask_0 =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_activeMask
      : io_coreReqArb_perLaneAddr_0_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_0 =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_bankIdx
      : io_coreReqArb_perLaneAddr_0_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_0_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_0_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_0_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_0_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_0_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_1 =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_activeMask
      : io_coreReqArb_perLaneAddr_1_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_1 =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_bankIdx
      : io_coreReqArb_perLaneAddr_1_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_1_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_1_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_1_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_1_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_1_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_2 =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_activeMask
      : io_coreReqArb_perLaneAddr_2_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_2 =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_bankIdx
      : io_coreReqArb_perLaneAddr_2_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_2_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_2_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_2_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_2_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_2_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_3 =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_activeMask
      : io_coreReqArb_perLaneAddr_3_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_3 =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_bankIdx
      : io_coreReqArb_perLaneAddr_3_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_3_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_3_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_3_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_3_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_3_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_4 =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_activeMask
      : io_coreReqArb_perLaneAddr_4_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_4 =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_bankIdx
      : io_coreReqArb_perLaneAddr_4_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_4_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_4_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_4_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_4_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_4_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_5 =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_activeMask
      : io_coreReqArb_perLaneAddr_5_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_5 =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_bankIdx
      : io_coreReqArb_perLaneAddr_5_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_5_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_5_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_5_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_5_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_5_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_6 =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_activeMask
      : io_coreReqArb_perLaneAddr_6_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_6 =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_bankIdx
      : io_coreReqArb_perLaneAddr_6_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_6_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_6_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_6_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_6_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_6_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign laneActiveMask_7 =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_activeMask
      : io_coreReqArb_perLaneAddr_7_activeMask;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  assign bankIdx_7 =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_bankIdx
      : io_coreReqArb_perLaneAddr_7_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :123:70, :170:28
  wire [1:0] perLaneConflictReq_7_AddrBundle_bankOffset =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_AddrBundle_bankOffset
      : io_coreReqArb_perLaneAddr_7_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :125:95, :170:28
  wire [3:0] perLaneConflictReq_7_AddrBundle_wordOffset1H =
    bankConflict_reg
      ? perLaneConflictReq_reg_7_AddrBundle_wordOffset1H
      : io_coreReqArb_perLaneAddr_7_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :170:28
  always @(posedge clock) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    automatic logic [7:0] _ReserveLaneWhenConflict1H_T_1 =
      ~{|_ActiveLaneWhenConflict1H_0_T_8,
        |_ActiveLaneWhenConflict1H_1_T_8,
        |_ActiveLaneWhenConflict1H_2_T_8,
        |_ActiveLaneWhenConflict1H_3_T_8,
        |_ActiveLaneWhenConflict1H_4_T_8,
        |_ActiveLaneWhenConflict1H_5_T_8,
        |_ActiveLaneWhenConflict1H_6_T_8,
        |_ActiveLaneWhenConflict1H_7_T_8};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:167:{39,83}, :168:{45,49}
    automatic logic       ReserveLaneWhenConflict1H_7 =
      _ReserveLaneWhenConflict1H_T_1[0] & laneActiveMask_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_6 =
      _ReserveLaneWhenConflict1H_T_1[1] & laneActiveMask_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_5 =
      _ReserveLaneWhenConflict1H_T_1[2] & laneActiveMask_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_4 =
      _ReserveLaneWhenConflict1H_T_1[3] & laneActiveMask_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_3 =
      _ReserveLaneWhenConflict1H_T_1[4] & laneActiveMask_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_2 =
      _ReserveLaneWhenConflict1H_T_1[5] & laneActiveMask_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_1 =
      _ReserveLaneWhenConflict1H_T_1[6] & laneActiveMask_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    automatic logic       ReserveLaneWhenConflict1H_0 =
      _ReserveLaneWhenConflict1H_T_1[7] & laneActiveMask_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:168:{45,84,107}, :170:28
    if (reset)	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      bankConflict_reg <= 1'h0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33
    else	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      bankConflict_reg <= bankConflict;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :159:47
    if (bankConflict)	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:159:47
      conflictReqIsW_reg <= io_coreReqArb_isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:117:31
    perLaneConflictReq_reg_0_activeMask <= ReserveLaneWhenConflict1H_0;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_0 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_0_bankIdx <= io_coreReqArb_perLaneAddr_0_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_0_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_0_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_0_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_0_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_1_activeMask <= ReserveLaneWhenConflict1H_1;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_1 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_1_bankIdx <= io_coreReqArb_perLaneAddr_1_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_1_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_1_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_1_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_1_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_2_activeMask <= ReserveLaneWhenConflict1H_2;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_2 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_2_bankIdx <= io_coreReqArb_perLaneAddr_2_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_2_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_2_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_2_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_2_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_3_activeMask <= ReserveLaneWhenConflict1H_3;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_3 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_3_bankIdx <= io_coreReqArb_perLaneAddr_3_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_3_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_3_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_3_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_3_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_4_activeMask <= ReserveLaneWhenConflict1H_4;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_4 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_4_bankIdx <= io_coreReqArb_perLaneAddr_4_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_4_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_4_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_4_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_4_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_5_activeMask <= ReserveLaneWhenConflict1H_5;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_5 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_5_bankIdx <= io_coreReqArb_perLaneAddr_5_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_5_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_5_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_5_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_5_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_6_activeMask <= ReserveLaneWhenConflict1H_6;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_6 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_6_bankIdx <= io_coreReqArb_perLaneAddr_6_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_6_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_6_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_6_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_6_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
    perLaneConflictReq_reg_7_activeMask <= ReserveLaneWhenConflict1H_7;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :168:{84,107}
    if (~ReserveLaneWhenConflict1H_7 | bankConflict_reg) begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:116:33, :119:35, :168:{84,107}, :173:39, :174:41, :175:44
    end
    else begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :173:39, :175:44
      perLaneConflictReq_reg_7_bankIdx <= io_coreReqArb_perLaneAddr_7_blockOffset[2:0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :123:70
      perLaneConflictReq_reg_7_AddrBundle_bankOffset <=
        io_coreReqArb_perLaneAddr_7_blockOffset[4:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35, :125:95
      perLaneConflictReq_reg_7_AddrBundle_wordOffset1H <=
        io_coreReqArb_perLaneAddr_7_wordOffset1H;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:119:35
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `ifdef FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `FIRRTL_BEFORE_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      automatic logic [31:0] _RANDOM[0:2];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `ifdef INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        `INIT_RANDOM_PROLOG_	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        end	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
        bankConflict_reg = _RANDOM[2'h0][0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33
        conflictReqIsW_reg = _RANDOM[2'h0][1];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :117:31
        perLaneConflictReq_reg_0_activeMask = _RANDOM[2'h0][2];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_bankIdx = _RANDOM[2'h0][5:3];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_AddrBundle_bankOffset = _RANDOM[2'h0][7:6];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_0_AddrBundle_wordOffset1H = _RANDOM[2'h0][11:8];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_activeMask = _RANDOM[2'h0][12];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_bankIdx = _RANDOM[2'h0][15:13];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_AddrBundle_bankOffset = _RANDOM[2'h0][17:16];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_1_AddrBundle_wordOffset1H = _RANDOM[2'h0][21:18];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_activeMask = _RANDOM[2'h0][22];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_bankIdx = _RANDOM[2'h0][25:23];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_AddrBundle_bankOffset = _RANDOM[2'h0][27:26];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_2_AddrBundle_wordOffset1H = _RANDOM[2'h0][31:28];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :116:33, :119:35
        perLaneConflictReq_reg_3_activeMask = _RANDOM[2'h1][0];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_bankIdx = _RANDOM[2'h1][3:1];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_AddrBundle_bankOffset = _RANDOM[2'h1][5:4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_3_AddrBundle_wordOffset1H = _RANDOM[2'h1][9:6];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_activeMask = _RANDOM[2'h1][10];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_bankIdx = _RANDOM[2'h1][13:11];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_AddrBundle_bankOffset = _RANDOM[2'h1][15:14];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_4_AddrBundle_wordOffset1H = _RANDOM[2'h1][19:16];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_activeMask = _RANDOM[2'h1][20];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_bankIdx = _RANDOM[2'h1][23:21];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_AddrBundle_bankOffset = _RANDOM[2'h1][25:24];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_5_AddrBundle_wordOffset1H = _RANDOM[2'h1][29:26];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_activeMask = _RANDOM[2'h1][30];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_bankIdx = {_RANDOM[2'h1][31], _RANDOM[2'h2][1:0]};	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_AddrBundle_bankOffset = _RANDOM[2'h2][3:2];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_6_AddrBundle_wordOffset1H = _RANDOM[2'h2][7:4];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_activeMask = _RANDOM[2'h2][8];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_bankIdx = _RANDOM[2'h2][11:9];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_AddrBundle_bankOffset = _RANDOM[2'h2][13:12];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
        perLaneConflictReq_reg_7_AddrBundle_wordOffset1H = _RANDOM[2'h2][17:14];	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :119:35
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
      `FIRRTL_AFTER_INITIAL	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_dataCrsbarSel1H_0 =
    isWrite ? perBankActiveLaneWhenConflict1H_0 : bankIdxMasked_0;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_1 =
    isWrite ? perBankActiveLaneWhenConflict1H_1 : bankIdxMasked_1;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_2 =
    isWrite ? perBankActiveLaneWhenConflict1H_2 : bankIdxMasked_2;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_3 =
    isWrite ? perBankActiveLaneWhenConflict1H_3 : bankIdxMasked_3;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_4 =
    isWrite ? perBankActiveLaneWhenConflict1H_4 : bankIdxMasked_4;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_5 =
    isWrite ? perBankActiveLaneWhenConflict1H_5 : bankIdxMasked_5;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_6 =
    isWrite ? perBankActiveLaneWhenConflict1H_6 : bankIdxMasked_6;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_dataCrsbarSel1H_7 =
    isWrite ? perBankActiveLaneWhenConflict1H_7 : bankIdxMasked_7;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26, :142:38, :185:28
  assign io_addrCrsbarOut_0_bankOffset =
    (perBankActiveLaneWhenConflict1H_0[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_0[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_0_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_0[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_0[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_1_bankOffset =
    (perBankActiveLaneWhenConflict1H_1[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_1[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_1_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_1[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_1[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_2_bankOffset =
    (perBankActiveLaneWhenConflict1H_2[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_2[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_2_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_2[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_2[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_3_bankOffset =
    (perBankActiveLaneWhenConflict1H_3[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_3[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_3_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_3[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_3[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_4_bankOffset =
    (perBankActiveLaneWhenConflict1H_4[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_4[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_4_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_4[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_4[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_5_bankOffset =
    (perBankActiveLaneWhenConflict1H_5[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_5[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_5_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_5[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_5[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_6_bankOffset =
    (perBankActiveLaneWhenConflict1H_6[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_6[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_6_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_6[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_6[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_7_bankOffset =
    (perBankActiveLaneWhenConflict1H_7[0]
       ? perLaneConflictReq_0_AddrBundle_bankOffset
       : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[1]
         ? perLaneConflictReq_1_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[2]
         ? perLaneConflictReq_2_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[3]
         ? perLaneConflictReq_3_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[4]
         ? perLaneConflictReq_4_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[5]
         ? perLaneConflictReq_5_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[6]
         ? perLaneConflictReq_6_AddrBundle_bankOffset
         : 2'h0)
    | (perBankActiveLaneWhenConflict1H_7[7]
         ? perLaneConflictReq_7_AddrBundle_bankOffset
         : 2'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_addrCrsbarOut_7_wordOffset1H =
    (perBankActiveLaneWhenConflict1H_7[0]
       ? perLaneConflictReq_0_AddrBundle_wordOffset1H
       : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[1]
         ? perLaneConflictReq_1_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[2]
         ? perLaneConflictReq_2_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[3]
         ? perLaneConflictReq_3_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[4]
         ? perLaneConflictReq_4_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[5]
         ? perLaneConflictReq_5_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[6]
         ? perLaneConflictReq_6_AddrBundle_wordOffset1H
         : 4'h0)
    | (perBankActiveLaneWhenConflict1H_7[7]
         ? perLaneConflictReq_7_AddrBundle_wordOffset1H
         : 4'h0);	// src/main/scala/chisel3/util/Mux.scala:30:73, :50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:77, :170:28
  assign io_dataArrayEn_0 = |perBankActiveLaneWhenConflict1H_0;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_1 = |perBankActiveLaneWhenConflict1H_1;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_2 = |perBankActiveLaneWhenConflict1H_2;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_3 = |perBankActiveLaneWhenConflict1H_3;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_4 = |perBankActiveLaneWhenConflict1H_4;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_5 = |perBankActiveLaneWhenConflict1H_5;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_6 = |perBankActiveLaneWhenConflict1H_6;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_dataArrayEn_7 = |perBankActiveLaneWhenConflict1H_7;	// src/main/scala/chisel3/util/Mux.scala:50:70, ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :188:59
  assign io_activeLane_0 = |_ActiveLaneWhenConflict1H_0_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_1 = |_ActiveLaneWhenConflict1H_1_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_2 = |_ActiveLaneWhenConflict1H_2_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_3 = |_ActiveLaneWhenConflict1H_3_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_4 = |_ActiveLaneWhenConflict1H_4_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_5 = |_ActiveLaneWhenConflict1H_5_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_6 = |_ActiveLaneWhenConflict1H_6_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_activeLane_7 = |_ActiveLaneWhenConflict1H_7_T_8;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :167:{39,83}
  assign io_bankConflict = bankConflict;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :159:47
  assign io_bankConflict_isWrite = isWrite;	// ventus/src/L1Cache/ShareMem/BankConflictArbiter.scala:102:7, :134:26
endmodule

